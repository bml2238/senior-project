%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: oswego_logo_vert_grn.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: Rose Throop%%CreationDate: 11/17/10%%BoundingBox: 0 0 436 302%%HiResBoundingBox: 0 0 435.0655 301.7012%%CropBox: 0 0 435.0655 301.7012%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors: %%DocumentCustomColors: (PANTONE 357 CVU)%%CMYKCustomColor: 0.7900 0 0.8700 0.5600 (PANTONE 357 CVU)%%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 9686 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FFF83FD7EFFA858FD7EFFA82EFD7EFF7D58FD7EFFA858FD7EFF%7D58FD7EFF832DFD7CFFA8FF580BA8FD7DFF2E2D83AEFD7AFFA82D042D83%58A8FD79FF58042D05A88358FD79FF050B040B58FF2EA8FD77FF832D052D%0558FFA858FD77FF7D040B040B2DFFA858AEFD76FF832D050B0458FFFFA8%FD74FFA8587DAEA88358837DA884837DFD73FF59040B052E83FFFFA88483%7D837DFD71FFA8040B040B0458FFFFFFAE2DFFFF5858FD70FF2D0B052D0B%0B58FFFFFF055984FFFF3458FD6EFF580B040B040B0458FFFF7D0B5858FF%FFA82D58FD6CFFA82D052D052D0B0B58FFFFFF057D83FFFFFF832DA8FD6B%FF2D042D040B040B0BA87DA8FF830BAFFD04FF7DFD6CFF2E2D042D050B2D%AE580B0534838358FD72FF0B0B040B52A82D0B0458522D2D5883FD71FF2D%042D59830B2D0B2D0558597D2D2D2EA8FD6FFF052D7D58040B042D040B04%0B2D585858052D58FD6DFF587D2E042D0B2D042D2D2D040B052D5883582D%0B59A8FD6AFF582D040B040B040B0458A858040B0405045858580B2D2DA8%FD67FF2D2D052D052D0B2D050B58FFFFFF582D042D052D2D837D580BFD65%FFA80B05042D040B042D040B0458FD04FFA858050B040B042D5883FD64FF%83040B0B2D042D0B2D042D0B0B58FD07FF582D050B042DFD65FF5805040B%040B040B040B040B0458FD09FF832D0558FD66FF582D0B2D052D0B2D052D%0B0B58FFFFFFA85858FD05FF83FD68FF832D040B042D040B042D0458FD04%FF7D0B2DFD6DFFAE052D0B2D042D0B2D040B58FD05FF2E0B83FD6CFF830B%040B040B040B040B0458FD05FF840483FD6CFFA8052D0B2D052D0B2D050B%58FD06FF2D7DFD6CFF840B042D040B042D040B0458FD06FF2D83FD6CFFAE%0B2D042D0B2D042D0B0B58FD06FF5858FD6CFF830B040B040B040B040B04%58FD06FF587DFD6CFFAE0B2D052D0B2D052D0B0B58FD06FF837DFD6CFF83%2D040B042D040B042D0458FD06FF8383FD6CFFA8052D0B2D042D0B2D040B%58FD07FF83FD6CFF830B040B040B040B040B0458FD06FFA884FD6CFFA805%2D0B2D052D0B2D050B58FD07FFA8FD6CFF840B042D040B042D04050483FD%06FFA8AEFD6CFFAE0B2D042D0B2D040B2EFD09FFA8FD6CFF830B040B040B%042D7DFF522D2D83AEFD71FFAE0B2D052D0B7DA8830B0B0B832E2E2D83FD%6FFF832D040B2DA87D2D040B042DFFFF84580B2D2D83FD6CFFA8042D7DA8%2D0B052D040B0BFD05FF7D580B2D2EA8FD69FFA8587D580405040B040504%58FD08FF582D042D2D84FD67FF582D052D052D052D58FD0CFFAE582D2DFD%64FFA8580505040B040B2D83FD11FFAEFD65FF2D0B050B045883FD7AFF05%0B2DA8FD7DFFA8FD52FFA8A8597D58A8A8FD0DFFA8A8597D58A8FD04FFA8%FFFFFFA8FD15FFA8FFFFFFA8FD17FF8383587D59A8FD10FF837D588383AE%FD0EFFA82D2D040B050B042D2EA8FD0AFF582D040B050B042D58847D832D%2D0B58FD09FF830B2EA8FD08FFA82D2D2D58FD052D2E2D2D2D2E2D2D0B58%FD07FF832D2D040B050B042E58FFA8FD09FF83580B2D050B042D0B587DFD%08FFA8FFA82E040B0405040B0405040B0458A8FD06FFA8050B0405040B04%05040B0458FF2D04052DFD09FF2D05047DFD09FF2D0458AE0B040B040504%0504050405040504FD05FF832D040B0405040B0405040B052DA8FD07FF2D%0B0405040B040B040B040B2DFD08FFA82D042D052E58A884A8582E052D04%34FD06FF0B2D052D2EA884A85958050B2EFF2E0B0458FD09FF2D052D2EFD%08FFAF052D7DFF0B2D0B585883587D5883587D5858FD04FF832D042D052E%58A883A85834050B05FD07FF2D2D050B2D7D83A883832D0B042D2DAEFD05%FFA82D040B0483FD07FF58040B042DFD04FF2D05042D83FD06FF830458FF%7D040B04FD08FF83040B042DAEFD07FF590B04AEFF0B040B83FD09FF83FF%FFFF830B040B0483FD07FF59040BA8FD05FF2D05040B58FD07FF580B040B%05AEFD04FF2E042D0BA8FD09FF83052D0458FFFFA82D050B58FD08FF7D2D%FF832D050B83FD07FF520B052D04A8FD07FF58042DFFFF0B0B0484FD0DFF%2D042D0BA8FD09FF5905FD05FF2E0B050B7DFD09FF832D040B2DFFFFFF7D%040B047DFD0BFF58040B0483FF83040B04A8FD08FFA883FFFF040B0458FD%07FF2D040B04052EFD07FF2D052DFFA82D040B7DFD0CFF58040B0483FD0B%FF2EA8FFFFFF7D0B040B52FD0BFF5805040B58FFFF2D0B0458FD0DFF2D04%2D2DFF7D2D052DA8FD0CFF58050B2DFD06FFA8052D2D2D042EFD06FFA82D%057DFFFF0B2D05A8FD0CFF0B2D0458FD0CFFA8FD04FF34042D2DFD0DFF2D%2D052DFF7D0B040B7DFD0DFF580B040BA8A8040B0483FD0CFF520B042DAE%FD05FF58050BA8040B04A8FD05FF83040B83FFA82D040B7DFD0BFF580B04%0B7DFD10FFA8040B047DFD0DFF83040B048358042D2DFD0FFF0B0B047DFF%2D042D2DA8FD0BFF83042D0BA8FD05FF340458FF2D050B58FD05FF580B0B%FFFFFF052D0583FD0BFF58042D2DFD11FF580B052DA8FD0EFF2D040B520B%0B0458FD0FFF2D04052DFF5805040B045883FD09FFA80B040B58FD04FFA8%040B59FF2D0B042DFD05FF2E042EFFFFA80B040B83FD08FFA8A8FF0B0B04%58FD11FF2E040B2DFD0FFF2D05042D2D052D58FD0FFF520B042EFFFF2D0B%052D042D2D83AEFD07FF2D2D0558FD04FF580B0BFFFFA8052D0BFD05FF2D%0B58FFFFFF0B2D0B5858595858585958582DFFFF2D052D58FD11FF2D2D05%58FD0FFF59042D0B040B047DFD0FFF58040B0BFFFFFF522D040B040B042D%2EAEFD05FF58040B2DFD04FF2E0434FFFFA82D040B58FFFFFF830B0483FF%FFA80B042D0405040B0405040B042DFFAE040B0483FD11FF2D040B58FD0F%FF580B042D2D050B58FD0FFF580B052DFD04FFA8580B0B042D050B057DFD%04FF7D0B042DA8FFFFFF0B0B58FFFFFF2D0B0558FFFFFF7D042DA8FFFFFF%0B0B042E2D2E2D342D2E2D2D2DFFA82D050B58FD11FF2D0B0459FD0FFF83%052D04040B0458FD0FFF58040B0BFD07FF582D040B040B0458FFFFFFA804%0B0483FFFF580B04A8FFFFFF7D040B05FFFFFF2D052DFFFFFFA82D040B7D%FD08FF83AEA8040B047DFD0AFF7D582D582D83FF2D04052DFD0FFF520B04%0B2D050B2EFD0FFF2D2D0558FD09FFAE582D052D057DFFFFFF2D042D58FF%FF58042EFD04FFA82D052D83FFFF2D0458FD04FF0B2D05A8FD0BFF2D050B%58FD0BFF2D0B042DFFFF2D0B0458FD0FFF58052D0B2D0B042DFD0EFFA80B%040B58FD0BFF7D0B040B0BFFFFFF2D0B042EFFFF050B58FD05FF2D0B0458%FFAE040B58FFFFFFA82D040B7DFD0BFF2D0B042DFD0BFF58040B2DFFFF58%040B04FD0FFF0B0B042E83042D05A8FD0DFF83052D04A8FD0CFF580B042D%84FFFF83050B05FF830B04A8FD05FF59042D2DFF590B0BAEFD04FF052D05%83FD0BFF58042D0BAEFD0AFF580B0458FFFF832D050B58FD0DFF830B040B%7DA82D040B2DFD0DFF0B0B042DFD0DFFA8040B0483FFFF830B040B835804%2DFD06FF830B040BA858042DFD04FFA80B040B7DFD0BFF7D0B040B52FD0A%FF58040B2DFFFFFF0B0B042DFD0DFF2E040B04FFFF582D0B0B7DFD0BFF58%2D0B0B7DFFA883FD0AFFA82D052DA8FFFFFF2D2D047D2D0B58FD07FF2D2D%057D2D0B2EFD05FF0B2D0584FD0CFF2D2D052DA8FD09FF580B0458FFFFFF%83052D047DFD0BFF83052D047DFFFFFF2D0B040B7DFD09FF7D0B040B2DFF%FFFF0583FD09FF58040B05FD04FF58040B052D0483FD07FF58040B2D2D04%7DFD04FFA80B040B7DFD0CFF83040B042DA8FD08FF59040B2DFD04FF5804%0B0483FD09FF84040B042DFD04FFAE052D052D7DFD07FF582D050B0BFFFF%FFAE2D0B83FD07FF83052D0458FD04FF580B0B0B042DFD08FF7D0B042D05%2D83FD05FF0B0B04A8FD0AFF83FFFF58042D052DA8FD07FF520B052EFD04%FFAE2D050B0483FD07FF830B0B042DA8FD05FFA8040B040B2D83A8AE837D%2D0B040B0BA8FD04FF040B042E58A8A8A87D58040B042DFD05FF83040B04%052DFD09FF050B040B05FD05FFA82D040B2D7D5859587D5859587D2D58FF%FFFF58040B040B2D83A8AE83832D0B040B2DFD05FFA82D040B042D58A8A8%A87D2D040B040B7DFD08FF2D0B042D052D0B2D050B042D2DFD05FFA82D0B%0B042D0B2D0B2D050B042EA8FD05FFAE2D052D0483FD09FF58042D0558FD%06FF0B0B052D050B040B050B040B050B58FD04FF59050B042D052D0B2D05%0B042D2D83FD07FF58042D050B052D0B0B042D052EA8FD0AFF7D2D040B04%05040B052E7DFD07FF83AE582D040B0405040B0B58FD08FF2D0B042DA8FD%09FF580B040B58FD05FF582D052D052D052D052D052D052D0458FD05FFA8%2D2D040B0405040B052D58FD0AFF832D2D0405040B040B2D83FD0EFFA87D%7D587D7DAEFD0DFFA85859587D7DFD0AFFAE83A8A8FD0BFF84A883FD06FF%AEA8FFA8AEA8FFA8AEA8FFA8AEA8AECFFD07FFA8835858587D7DAEFD0EFF%A88358585883A8FDFCFFFD0EFF8383FFFF83A883FFFFFFAEFFA8A883A8FF%FF83A8FD05FFAFFFAEA8FFA8FFAEFFFFFF83A8FFFFA8FFA8FFAFA883FFFF%AE7DFFFFFFA883A8FFA8A8A8FF83A883FFA8FFFFAEFD06FF59AEFFFFA884%A8FD05FFA8FFA8FFFFFF83A8FD04FFAFFD05FFAEAEFFFFA8FF8483FFFFFF%A883FFFFFFA8FFA8FFFF7D2D2DAEFF2E0458FFFF2D58FFA8052D7DFF2E2D%58FD05FF2DFF2D83FF582D832EFFA82D2EFF5858A858FF830558AEFF0B34%2DFFA82D2D84FF5905A8FF580558FF7D2E832DFD05FF582D2DFFFF580B83%FD04FFA82D835883FF2E2D58FF2E832D832DAEFFFFFFAE2DA82DAEFF2E0B%7DFFA80B2E58FF7D585859FFFF7D04A8FFFFA82DA8FFA82D2DFFFF582DFF%FF2E2DAEFD04FFA82DA82E59FF2D0B2D58FFFF2D83FF832D582DFF582D7D%FFA82D7D2DFFA80483FFFF832DFFFFA82DA8FFA82D0483FD04FFA82DA82D%59FF2D58A8FD04FFA8042D2DA8FF2E2DAEFF58FD042DA8FD04FF580458FF%592DA805FF592D582EFF83042DA8FFFFFF7D0BA8FFFF2DFFFF7D2D34A8FF%5858FFFF2D2E83FD05FF2DFF2D83FF582D2D52FFFF347DFFFF2E2D83FF7D%0B83FFFF0B2D58FFFF842D83FFAE2DFFFFFF2DFFFFFF582DFD06FF2DFF2E%83FF582DA8FD04FF84342D2DA8FF2E58A8FF832D2D2D2EFD05FFA82DA8FF%5858A82EFF840B2D83FF830B58FFFFFFA87D0B58FFA82DA8FF2D2D0458FF%582DFFFF2D2DAEFD05FF2D7D2D7DFF2D58052DFFFF0B58FFFF2D0BA8FF58%2D83FFA82D2E2EFFAF832D2DFF7D2DA8FFA82DA8FFFF832DFD06FF2D582D%83FF2DA8FD05FF842D5804A8FF2E2EAEFFFF04580458FD06FF05FFFF832D%582DFF592D2D58FF7D2D2D59FFFF83342EFFFFFF58FFFF7DAE8358FF8383%FFFF7D2E58FD05FF7D2D52FFFF83838358FF835858FFFFA858FFFFA82D58%A8FF58FF58FFA8582DAEFF7D2DA8FFFF58FFFFFF8383FD06FF832E58FFFF%83A8FD05FFA883AE58A8FF7D2E58FFFF59847DA8FD06FF59FFFFFF582DA8%FFA859A858FF8483837DFD0FFFA8FD70FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2010-11-17T11:13:30-05:00</xap:CreateDate>
         <xap:ModifyDate>2010-11-17T11:13:30-05:00</xap:ModifyDate>
         <xap:MetadataDate>2010-11-17T11:13:30-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>180</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqxL80dTuLDyupgNHub6xtWatKJLdRh/vWq/TkMh2ac8qj8Qy3JtzsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirzb8/dUi&#xA;03yXaXErtGo1WyNVQOf3bmY7Er0EZP4d8ry8nF1cqj8Q9JyxynYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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&#xA;29z/AP/Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:09F0E6D1F3CE11DF8FDDA802789F49E5</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:09F0E6D2F3CE11DF8FDDA802789F49E5</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -301.701 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 301.701 li435.065 301.701 li435.065 0 licpclp[1 0 0 1 0 0 ] concat408.384 287.92 mo406.669 287.92 li406.63 291.986 li406.63 292.49 407.04 292.9 407.521 292.9 cv408.071 292.9 li409.603 292.9 410.642 292.748 410.681 290.166 cv410.712 288.174 409.708 287.92 408.384 287.92 cvcp412.485 301.693 mo412.122 301.693 411.595 301.557 411.364 301.119 cv408.349 295.357 li408.208 295.104 407.888 294.967 407.591 294.967 cv406.63 294.967 li406.63 300.389 li406.63 301.119 406.013 301.67 405.282 301.67 cv404.552 301.67 403.931 301.119 403.931 300.389 cv403.931 287.029 li403.931 286.322 404.571 285.748 405.306 285.748 cv408.509 285.748 li410.2 285.748 413.38 285.865 413.38 290.119 cv413.38 292.635 412.282 293.963 410.794 294.557 cv411.731 296.342 412.626 298.17 413.653 299.955 cv413.7 300.045 413.79 300.205 413.79 300.412 cv413.79 301.076 413.263 301.693 412.485 301.693 cvcpfalse sop/0 <</Name (PANTONE 357 CVU)/0 [/DeviceCMYK] /CSA add_res/CSA /0 get_csa_by_name/MappedCSA /0 /CSA get_res/TintMethod /Subtractive/TintProc null/NComponents 4 /Components [ 0.79 0 0.87 0.56 ] >>/CSD add_res1 /0 /CSD get_res sepcs1 sepf11.2832 233.01 mo11.2832 251.541 23.3984 266.15 38.8379 266.15 cv54.2793 266.15 66.3945 251.658 66.3945 233.01 cv66.3945 214.361 54.2793 199.752 38.8379 199.752 cv23.2793 199.752 11.2832 214.244 11.2832 233.01 cvcp77.6777 233.248 mo77.6777 256.053 60.4551 274.107 38.8379 274.107 cv17.3398 274.107 0 255.936 0 233.365 cv0 209.967 17.1035 191.795 38.957 191.795 cv60.6934 191.795 77.6777 209.967 77.6777 233.248 cvcpf127.682 212.939 mo124.711 204.623 117.348 199.752 107.607 199.752 cv98.582 199.752 91.6934 205.455 91.6934 212.939 cv91.6934 218.162 93.4746 221.135 98.3438 223.748 cv100.125 224.697 103.926 226.24 111.527 228.971 cv126.969 234.674 133.025 240.732 133.025 250.709 cv133.025 264.486 121.742 274.107 105.707 274.107 cv99.1758 274.107 95.0176 273.037 86.4668 269.357 cv85.6348 268.998 85.041 268.881 84.4473 268.881 cv83.1406 268.881 82.0723 270.068 81.7148 271.85 cv81.7148 252.846 li86.3477 261.635 94.0684 266.15 104.639 266.15 cv114.973 266.15 122.1 260.686 122.1 252.729 cv122.1 248.928 120.555 245.482 117.822 243.463 cv115.209 241.443 111.527 239.779 101.789 236.338 cv86.7031 230.99 80.7656 224.814 80.7656 214.127 cv80.7656 201.299 92.0488 191.795 107.371 191.795 cv111.885 191.795 114.734 192.389 119.961 194.646 cv122.811 195.717 124.117 196.189 124.949 196.189 cv126.256 196.189 126.969 195.479 127.682 193.814 cv127.682 212.939 licpf179.695 193.342 mo186.467 193.342 li206.895 260.209 li221.266 199.635 li221.504 198.803 221.623 197.971 221.623 197.377 cv221.623 195.357 220.91 194.291 218.654 193.342 cv233.618 193.342 li230.888 194.646 229.817 196.072 228.868 200.111 cv211.646 273.158 li200.125 273.158 li181.477 211.986 li162.355 273.158 li151.07 273.158 li133.73 200.111 li132.779 195.717 132.066 194.764 129.336 193.342 cv146.795 193.342 li144.895 193.936 144.182 194.764 144.182 196.311 cv144.182 197.021 144.42 198.447 144.658 199.635 cv158.91 259.498 li179.695 193.342 licpf245.45 265.08 mo276.333 265.08 li280.728 265.08 282.032 264.248 283.579 260.447 cv283.579 272.564 li231.435 272.564 li233.931 271.732 234.642 270.545 234.642 266.861 cv234.642 198.924 li234.642 195.24 233.81 193.936 231.435 193.342 cv281.677 193.342 li281.677 205.217 li280.606 201.771 279.302 200.822 275.384 200.822 cv245.45 200.822 li245.45 227.783 li272.649 227.783 li275.856 227.783 277.044 226.955 278.114 224.104 cv278.114 238.83 li277.282 236.1 275.739 235.268 272.177 235.268 cv245.45 235.268 li245.45 265.08 licpf346.63 215.314 mo341.997 204.861 334.872 199.756 324.657 199.756 cv308.622 199.756 296.626 214.006 296.626 233.248 cv296.626 252.49 307.911 266.15 323.825 266.15 cv328.931 266.15 333.446 264.963 338.196 262.584 cv338.196 243.818 li338.196 240.018 337.247 238.83 333.446 237.764 cv352.927 237.764 li349.599 238.713 349.005 239.662 349.005 243.818 cv349.005 266.385 li340.81 271.611 332.142 274.107 322.638 274.107 cv300.544 274.107 285.341 257.717 285.341 233.842 cv285.341 209.732 301.497 191.795 323.231 191.795 cv329.763 191.795 332.731 192.627 341.286 196.549 cv342.591 197.143 343.306 197.377 343.899 197.377 cv344.966 197.377 345.798 196.783 346.63 195.357 cv346.63 215.314 licpf368.673 233.01 mo368.673 251.541 380.786 266.15 396.228 266.15 cv411.669 266.15 423.782 251.658 423.782 233.01 cv423.782 214.365 411.669 199.756 396.228 199.756 cv380.669 199.756 368.673 214.244 368.673 233.01 cvcp435.065 233.248 mo435.065 256.053 417.845 274.107 396.228 274.107 cv374.728 274.107 357.388 255.936 357.388 233.369 cv357.388 209.967 374.493 191.795 396.345 191.795 cv418.083 191.795 435.065 209.967 435.065 233.248 cvcpf9.75391 301.701 mo8.65625 301.701 6.78125 301.287 5.86523 300.693 cv5.45508 300.443 5.20313 300.123 5.20313 299.643 cv5.20313 298.932 5.82031 298.408 6.50586 298.408 cv6.68945 298.408 6.87305 298.451 7.05469 298.545 cv7.9707 298.908 8.81641 299.252 9.82227 299.252 cv11.1035 299.252 11.9512 298.545 11.9512 297.24 cv11.9512 294.037 5.5918 294.451 5.5918 289.713 cv5.5918 286.994 7.83398 285.393 10.373 285.393 cv11.4707 285.393 12.5898 285.666 13.5742 286.146 cv14.0996 286.377 14.4883 286.717 14.4883 287.334 cv14.4883 288.045 13.8711 288.549 13.209 288.549 cv13.002 288.549 12.8203 288.502 12.6367 288.436 cv11.8594 288.115 11.1719 287.814 10.3262 287.814 cv9.22852 287.814 8.47266 288.342 8.47266 289.51 cv8.47266 292.393 14.8086 292.092 14.8086 297.01 cv14.8086 299.963 12.5684 301.701 9.75391 301.701 cvcpf28.9199 288.115 mo26.4941 288.115 li26.4941 300.35 li26.4941 301.084 25.9004 301.607 25.168 301.607 cv24.4355 301.607 23.8184 301.061 23.8184 300.326 cv23.8184 289.029 li23.8184 288.525 23.4063 288.115 22.9258 288.115 cv21.3262 288.115 li20.6172 288.115 20.0449 287.588 20.0449 286.924 cv20.0449 286.26 20.6172 285.713 21.3262 285.713 cv28.9199 285.713 li29.6055 285.713 30.1777 286.26 30.1777 286.924 cv30.1777 287.588 29.6055 288.115 28.9199 288.115 cvcpf40.4199 289.279 mo40.3965 289.189 40.3516 289.143 40.2832 289.143 cv40.2129 289.143 40.168 289.189 40.1445 289.279 cv38.9922 294.311 li38.6953 295.49 38.9512 295.76 39.3867 295.76 cv41.9941 295.721 li40.4199 289.279 licp44.5742 301.654 mo43.6816 301.654 43.248 300.924 43.1094 300.35 cv42.6191 298.975 li42.5059 298.541 42.2988 298.174 41.8418 298.174 cv38.2969 298.174 li37.5059 300.35 li37.3691 300.924 36.9121 301.654 36.043 301.654 cv35.127 301.654 34.418 300.924 34.6699 300.1 cv38.8555 286.42 li39.0391 285.756 39.793 285.553 40.2969 285.553 cv40.8008 285.553 41.5547 285.756 41.7598 286.42 cv45.9473 300.076 li46.1973 300.924 45.4883 301.654 44.5742 301.654 cvcpf58.4453 288.115 mo56.0215 288.115 li56.0215 300.35 li56.0215 301.084 55.4277 301.607 54.6953 301.607 cv53.9629 301.607 53.3457 301.061 53.3457 300.326 cv53.3457 289.029 li53.3457 288.525 52.9336 288.115 52.4531 288.115 cv50.8516 288.115 li50.1426 288.115 49.5723 287.588 49.5723 286.924 cv49.5723 286.26 50.1426 285.713 50.8516 285.713 cv58.4453 285.713 li59.1328 285.713 59.7051 286.26 59.7051 286.924 cv59.7051 287.588 59.1328 288.115 58.4453 288.115 cvcpf73.2852 301.381 mo67.5449 301.381 li66.8125 301.381 66.1719 300.83 66.1719 300.123 cv66.1719 286.971 li66.1719 286.26 66.8125 285.689 67.5449 285.689 cv73.2617 285.689 li73.9492 285.689 74.5195 286.217 74.5195 286.877 cv74.5195 287.541 73.9492 288.115 73.2402 288.115 cv68.8711 288.115 li68.8711 291.088 li68.8711 291.592 69.2832 292.002 69.7852 292.002 cv72.3008 292.002 li72.9883 292.002 73.5605 292.529 73.5605 293.193 cv73.5605 293.854 72.9883 294.381 72.3008 294.381 cv68.8711 294.381 li68.8711 298.107 li68.8711 298.611 69.2832 299.002 69.7637 299.002 cv73.3086 299.002 li73.9941 299.002 74.5664 299.529 74.5664 300.189 cv74.5664 300.854 73.9941 301.381 73.2852 301.381 cvcpf97.2227 301.701 mo93.6543 301.701 92.2813 299.756 92.2813 296.943 cv92.2813 286.787 li92.2813 286.076 92.9004 285.506 93.6309 285.506 cv94.3867 285.506 94.9805 286.057 94.9805 286.764 cv94.9805 296.943 li94.9805 298.545 95.5293 299.369 97.2461 299.369 cv99.0059 299.369 99.7617 298.658 99.7617 296.943 cv99.7617 286.787 li99.7617 286.076 100.379 285.506 101.111 285.506 cv101.844 285.506 102.461 286.033 102.461 286.764 cv102.461 296.99 li102.461 299.826 100.814 301.701 97.2227 301.701 cvcpf119.604 301.404 mo118.779 301.404 li118.322 301.404 117.797 301.174 117.59 300.717 cv113.473 292.049 li113.404 291.932 113.336 291.889 113.291 291.889 cv113.176 291.889 113.063 292.025 113.063 292.139 cv113.063 300.326 li113.063 301.037 112.467 301.631 111.713 301.631 cv110.98 301.631 110.363 301.084 110.363 300.373 cv110.363 286.971 li110.363 286.26 111.004 285.689 111.734 285.689 cv112.559 285.689 li113.016 285.689 113.543 285.896 113.771 286.377 cv117.865 295.092 li117.934 295.229 118.002 295.271 118.07 295.271 cv118.186 295.271 118.277 295.135 118.277 295.021 cv118.277 286.74 li118.277 286.033 118.895 285.459 119.627 285.459 cv120.357 285.459 120.977 285.986 120.977 286.717 cv120.977 300.123 li120.977 300.83 120.357 301.404 119.604 301.404 cvcpf134.301 301.404 mo129.176 301.404 li128.514 301.404 127.965 300.877 127.965 300.26 cv127.965 299.596 128.514 299.115 129.176 299.115 cv130.389 299.115 li130.389 288.775 li130.389 288.342 130.023 287.998 129.588 287.998 cv129.176 287.998 li128.514 287.998 127.965 287.475 127.965 286.834 cv127.965 286.217 128.514 285.689 129.176 285.689 cv134.301 285.689 li134.963 285.689 135.488 286.217 135.488 286.834 cv135.488 287.475 134.963 287.975 134.301 287.975 cv133.088 287.975 li133.088 298.314 li133.088 298.771 133.43 299.115 133.865 299.115 cv134.301 299.115 li134.939 299.115 135.488 299.596 135.488 300.26 cv135.488 300.877 134.963 301.404 134.301 301.404 cvcpf148.191 300.787 mo147.986 301.424 147.232 301.654 146.729 301.654 cv146.248 301.654 145.471 301.424 145.287 300.787 cv141.102 287.107 li140.85 286.283 141.559 285.553 142.475 285.553 cv143.344 285.553 143.801 286.26 143.938 286.834 cv146.637 297.104 li146.66 297.17 146.705 297.24 146.773 297.24 cv146.865 297.24 146.912 297.17 146.912 297.104 cv149.541 286.787 li149.701 286.217 150.113 285.553 151.006 285.553 cv151.92 285.553 152.629 286.283 152.377 287.107 cv148.191 300.787 licpf166.004 301.381 mo160.262 301.381 li159.531 301.381 158.891 300.83 158.891 300.123 cv158.891 286.971 li158.891 286.26 159.531 285.689 160.262 285.689 cv165.98 285.689 li166.666 285.689 167.238 286.217 167.238 286.877 cv167.238 287.541 166.666 288.115 165.957 288.115 cv161.59 288.115 li161.59 291.088 li161.59 291.592 162 292.002 162.504 292.002 cv165.02 292.002 li165.705 292.002 166.277 292.529 166.277 293.193 cv166.277 293.854 165.705 294.381 165.02 294.381 cv161.59 294.381 li161.59 298.107 li161.59 298.611 162 299.002 162.48 299.002 cv166.025 299.002 li166.713 299.002 167.285 299.529 167.285 300.189 cv167.285 300.854 166.713 301.381 166.004 301.381 cvcpf178.186 287.885 mo176.471 287.885 li176.434 291.951 li176.434 292.451 176.846 292.865 177.326 292.865 cv177.875 292.865 li179.408 292.865 180.443 292.709 180.484 290.127 cv180.514 288.135 179.514 287.885 178.186 287.885 cvcp182.291 301.654 mo181.924 301.654 181.398 301.518 181.17 301.084 cv178.15 295.318 li178.014 295.068 177.693 294.932 177.396 294.932 cv176.436 294.932 li176.436 300.35 li176.436 301.084 175.818 301.631 175.086 301.631 cv174.354 301.631 173.736 301.084 173.736 300.35 cv173.736 286.994 li173.736 286.283 174.377 285.713 175.109 285.713 cv178.311 285.713 li180.004 285.713 183.184 285.826 183.184 290.08 cv183.184 292.596 182.084 293.924 180.598 294.518 cv181.535 296.303 182.428 298.131 183.457 299.916 cv183.502 300.006 183.594 300.166 183.594 300.373 cv183.594 301.037 183.068 301.654 182.291 301.654 cvcpf193.982 301.701 mo192.885 301.701 191.01 301.287 190.094 300.693 cv189.682 300.443 189.432 300.123 189.432 299.643 cv189.432 298.932 190.049 298.408 190.734 298.408 cv190.918 298.408 191.102 298.451 191.283 298.545 cv192.199 298.908 193.045 299.252 194.051 299.252 cv195.332 299.252 196.178 298.545 196.178 297.24 cv196.178 294.037 189.82 294.451 189.82 289.717 cv189.82 286.994 192.061 285.393 194.6 285.393 cv195.697 285.393 196.818 285.666 197.803 286.146 cv198.328 286.377 198.717 286.717 198.717 287.338 cv198.717 288.045 198.1 288.549 197.436 288.549 cv197.23 288.549 197.047 288.502 196.865 288.436 cv196.086 288.115 195.4 287.814 194.555 287.814 cv193.457 287.814 192.701 288.342 192.701 289.51 cv192.701 292.393 199.037 292.092 199.037 297.01 cv199.037 299.963 196.797 301.701 193.982 301.701 cvcpf211.135 301.404 mo206.01 301.404 li205.348 301.404 204.799 300.877 204.799 300.26 cv204.799 299.596 205.348 299.115 206.01 299.115 cv207.223 299.115 li207.223 288.775 li207.223 288.342 206.857 287.998 206.422 287.998 cv206.01 287.998 li205.348 287.998 204.799 287.475 204.799 286.834 cv204.799 286.217 205.348 285.689 206.01 285.689 cv211.135 285.689 li211.797 285.689 212.324 286.217 212.324 286.834 cv212.324 287.475 211.797 287.975 211.135 287.975 cv209.922 287.975 li209.922 298.314 li209.922 298.771 210.266 299.115 210.699 299.115 cv211.135 299.115 li211.773 299.115 212.324 299.596 212.324 300.26 cv212.324 300.877 211.797 301.404 211.135 301.404 cvcpf226.743 288.115 mo224.317 288.115 li224.317 300.35 li224.317 301.084 223.724 301.607 222.989 301.607 cv222.26 301.607 221.641 301.061 221.641 300.326 cv221.641 289.029 li221.641 288.525 221.229 288.115 220.748 288.115 cv219.148 288.115 li218.439 288.115 217.867 287.588 217.867 286.924 cv217.867 286.26 218.439 285.713 219.148 285.713 cv226.743 285.713 li227.427 285.713 228.001 286.26 228.001 286.924 cv228.001 287.588 227.427 288.115 226.743 288.115 cvcpf243.868 287.381 mo239.935 294.701 li239.864 294.814 239.821 294.951 239.821 295.092 cv239.821 300.35 li239.821 301.084 239.204 301.607 238.47 301.607 cv237.739 301.607 237.122 301.061 237.122 300.326 cv237.122 294.791 li233.185 287.428 li233.095 287.244 233.028 287.061 233.028 286.857 cv233.028 286.123 233.665 285.576 234.376 285.576 cv234.88 285.576 235.36 285.85 235.587 286.283 cv238.036 290.857 li238.149 291.064 238.286 291.248 238.517 291.248 cv238.767 291.248 238.884 291.064 238.974 290.857 cv241.466 286.236 li241.696 285.803 242.153 285.529 242.657 285.529 cv243.364 285.529 244.005 286.076 244.005 286.787 cv244.005 286.994 243.958 287.197 243.868 287.381 cvcpf267.388 287.588 mo264.868 287.588 264.849 292.186 264.849 293.67 cv264.849 294.998 264.915 299.506 267.388 299.506 cv269.903 299.506 269.833 294.975 269.833 293.67 cv269.833 292.232 269.903 287.588 267.388 287.588 cvcp267.388 301.678 mo262.696 301.678 262.079 296.303 262.079 293.65 cv262.079 290.857 262.696 285.346 267.388 285.346 cv272.146 285.346 272.669 290.904 272.669 293.65 cv272.669 296.279 272.146 301.678 267.388 301.678 cvcpf286.72 288.092 mo282.349 288.092 li282.349 291.135 li282.349 291.611 282.763 292.025 283.243 292.025 cv285.782 292.025 li286.466 292.025 287.04 292.553 287.04 293.213 cv287.04 293.877 286.466 294.404 285.782 294.404 cv282.349 294.404 li282.349 300.35 li282.349 301.061 281.755 301.631 281.024 301.631 cv280.267 301.631 279.649 301.061 279.649 300.35 cv279.649 286.994 li279.649 286.26 280.29 285.689 281.024 285.689 cv286.739 285.689 li287.427 285.689 288.001 286.217 288.001 286.9 cv288.001 287.541 287.427 288.092 286.72 288.092 cvcpf314.958 301.404 mo314.134 301.404 li313.677 301.404 313.149 301.174 312.946 300.717 cv308.829 292.049 li308.759 291.932 308.688 291.889 308.646 291.889 cv308.528 291.889 308.415 292.025 308.415 292.139 cv308.415 300.326 li308.415 301.037 307.821 301.631 307.067 301.631 cv306.333 301.631 305.716 301.084 305.716 300.373 cv305.716 286.971 li305.716 286.26 306.356 285.689 307.091 285.689 cv307.911 285.689 li308.368 285.689 308.896 285.896 309.126 286.377 cv313.22 295.092 li313.286 295.229 313.356 295.271 313.423 295.271 cv313.54 295.271 313.63 295.135 313.63 295.021 cv313.63 286.74 li313.63 286.033 314.247 285.459 314.981 285.459 cv315.712 285.459 316.329 285.986 316.329 286.717 cv316.329 300.123 li316.329 300.83 315.712 301.404 314.958 301.404 cvcpf331.345 301.381 mo325.606 301.381 li324.872 301.381 324.231 300.83 324.231 300.123 cv324.231 286.971 li324.231 286.26 324.872 285.689 325.606 285.689 cv331.325 285.689 li332.009 285.689 332.583 286.217 332.583 286.877 cv332.583 287.541 332.009 288.115 331.302 288.115 cv326.931 288.115 li326.931 291.088 li326.931 291.592 327.345 292.002 327.849 292.002 cv330.364 292.002 li331.048 292.002 331.622 292.529 331.622 293.193 cv331.622 293.854 331.048 294.381 330.364 294.381 cv326.931 294.381 li326.931 298.107 li326.931 298.611 327.345 299.002 327.825 299.002 cv331.368 299.002 li332.056 299.002 332.626 299.529 332.626 300.189 cv332.626 300.854 332.056 301.381 331.345 301.381 cvcpf350.54 300.74 mo350.38 301.447 349.532 301.654 349.075 301.654 cv348.618 301.654 347.747 301.471 347.61 300.74 cv345.849 292.393 li345.825 292.322 345.782 292.252 345.712 292.252 cv345.622 292.252 345.575 292.322 345.575 292.393 cv343.79 300.74 li343.653 301.471 342.786 301.654 342.329 301.654 cv341.868 301.654 341.024 301.447 340.864 300.74 cv337.774 287.037 li337.571 286.123 338.532 285.553 339.239 285.553 cv340.087 285.553 340.591 286.236 340.704 286.877 cv342.188 295.615 li342.212 295.686 342.259 295.752 342.329 295.752 cv342.396 295.752 342.442 295.686 342.466 295.615 cv344.228 286.877 li344.364 286.26 344.661 285.553 345.688 285.553 cv346.696 285.553 347.04 286.193 347.177 286.877 cv348.962 295.615 li348.962 295.686 349.005 295.752 349.099 295.752 cv349.165 295.752 349.212 295.686 349.235 295.615 cv350.7 286.877 li350.813 286.236 351.294 285.553 352.161 285.553 cv352.872 285.553 353.833 286.123 353.626 287.037 cv350.54 300.74 licpf381.036 287.381 mo377.103 294.701 li377.036 294.814 376.989 294.951 376.989 295.092 cv376.989 300.35 li376.989 301.084 376.372 301.607 375.638 301.607 cv374.907 301.607 374.29 301.061 374.29 300.326 cv374.29 294.791 li370.356 287.428 li370.263 287.244 370.196 287.061 370.196 286.857 cv370.196 286.123 370.837 285.576 371.544 285.576 cv372.048 285.576 372.528 285.85 372.759 286.283 cv375.204 290.857 li375.317 291.064 375.458 291.248 375.685 291.248 cv375.935 291.248 376.052 291.064 376.142 290.857 cv378.634 286.236 li378.864 285.803 379.321 285.529 379.825 285.529 cv380.532 285.529 381.173 286.076 381.173 286.787 cv381.173 286.994 381.13 287.197 381.036 287.381 cvcpf391.739 287.588 mo389.224 287.588 389.2 292.186 389.2 293.674 cv389.2 294.998 389.267 299.506 391.739 299.506 cv394.255 299.506 394.185 294.975 394.185 293.674 cv394.185 292.232 394.255 287.588 391.739 287.588 cvcp391.739 301.678 mo387.048 301.678 386.431 296.303 386.431 293.65 cv386.431 290.857 387.048 285.346 391.739 285.346 cv396.497 285.346 397.021 290.904 397.021 293.65 cv397.021 296.279 396.497 301.678 391.739 301.678 cvcpf429.235 301.607 mo428.778 301.607 428.388 301.428 428.138 301.107 cv423.61 295.182 li423.54 295.182 li423.54 300.35 li423.54 301.061 422.923 301.631 422.192 301.631 cv421.435 301.631 420.841 301.037 420.841 300.326 cv420.841 286.834 li420.841 286.1 421.481 285.553 422.192 285.553 cv422.946 285.553 423.517 286.123 423.517 286.834 cv423.517 290.334 li423.517 290.768 423.931 291.154 424.364 291.154 cv427.747 286.557 li428.001 286.236 428.435 286.146 428.708 286.146 cv429.396 286.146 429.97 286.674 429.97 287.338 cv429.97 287.518 429.946 287.771 429.786 287.979 cv425.942 293.033 li425.829 293.193 425.692 293.373 425.692 293.604 cv425.692 293.717 425.692 293.854 425.759 293.947 cv430.22 299.689 li430.403 299.916 430.517 300.146 430.517 300.326 cv430.517 301.014 430.013 301.607 429.235 301.607 cvcpf214.682 26.9238 mo214.682 26.9238 202.883 30.4336 202.883 47.9824 cv210.336 51.4941 li219.65 50.0879 li219.65 50.0879 219.65 33.2402 214.682 26.9238 cv214.682 26.9238 licpf216.545 27.625 mo216.545 27.625 227.239 29.4316 230.438 47.3203 cv230.599 48.2285 229.458 46.9785 229.587 47.9824 cv229.587 47.9824 226.896 33.2402 216.545 27.625 cv216.545 27.625 licpf194.5 51.6113 mo208.99 54.7305 li208.99 70.3301 li184.15 89.8301 li184.15 75.0098 li179.32 75.0098 li194.5 51.6113 li194.5 51.6113 licpf229.688 55.5098 mo229.688 55.5098 207.15 64.3496 232.45 77.3496 cv232.45 77.3496 217.27 66.9512 229.688 55.5098 cv229.688 55.5098 licpf231.071 60.9707 mo231.071 60.9707 227.306 67.2852 232.45 70.3301 cv232.45 70.3301 223.708 66.1699 231.071 60.9707 cv231.071 60.9707 licpf216.178 0 mo214.107 6.75977 li214.107 27.3008 li215.924 27.625 lif213.232 27.5078 mo213.232 27.5078 212.498 22.0996 214.941 22.127 cv216.598 22.1445 215.77 22.127 215.77 22.127 cv215.77 22.127 217.684 22.6523 217.27 27.5664 cv217.27 27.5664 215.613 28.8535 213.232 27.5078 cv213.232 27.5078 licpf215.078 20.7422 mo215.969 20.7422 216.689 19.9277 216.689 18.9219 cv216.689 17.916 215.969 17.1016 215.078 17.1016 cv214.189 17.1016 213.469 17.916 213.469 18.9219 cv213.469 19.9277 214.189 20.7422 215.078 20.7422 cv215.078 20.7422 licpf228.829 108.68 mo228.829 108.68 235.728 105.041 242.169 113.361 cv241.938 156.26 li241.938 156.26 242.255 106.404 228.829 108.68 cv228.829 108.68 licpf171.73 102.051 mo173.109 107.25 li179.953 109.85 li179.953 172.381 li215.717 151.061 li215.717 88.3789 li257.579 107.51 li262.493 99.418 li214.77 78.8457 li214.77 75.9199 li264.708 97.1113 li265.169 93.7305 li214.568 72.541 li212.037 72.541 li171.73 102.051 licpf172.707 179.662 mo176.617 183.303 li179.607 187.072 li213.188 172.381 li217.098 171.08 li217.098 159.643 li263.099 176.541 li264.247 172.9 li216.867 157.303 li213.547 157.303 li172.707 179.662 licpf217.199 54.4023 mo217.309 55.0273 li231.606 52.7305 li247.935 71.9648 li247.935 67.0586 li231.872 52.043 li217.199 54.4023 licpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]][/CSD [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (Rose Throop) (SUNY Oswego, Publications)%%Title: (oswego_logo_vert_grn.eps)%%CreationDate: 11/17/10 11:13 AM%AI9_DataStream%Gb"-6H&l4PE?P5el9!K["),>Z47?\1=J2\*gT-rN#A,5'0GX`/Td3gtjFBTiX8V\*\23$C=3[e*'tit'@J>]&QUbRs>T"FTeQ9dM%mpCSElLjV,DuTJiqc<HbLOBYPT6oFCp!s(ip$KpE=%08s.ilf=[8ndl%Tf7Z86<@0%^00QH1Cmmjm.-*I/E'Fb9)3r]t&Xap;_)p%?QFTaIrkMProNO:[h$gBmG!mnQk-ql^41;*rQj@cr:]7,Dt_"Y"NTEHHb]RMq<q[>Z_tPUr6s7Nmb`NonsB*s?bH=9V[r:iO8)0B%%K67]bBNEJZTioFpJXj_msf`Zk!;&6s2co)5QB7eIX\Va\aE8no]r]SjQU=WqN"RSDt`V!p:Z)cJ/*9nbN<%/D=?TXPCNK'jmQRT%q!RP@GH]l9ra0#R?[qb>iJ7<nmp6XpU+9;j++)"Wa59c-n3Wt!\-g=]r9]BbJCf6MF)Us0*'ucS+#n`FVcPPOr6>4RcX4>2rU.pk%Ipfqfo$n+;pu1VPmp>r75[j1k?[H2E\*rcm^A[`j=76,0"R>p=cea'Lnm4TRmd9so7&H`?+9-A4?Tio9qj6c%8D`.:a)M343;EoY%oBuE]?G>Nh^]o8X_opZHHLjq^gLmecIIdbA>:TOOKN-.O2laUZ4TMu@:X+0f'5PDX[GhNln4T/@?bCg[qcBu9J_,<^>53l^YJ)*S%:]o3=s*1-`l2RpdF!kD/n(ta*/Y*+"4T0*Gj4r22^>fEHo`lVkf?[g[j,CB//=Qj73<BZ&^4-(Lq)A1W>1rr%QiDD^r6%0t:^93>%ikM>J^V/[BVisGW`8<</[kZmO1%Mf_\+hkr<=5$A"eSE';Pdd#;JpE\cJGg"moZI)&&-j]QKfJ`iEu@5Q9(S@eEMX)Skf(*l%EVc%Dt2T:gJ[P.gKXUTp6OUp*clhA5MRH4Mf7nT1%)cmJ$B]J$3.tB3$oXpIto8cJ$BEB#lhk`.jk$s*#&=0:H0Qr(MdJBEQpHer"mD5%^Cc?5_DW:$gch%@ET+Z7k4TR!3^;8<`\CtcZ%W/JRlk`Z4nkNE`iWasFcNg3s'R8q+9%0UnI4ueq)b0&r/IOlHof0('n-t>L]??I%NfN9Es5fgs"TQG=3'R8,B9B0Hn]L6/Mb4*(F/9tL1[Z>p*D8-D'JDRhmQL96qo.rCbrT3:6@Z3JN_V#:7u)$SW;0X;+9%1pR(dQf%N"^XVs2?`Q]%pF[ft)>DF5-gq\'hM/MGbDeS10/+6.^h9.H?tGa&qMJ)/n/KSIlk]pDln@lWcNdcen=)pRG;3;_u`[j+_?ZV&uSl%Z.f#Eh,h0ka3%:B%GGI[<k9CFLMm\AdZm".=g:*O!ILW0`4#t0['/1jD3sSM2naG-K>3g)HMIku^DXf^-RF3_^\MO:<R)!j^\Od.%INH9"V_rp@:"sRVF#`YJj#?uXO8M+ho?Zj*lYD66hu%P:_p@@%s#BmaIZAK)s73hnZTdnt(gfh3P]*`;N@j!nf:1OL6d&4($9.la%]cJm+C\QA0[MZ1+Y7lA7H^gKd*q5ZbgY6Z\Y$4"r4U8"Wg*MD;gPs?t.M"5"&$<f%0ULVC-$P#TW.R]CDTCjX%HGY,NV')W&$[tj%%m;'q[9<,Br!qW"msq:<CZ87bqJa@>[KqAlQLHh\%k,PjlHJ4a7=Gob`GnNgO"bEPlNc&Op&W3&]`W(<&$R,M(OCP[E\N7)'%&GJ%HX1M+GO$/UCe(Mk(0:UtO@l,JT3;.Xc8B)Rq/76;iia?lD8s>u!:tl=`_u=#m4E^<m;_MQG<@[;<DZ>+W-:6'(1a9DZuqV$$Ig$[%2(7kDfLqqfO0-:/TdCUp`4G/^R).SD24!;@0%BK3NHE-&e=Il8YWhtm#o`h$@LM&-TlNZk.t2$[W;YMMm:5S6_?&P^`\1F`8s&40%rQ"(Gf#?-:.ZRrW2.K)FSXX'q9-JH9qs[qS)8lH4dHGKgKbHLHH7(6UhFbZ\#(4f\8cA@Pg:h`1g<TUC[R`6>nL_]T4AK[ul`)'i%(9-=RO,^D&7X/T?bq:fM-r&u/N!Oq)W,UOWlJe3mgfWAj%N.W'8omM&ou*)>Z00bcE_4Fqg>$2/($$rC[c!Z)/[r'8>+JX<C:mtY%gVe9_26Hg>n)\4%BiF>&j*%SfGmW*4qs#@pWT;(/-YuE0<G(H(+14;nB;7Y*H\G%nn'E[r1%T2]eu2(!]$m%EhOuJdauaFtO1>A8%$g&EQ1&MZ.`1J:E)k[u):,b:RTT@q>C;_u6Y=B[k#:<a&'*bF)>i3PlBr*PLnHq2"e5]Z`T?)Xd#gV2_!RO;FNfduB/6p@1DX\TM%):7u[rjC<%pX7OSGsucbH1$Kd*fs;UV5g?1h`9%'&77l/L+mhbKIP6`(!8$Gg<(tWmC>![d>3X#HH28-mGmOU=*1Mg(rp381WJ4o%Bs[?;KQ7BE9=Pc&l:_NT<mqrj>KBTYK#e44$/VDb72o@9E5O_ff#feIXlGn9E6bSiIPYSVr[i@E]JAVf;"GO0R9'C6,dp6\V)k3P%Sf=HqCi<,L.n;Ib[-UBHq/o\JkZm+,k[e-sUsKR2TI$D8^ml4pNetfP.gg8kANJ!V=J<ZiLQp/+L,G+>;?pn^67)>0V&GDOHc+PY%cjb@A'4E``W)UMsauBrTYnfXR(O8JNXbXrToZqR(<]IM-f]TZ[glgh+oeeAD=;$IZV"RE,*^%?h/`W%0+:;S;CZ\XJ3pDA(Q!`-*%.mkX&?d$qk,0UZ7%f573;6=s"\./6EcM,[lXkfY_l7gp)0#sCtEZ\QX/5,+@U!J#*>HCh=Fmr/g!VKVB0U4U-Ca2[hK4Dm+XuW9c%]No)k&B0ACSS_O^2Od\CBi-tVaJ/:`WqOX4V=d5rI4LhMl1LKL`,T9+<V3[dZSo+jQ(enUq$6SqE3F6#WaM$-&q6=HQuR)=EM2F3%S=Ee2S7c`1HX5_pV$Q/#do]C$UI:*[f2R5]C,r+F`]@RTJ\@i0NSFOXaJni<D-^e5GbXoa.&Kbh,5=4i4%;B$a!s2)&'^*f5,p/B%8]S09P_j7N/7[F#lG$3]^sOrFUDe%uSn^'`;NJ3jGI3V^Ef?U%dK5C[bBgeZ[5G)P`mR](cLMqOa0IrbUYKCCgp]1C2bJ?d/LL/N%_5LU]C[<3S8GYVuN:Mp]/SP%r\afI>.rt96H:mjgk&JSW-sS9XW\OWY;b+)h_JJlVV;<nMeWRpB!=pn&:J.CCbQX7^10.B[S0_*A%IG^unqeWT.Ds*u[hPf[^d)]`6*MjL6)'ZhZXtQNH>NL:e:Y(j&i#blX[VBak=egdeBGaAp/A4O<leFSOcUCW'1W:90LHThK'55$F%)1O^HM8tac\,L%%`+,n_G9H^8*fFa8&$2l;qB'LFZkB-:Z"gT.iO91EmAcB@qQ8B#&(90LFiKeIVVuaWYmd[O_)7:r.tgf]dgBB$%DT7Ic*P-uDR)WZb9+B$FQ*-t]%<J/`U6OAg;K$.s??=Gl`T+<@W)"lHB5WR_+SAeRG9%=l1h[i0pE]'Z2',mdb#*H?&uS)+jJ\LK%cN;i"1EVnN%pD2Y8+hKsqBD@5g,:;.krW0DC(h#452KcUJ^V?@.$7`.B?:!Hdd=Q-d0HM6Thd4D<iqj2bgu9FAR^]@fqoo4*!XA&%ClRK-lF#:W_KT.3'.!s/@u;P6kVTq3V@u\6'Rrd<RS=.So0dLaF4-2+CXj.grcR6/g#PCrh/0./nlTkN2R%O3BWPrap6fFRRCBCa%Q^54fG[FQs?[@]l4Dsjr%R"m]:+%K&Fgf,;flKFIAY!PC!0,U,$0ss:-$m&/o;l;WSZcPKZ_s(!/Qc%eNs`9+7o6<]`dYf@n=e,+%`*&F9HVCP#o>"pS:KJ'02-m:&qE;@Jcs>g`W=:(n1tBSc'mm@cCA(TICq%6AAj;7=Cg*%d9Zf)le;[o&7VYIM2(HXZD[g,7lauRE%s0d4AAj9LLZu)6(3pN%-9P+fB^_j%Rd."/8,KdAbDY!O6$RnOTgiH]-ZPKRHCZBp9*3ub\eV\*cLWQ0mo#.aX6<Z_`W9?+M;')_O%Top7*?i2Ot4d'b<g1rn-Yh*=LpYk7VHRlfgjMAB$/^\IZJ7Atrf=/6p7c0>8OEe9=@cTNn4dX=JZ6a4l6/Nd6$Z`#rh*EShq;:O"%m!1I:KZio.)K!X/@S,[1&C%g5m(),*GaY?dM0^B\X7%1fF<!D\D-Po\?%W7V/!=(fm/9cl"_r1SH&t34?J\o;P(NP5DV1j[4%[B`%B]fZP7V!qrrhq/Z62%cY]>VAfhYC%f<4r>..-YNA/+NTOpPF+$n3,Kn\^C3[,d1cQ,emIpYZH`G/%M^hW,oojnM%AQOpKf'9_oZR%]@9I4?78:I+8d2Z9:@3@;+2iR3WccF[jq;e["14*4<)2iBU5LglB_7(E-IFQbYrRQ.-jCQY8al<B90hoqQJB['@Su1PEDBM;44e]%q`nIcZtGf(`J_r(O/$qT$q$";9"(XqD$m.OpAetPI>sm\VO$3umO[Zm]pXMBO.IG<[*!Yb$4ab7pAr;rbcM"`Agsb3N-@Ks/R5W2%c!q]a';fB(hm+;:AOo$'[tgqWh<X0BoBmOO*9O.A$-*a;[5!AF5KD%O><;*W(<Yt&o9H`.Phoj`h4?$Ljr-62Y>nb94T@@OcE#2C%I]k&_.Lu.kgEOp2p$,j=e#&..gXMc1eq\N6ZE?/H)b[D&ZejWp*W=gZ8`gU6L%$!Jhg-&ea88,^q&Jc?@iJe2]`&u4^%ee[Rg4no%qb\TSIei]^rL;^9GP3tDoA.T6msj8g2L>AIceh"P=0F@*D"i#IVZ#YDp[@(AIsCkQr=;,@rOY##T,bRpo@oW/?Tru6L]-cBjm2Ab%r-C"MIbaN6!53aPVj@h(HN*2bY90n8=)Tg8nFufer:]#T^3Bl9$Xio*h>::B?@KDYmp9DggtVetmJA"*YlE7C2ttn<j]C#-!>?0j%s)k^=97#Ri04$H3cWcP6l]r$!hu2*5!i7QZ!+5^_f7&$pJ,eg.DkI(!LK?.;)VFiA>2o!7Ts<ALkAO^fpZYP)IfrpRjl*[emU,qf%0W8uCr:9[<GHY?.^\mLQ5JDL?nDW*(?iKK<gP6)P"MK*ZVjI-rI[E01OQWg^huE<>[m)uU2,;Wh?G6=Z<X>hjJ]9VZ5@BHErjtBW%s5>8HpY?p/WT87F6,rZF?U'%P-b*05lj)_jpt:fV1!D,l^B)>6ZbC(u*oVreIsaD-r=<h=J,]kcm5Op7*:KN7puC9"s7m0ZXSoU.%IX_=iDA0VUqli;6^\bLrhsZ)HhiOFY"G,9FgMOVU\+qr<`nPIuDaAN\\[f8b3SbZ@8G8Nr;fBfQ^.C6q`2:9M"697?qYL&1ICqaK%pZo6i=^J9&Fh3SUTfi/U:,f*:e*1s:*DZR_:A%R]q34YE'MeW1(<H%.G^V[pO2o/C+5=%Ab:t*f0cn6[+5Q@8>5.^KF>t<O#EVB0%H74Pr8;DEq#Cc_PX5ER8Id4t&ke4H3Hg/)=*dd+bK5oI[g3#Kb,Da(jg9/t,5bar3$dCW7B.B8Yoi."F:j[&eel$Q`2:bTP"h@`Q%b&o_0@lY6^BWe1r>Z-D)'OTWJhr^DUSPT'K&*+>+\`B8ZN]CX2)lW!J?)LU^VF0VT"E#\<VhD'Oo#\l*GS@:@.3@Lmp=OPn`Y*>d%0uacQFFb.AE!jX)#X,Ok6O>cK&46^e3.L74r3\cbUHePAS$0R$m$!JoGjjJ6_*g>O$a:HK@1L;9@J+"k6JW,]&HBermD&MBnL`+@%ZT.]<^B",dm]56HTZ8-uc@XLG!d-%e:2hV.]J`A`MVTW=Rtm>KTAP.5^\Q&G+Puo#lAJ9A5^rXQX%tbQe;[7.Is1<Whu"HHIZBJ;%G-G@<oXXtb&,bd354@\.dV!e"X&&cN!e'J*T;VVb5?8pY_8"k>j&*6@R*NorJDkl<^Y)<iB4a.[do!R&;7d(I_jj5B%s+@I%V,pE%SM23t6cb(N'd5A"G(^8Q;Rj#&[R?&\=VEP<A5C:>Nl7`T9d-9H45s;+3#;(d9RJ?&mu#&u!q@uBEVpE%h8nb_4t$?r`!:Z8?DjE5%T/M,_oI5\o*hT!V4e7)^KhlskZZH,P5FXmLD=H`g4DBL;fUu.+VegbGk,2M[JAg@(59$64US$T.cd)MPIF@<TdV!e"X6K3^>^#k<%9R?ZD3sU2eci7Ji&n-F,M:uPe9b[1ne1qslR&F>sEf$eB.[I/:cJ2\?8lI+hb2fJ!P$s9Pmte*tMer>q'[*9AoP-L:PG@S)=Sft_%KqB1AkDsY)jQ*q0SZeFV7rn/8+5^q?nI&V"UH&&:N/<$-p\q5VfUf3r^RnJq"ZOgN<DcbqAc5\QACdGWaf]/7Q5uBSR7p..+sRtg%BM.:)O[47c7cb)M,W_'%GpMto%88H1iD[k@6p!3n^skb^1QkBHWR?pVGtT0h-IWWf:Gb;h!(@P8NDMH!fapSN'TGsF7sAL+Z;#Y>%F&$D8U1MKU.9`WcT<a19M*>WhLs/gV<7t4s@s'0m.U/ubZ\m;UFt6e"C:geEb4_l<Y[YMM'mn`@+U^MJaf6pCeu[Q2C=*N\<ioP&%0Sa5ORuH*qCRTf9Bq2NT3EXbSS;9>qN'GQ,C2NC-_)pnP_r=tS]K>.HCU86>n28\HSQig=qsKci07-%XB+Xp$e10rj8RQsuFUhGE%=Cko`#1]6N]1q?UM<%8pB8W;sOtN?2CimKeMe0.g_G6DR'<fT"Jai54/rm1l`k!"fij]YoN%Tu3Ssa*s_MNbSXG2@PBuX=Iii@X<%YbQofrgN0EK`J.rc`;TC2m7dMrYtCclm=*?\oGrV,P7&HT?aAWC&`EQq`?##fr;<"lRX#;B9q,ZXTe:l>UFANGSVp'[>/DiG]k0J%niYpofqA!I9)%K3\S=;']t6l_@![T7*9I=D]hl_"EYWs.qp;K<p=6f;TC`c-M6<M!OGjKp?i3oa/al?D!X)<L5$H+a:#^]'X%mM[%pF1!XDkFdjrS'8\rd&4,6#FSgUefnbS_^$PVsoViDUI9=pdJi)kjBntU@[Bt4b[6b?8T9ln;GR"B".JliaTG"]EFmX1I^jB5?qWB%]$KffX12,;I@ALMW@HW)Y^Q=[G6XGejkoN-:?-2@nV=csLY521FrPq6[oe*fI)I+Gg0XQ!rp99<`@!e=M&/CT$].JtrlL4K[bO=6%1tl7)**r7YM>q7:aGL4gOF]8g?kFD]`=Z4l26`*F0_IQ4OpETb")FmO@QL`^,Hr/H6Fd99m6Q7mi(4f2;["5mJQEk9^pL7qH/4(/%l%,6k?tpRH>6QA*J_;&pl!4D_]*1+NJJgpbMA_dkV,4i-E6Ju7c5RV6"&9b,g]:X(^g8OqfadBB#]05Rf^CE=^'Ag$JLtMBcP>)S%#BkLu[XAVOq\I9*K5)*OY@le^(&3.]ILe?T$(1`%+N&aa#Tsfo#_rIJU4KO.JC$9,n@7_l@'"Sa-kQST"p%XgcudJ<!Km]:'&8*3%j$=m.*JgR$,-$6nl6*Bm+M+_,Wc(1[oH;R+Lpd^9Y(EV<+S(O8qQ>CT0hB]%E"pC5$o5,?XR%&cO#moEf0J3%T^[7=Wfd"%$LQ_m%>"C$8rECJu5W"d`//gMMTk0\Ia^ai)T9!Co:X41`Dm7sq44<4`7-KdoIsA`qdc\IOhP9spTDhtppm?m4W6amq?[5=S_.WM9!h]>B%:#;Mgpb63<:]'sgY)kcB4)pWOg#oQ@6CQLZ0qYnUVqm],:KuE!mRtd%/aI-F-0E[BosFT/o4cBog3nhRjSG#_K,!VO4i4\[;!QVA%L9!R-r`P]@mZOUC\XM+;P,e2cRb$niWqEokf'\^$ospOBmZOUC@82Y;WH0fl+\D]"4lsTXd>(].Yr)YBr*eW,r4qK;q6Q8LY!;Ed%q7t$%X5-4.lU..3(OgQ$=89So>]^Q&r`F1>Uh\!f-r-CD1iIgadhP)2->WJE*]M8,rT=h'q>%@+_NuHG/q(1&>c,j86No[Kg%9n[%WFP<[bRaD8ricnPB:j'*C5C,uGc+QTg-(^F>1K\0;gG9@^"PW7G?WOth,ATs<P@*LQ$6E&dlTI8YI]d;\X2>]V+f1:"o&8D;UQ#:%3B$U6`H].pQ95oP]kENd<V0rRY/b[$$5uUf</t.Vbk4)!MX(R/;i*mO!hQefRd57#'\1*RQ*(`([7$AooN3QFa87c<^?-&L23/IJ%Pb"fBhS";^^HXo3]Dq+k^YUOaTrRlpEW#i.j7l,8rnm19_BhA"8\:m>8^DS.mO;DhZ^nIM$CCC$-gdMB,sC!S]?bOi;p=Flik35F%mWl#3oE58>+]#B'I1o%BXe<V&"En,#-aK<;YCCrq%N,cVJT]W0M\3L?'R$3J/'F:pNU(VcLot;G=5@`3WrU<dV<04&_4WpHD4cEr%Lc9#7bB_0!m<[+KFoUPNq+p*"_<!oY9$Y\9/]YksYMup24mWqjL+TmN\K>5@=f,!GcV?fKM]BL16u2Y`p,Udg.%c]OY3c>dfPq2[%Zr*pPZD1(Q-e]ri-ekQgB1MTrT4X]JT7_QPp,Ughg-.Id\_Ypsoe:XrP"(f1-eX8a*7+R0+7Ipnk\N5&*c1e&r!*/_VZ"PReo0p#%mk/G'?egnGcsHWfCE*88o,HF32PrhY]+:FOpqUSL?E]Ai&^m^@6F*^t?*+?9RHjFV[ABc/NgEl$ahlKFFKhSdb=1!;Y)4VYSZ,s&%^)M@HaXa6#-"&%QBI$c;iA8YIVN5Qn8:e5$'S(F$m,&C&#Wj6t6ujF!q63JrMk/o08d(@b//<%N9#Hd-@-N44+jiFd7?ka!UBnsD%aU4=Lf+dIt9/;-r#0MorZ,KkA8#;U5:,7L!#g*aD,W@e/-qCp!O@V[2_IBA2>o"\j=M1;W3DnQfL<fqSc!m!iZ`\4PnJ^bDCF@nT%/<TP30bS%L#<VY13?G`Qq6t)d-Ao&^ASTq2YVQu6Nl"Q3aU,MKSZ0+Wp3N6hbNT=kDCi@okN:?.kL/"Me4-p-cs8\#[m"q#;MkS;%f[ob[Z%cr'm@H)a&='ES;oT_"WU-33edsRHA*oIcGAB,7=H$7aB_%(RSVES?rd<(Xr'?D9LHXZ>FM`OKq>Ua5%3h0"BOLaS*Q$Jp%`l;ZFhV#"@--`(RmA-j9W7@KimQta;`s(UA]"L>rACL?ge-j<]FrMf[fUl[qV9,Vl]Lp)FUn4FA>8l?E1&K,S@8\2rn1l#^j#ZeB%"E3.oiGTp$dgfs)i^eY[=1!:FNh:>5@CJ:^PD#WHT1Deu`iMn&gO(Ke*7i?pR*@(T@obN1baHd)b\)!odlG$oeN"`!3Co$>4f1"F%l4?%I%dPfI4HdqW4#t#/%ZK_i*TE7#-hT0G*oYN,j.2?9<BJDlk7)XR6=m???F(R5;sge^Z(k`1dQ>D3JCrkC(nZB49kVF_o]dkd%&2R(@Z)</0:/?r8+W3Ek,:CV*/=Cf-e.\P=b2`tjSM/GJApU1@c^HTY&cqIbcl&I\d;q3l!)3utks;[-1nKBKUE*%W_eJVn);e:[%=IH"F<u]aq\nH@/A<Csqb/Qqr.PD](bG/_)ZCGl,ZB4^RWfSYV'@SaSI5`nEC\sXg1V,CBo]ai%:IXlH%^?Hp4ck,a8N6Z9n&b"h%r28U?g%:s(2I%YkqbSqm;94g(4*.36HW&1<.HfP%nu(iuTsAj@/:FP)=*<b/)4hT6XmF!:@d]N'_(o7H_o\WjQJlIV:Q,!OG2dC:%LC:Xtbiuu^QR'[ZWl3m=`;O]h'3`XjZ@7"6lm`/jIi]!/GW_)jM:>1Fm%:Wo^>9M&Js`"urSr$FnL)9(CkpL+2O'eoNi:V<W7`aE%5;K*Ji<NS9cD#,=iK3bC;)Uc^U=41r7HirYhQ+/K$0dQr]X%o\#2fOVA?eD^mrQ/D&k^X0k2YPeYe-=p<UoHdFuZ<DeVCcJ,q$8=%3!]BCJ5+.GC;3B6gl*^IVD+&Jpa%e$Mk&EmGosp=W(V+Kmpi1XAK-9MT)J&JP+[6:><YBes-3cT5O7b%'4jK,\EmfLRka:SfmZNp%5e?`\'<?.g9H`rEs*=Y<jo/JsT,X_VIbG$/2>g6fndkB[4n[,o&-(`Eo_AI&TDoD:5O[)#BD[2U?Z,m,_>iV$pbh>^cmPj_%\Bca%nO*QK(@U52CT?l.?KAX.^Bcu"0E)Q-1p:ZNru(f,:9/chVZ]egiufF7an7dtWFl"m"hkIB\U+OVl(+WX@4?RP%4VB:W,L1[Q-ir@%9\U]jeYk-\c=+7*[=a2SHD6kkmTOP\SJ@O+?j3sA<5[5;NI`a%6N?7BU[Y"]oT/Z&\n,6hUtM6k\.(a]8TR*%cYhFl5nA]*D2/+M%9fI4HWr$d%>S$\,ZUul&7Qh=Bc>Y'_/UKf[3j8D.QuO>TD2J>c[_=Tp\*1(/"$Po(>*#f'li-1MqSmOkkRX6<`>FrZ?XSV7TJ);M%/\5`i^kLUM]7\c&9l5:M:L@:'-DT<IHT]Q">P366;dUGs[Dubi*qW$:QY'e`n3NQ2$sh!r(-PeQoeqp8'etluV?fHekY%]?U;o_9%oV<.:4gkj(qlAO1#-jPOj_CF.\/bJL1XlMTBln7?>pBY.m$?HJb@pODbq*>d.nel,0).>e`,[GD;ZlF`dcd=spt*+sQAh2ASE8b-%Uc^eiGk:oYpWn>Mks_KTP3=d?J"J#-na-SX%<\>:UT3r>:OdWbbqec),QfK4L:d#@qr4W>!pp'1^cuRF&(@"KeYq:Br#O=S.$cWo%,$k@@63aS#E0pX,29I.FQc`<F0s$tRL%4;=a)fb.kL`K<^%AjU@ig<8%uM$G8lsPqC!a$bg)o:R2';JtjqBR8RSA?Xk]m<c-=+G9%Q4NMceYr$C!VHf5+'8ku2eUIQ?b$Xl7Uf&"l&%rh7TEYW_2,ppdIIQpV%R&;._X!@jg3!JjUrst`5`#1YGqsaEW-<K$U&i3nLE\<%9dlrH\Qm8uH=(W^/g#Z:6(_a'.4AIJ#6n&>WhAUK4Z7OL"mH_P$E.$[7!:$,T06dORo?sTW*ahsn+Sksn/QjLp'`ct669Kb"JB["%,5S77JKHjJjK1=eSf0GQoEc2Pb^J"(GuP!3JVSX7F,oG0'C$:/fS)AT#NPCAH-D>$F:+_B*mBQ6kD9NS-A3#S<U;0,4jTp90IB9a%"a3a)H^omp@7p"iQ9J3pg%2R[$mnUs@"t5Bc^q$LW?>?L3k_hjp!FF%N28b+Ks6>_m(mLbMUP%,Ob!@F(1&-p=>_^T^_YRjgi0U?%WG;hr#(\<_D*6-,6XbQmBG8VFE:uD(g0d#\5TM/YFS883aV:C%T(.E^!_.8rJ"EUY?pn-sVP7"#rB([iJV8JN#))Vhp,oMZK?6/G%aN.eIcCUrAVD.$Jm](rkc_"hsU+faE1:bOCjAC.mmQ_E<UlIW*i=nCnZcMf?kXUDbe`Ti5MMFA/QW%!OVcH*%<l5*KIYPFb(?HQj%!T/&$LZ9@0cda8!Z8KY3_E`,2#tG6]KUhAp)>#iU\.sX)p8j,lkb6T#A#rb*.E>Ik"SE$':^6&Y8iV/-*LN%J*eaVde\]#g.*pJj%5_;k#Nl"'(QNlb6#?^:?;qK>5oTI)[(sH@+!;-E!C+B5L\\e!*XCrqW"KeKeF`J-K&Ue1"@f/J/a@E:SpM^'/H@L26NdZ>67hCR-%@3iF7h#=Xe4K[[1rrt)ra'E"9Gj^'QrgrdHAr5"s.89Dl:```tk!sY4A-cU-!lG$*+41_^&&`2bAf?g4b4JH6l=c2T8V^UQ'A^h^%+\H>D#H8lpNdOj)Q_s2a0WqP`M9+L'irI5R1,3)1@"':&5Wq9I:k5K#0J7SPWl-ZD.G'1nf2JCs_C-J4.X"'"YO!,59o9&EA+^AU%n,nr?Af)^tOB35]S-H<B>3CrWk$iOl$jWA3_1@gn?4Z@qT_JV2_%NO%<5g1lZ+&6UCMMC+<MYjeaq"ORnPl9r)Y94o9RhsU6Hp,C%4!u\@ISPOLo(2mD3u:H6O@b=]V\E=R8^A-j]H]K$fEl1Y;PaqSR:U=?P:(EiAO-aTAhOc3ENM],eg*PW47_C\f.jS=l]>_Y#\"nN%_'<#Q`%b1UCI"t'CgKh\QlRYD!,=mY$K?lh*n"Q\Re3`/UqXWb<Ehe7Z-q4,d=&EoK#`^^Zfr0eFmrg%JsqfG1%((T&4)fE`L6Nt%+aVLm+p3(ll>,sdK9f"==!3_#p0Jh`p>NXBp,\s]H>Vs1(g#b8HT!+6fO?+Tra5_.Q5N*tP&:9d+G)j)W45Au7jhGl?hg\l!^0(s%8iA)@6XY#b9:9&+;B\9Gge_JhOe0[qMgh6P36rq_*%7V&25+hr$Od#e8(/KM>X5<^G!,dnI43HKjY-2ToR\W9?+p.E4?"tSig4?0%ZpItXeein]*RRsOIa5Tdpjopr-FNp'9ZhQe+XBi)'L*oOT.6foLfl&KGnA8Oq`OR8[q]j),:b_HK^'(&E.0YW=K7D4D/3=hf5Aac%f'AB)k:A(`=Xp'I:dBqrUsX]Jb;2L4;69W0XpMC2):7`PVA57f-8ls>&h+jCFiRKNgSg3gUA4DKAEgKj(FPNXe/2(oOhk'35<to;%jpPd5eKr`PBCb\H(L[Vi>&s0TrY:,^OX(t2^JZu\Hq@U`&<sOJ&EsD6C*!3XH/taE\F9fMVSg@b-O&Y=$9:n(cCU#KAJhXrD5rd(%7?>6fYUXoKN>e#2W6I'80Ac<$8pO[H#PR"cDnN9@pit.5&=J=S:smWt,+]]I`"G9JcPJcl/+4kUiCQ*UIu&?sUlM,#TXk5@K3G]7%7%)7fM!VFBKi4/A,sc1jWA',eH_c?\c_99mN'Cl`a&agh?[G84]ro\Y_\r[=<XmP8f)Pk!@`-Um'L'h0ldsiTI=3i%O.a29QaA-d%6:>KV&)'Zj8UNf&1\E?VN."-EI3p4f1JRNP'%BtDgZ=q'@nAA."V($t&/?*4K*qL-$t1uF%V)njn5#f'Hk>ksnj.%0bX&4jgQqD/%^HQsm:l>hTquFo,-6n<RoJND+s.6-D+`Vrc::6,8!A9qJAUVtPp%kXsBi_uU^:^KB&_3h_25@!WjHN6JKj*P*/"2]s]$uS0?ONDq%<,o(bRlJl?(rBS*=6C'B1^C37#/90U_3h@,brd=d5JJsg1Y,:a*N\"Vg4hbl/W$I>GgA&/g_?c2P,WR:WHfXaf)jLKo$lnc:1^%r%M<Gb]F=g,V/4o.Q8@;B/]K;7)WWWL23MRL"@$2G?-k)D-#t):=U+mt@[iEY405)6FZY0RrU.(kh5lId$W^EDT*S"p/L<"H2<X3"o%jJa/F(+,ff+.!lDk;lZ(dF!HF1[(0TH2INueb9mj@t2oJ+%t5bR8GYJT9&9J'>nVaFE,(A/3bsr;)MAlr5VY`eaIV7/+;pCNSKSH%pI5``.&)tdrPFLCIiNmjX;Bfiri*oY;1*q)qLWAg(t86")%GcZ9mrP39:^eUg%QR[9O.g4,C`sWmdf!hd-rLVnEnEfpYWZ2qs"FA%pRN@%Wd3=Rbb%B;r''^kW'e%,a'\?'SX!Eu5b6RV'Ecl6!\31r@TF350-'M+T/bh;4oapJb89nkhYf`04TT5LkR("U2/Xu>5ej!&%g@\+f?]P,)np=[D346bF62!.7"oc$$X"33@q<E0_)gMN+TaXFEAs0:]l*'>'>]:ibgarCWVP$t$/QeK@Q!pg$SZU>Q2)#qS?sml$%')^h*eQ0S.J;YSmQeH2Y<l8[&UFe+mkb*jbjKtj)K-,Sr"i>m84KSE?@q!dYC7:&;>-uPYCoYQ8dU^`@b6f6t"I'ElE"Pd1AS[3t%PSqe9d9K_s%GXj\$WHAe4gu9X4:X<Zk-R"T*0N0f/*W0&eRb[PXt89Z;[([t_q^=#ZY@A<KaY!EPN,X^Im`slCHXoXq9)"WjmN-6%S_G7Es*sk9meq%>LpktJ0qi4p1dOr$9&JZ#2u&<*>6'WI]^'hEh^u[;IO)->)*BCZ!$7E<VXFClLN,jE%CciT`*QOVhJ@d)<6u-[%l;Ysr=3<p'#R80hf>QTN?/@@k[4&fp109"?F=gX#h4LnQgqKjh6*=9Q\rL@<?E#B!!5`*V6j>tjUF.2()aRh+dbb1n3VF9f<M2'#%csbRm%&1--k/^:Z,a,o(]R>#&lG^A:DdGYXqj77?!;]:*Lo/tffDE<M3W&[Iqk"jhLDMW#5CE@jh/b.Dp&8m'i.$O^0kX?1SHq*3%4sMi0+;TdO@A)IJi9IjgJ.g9]!',Qk;"jp3[t](0,m3dtd23EdS!.o>KN\rRBmLJp5YuG<k^23*%cPB*@>pGl,$8?.SPLpaCl9,g%alX4mopJ9hO:7qH&-Ctup(!cY_`2`2K&0PAO<`+.Y+l->)o'-VNDG.p?gmjj-XZ?Bje)'29O2[3BXd-)Sf5uZ``.'";$B$?&\T!>%ouXQH.U!t&1,/SnbHQPO)-pc\G7@8o#%u`EUM=5V;?[LsRX/ION4B<M'kok-,-M5:0bGO_2u"Bdb^R>]#RnqjQi2L`<?U!hAg)c2%kmB=[$Un6UL#9"6V0a5EoNauW6;URk_[7=7I&0a$(&cV2dDkON6Yh/5L%Hu?TfD3Qm.''g#1=?e6Gb5S/!$$IM.1!4)Sm7uW2n8k%#.d,(#G[!1$!%VlQ!kBBa6si&__b+*;@5b2:c8KoLoa5:'UThm&[X5jZN3n4&ft)a.TOXbX,`O-+k_KFn%E*3nD+r-5U)*!^dt@0%!=PKFJ?L[j<P0\r^I<Cg$IGJ5p)o4b0W5]',RTY?TFF7GQqRkl>S<=\(h?BmhdrZT0?p+&.4sUTK&.jQo?K**h?j\Y5'SMKYo?BJ%M<+u$+&<'^pgNhf#@Kj)+It+#H"NuTY0:NuOp[R;N.RG,1%?<$i^L(BJRu+.5D$h[eej6VICg/Wj'c7s=@!--:p_Hm@qFn%3WP[_%*uQ&=jo//&6t'IkmgfLd+Ck\R;ApbbV[<`t3oJ?k`#8\r?P[+,h\_gS_8RU7"GBY0DiXQ[aRPk#X6Mp.SH@!5FrXZq4RWd^::taj%A3]u=gAc;>EJcY%F/*M!/V#c;LL\5-=kkX>'7iL]"<J2I_Uf'ZJGAi-@h<\EOj50U?gSYjqRje&`sC/c*\a?L1)EC5ca;[]HK'1c%i8f#66q)SCG:=i\SGHKtCa)l1VQp$sk3OmY_GuVlSUn_VfW[F<f@"?j`#W9hSEF?(m6dfR,d/0g8LdZ21'V"r:#]BJ#q?$i@<N/]%qpr=/1Lr4+\Jc-,RE0Ba^I/7!TL5FZkUnJ)<C'ktKf8.JiW_juPX@5MnV!b@mh=`5DY1#X"0)MG*Os;Rgq$G/-?98)]iCeA\6c]l%-r#LWn'tp\(Jk..N2:O7"fMAd'^^SD6_qYbicHM4$*Bq+7HUNPM2B.eQ;!"oQUq>D:%qs@"+09H[G]CN9,c<^U^,P::=-"B1)HK6%i@M]3qt9_D2CdVN`MFUlPk-_BW2XsW0]3\5T<->$?.''H&u*<#TYflRPEIh[LH0I$5\`/u+ghI*r?iIMKlnbQa?^]^g!K-e)1V7,%kP*SE9rRC:&XpY?2-M#r>%D*e0VmQ.I4[.!k'j\i=D,fBE'VGk77;3JQ%Y/pfQRB$"/@T<=On_4<<\=hgnA3=UB30Z+D!j`b,jda%Ok+B?83?Oa3`0ZeF<V^>Ye=43_hHrFq"<[A/4JZ>aVZ"d7DdtJkPN__e4Y(>)/]L?^`ehOYW,+<dJJGX3@"?h?geu^S]d.$!qMDR%__]=&E/B=;43'T:#oWo@LN!c>U9Vt$LSZ[QNbPnHQ['TK]e>&A]-kK)hQi/OBJM#sLb>%jIM3UCCsR@qSUdac1D3c&?ri%_PU(#^%HJG@%'$6`\KE$HnOZUq5a9)XXXsToK@U=nlJT^p4N!Z]*fOd/E2La<t?O]HUpr9Ns&[[PA9uLsGd0>)LKRo]!46:7FbDH*8>a<kg%^7>uocg9SQB\ubkf"/`OJiS85K)$G>f]:MnH2[]YU\@WG^<cQGO[1Bj%2W"8CP@*r+:^!F-=fbfSO;TmoB"(CI3tf33n\aN*K%rP%.:I%CDsKkkk1B$%L"iCRN2j;75SWk`WaJKc)Q/0coB1P`fhi:$(X,gVT/f[^=C[:8'9X=g,m:XoEbCKR.q3hj*&?C)RP??A*_]tq%@(*C:?U8(bc7:X_aoI/;&l4)cYUd_2Xc7P*R0Nn=a].o*1g]8d:SUF/#=8\,NsX05ZKGth1T=VnATh-:qYl*1=__b7Pen]`TMH[S%8W8"@.qRs0BMmb&nj#U'X$uR.M>&i+hT9,V/m=RBN7fbBTWFFfoIqD#Gt'-a\<i#0)_abP,QY.BSkT(g,o>]s[;m'<%_,?M1C)$B%[pb@B-^sY$4M[*k'Z9gMO@KSBa;*k;&>_)p'8%CX3J`aI5QPCV8&XnY]eYJe=iTMU^#jU<o/220O$9]_8e12"8Qfn?+so3JBj(8A%?W%^`a9gi4b^(eb#Dj^XiJB#O5Y:hOMXXqge)NTmb/G/F=ee&'<"K7C7Sf8;7tZFl;(A6FC.5-?_e3Wr@3S]&M^IhC<)IP;6[D&!%!*4M`cmnZg/abp*-u5io&-o>3AAT!)$X,tJJhCLY<[\(ZYH95hKiV])GYfpuWRR7;M[DdKfBYi/r<b@J/d\rho?e)+`LVQ"o,5Lk%hp+lH"To:]s"<LmA%[`CCO3t\8_*P]_;aH>)H[P%+Fp9eMI7%?*g;Fg&QtC'1(e?B"+WD8#o6No8;!H](5^<!r?_QZfVZhJK#N/#%(=JXZnQ6a:[Y\CM[5[<W7,/)/A$#oEfP4[>.fb!3I7^VE.I)jBH7^stECm@QN/g3,!%Ye\27_]N)mb`b>YtrgXW"aE`S,*5P:Q9(%=OBO>!5ugI96pbLa'ecZ]p9!6ZE<=*rC8`2'to3)l9\b)CCuG/&1gq0@UW"G$]W$%j-jG^0<Ae]'T7#QW<X*U!Y.O1r(Rk5i/$g?%"i[4"LHX#u`Bp]_a`bWkYrFDLB/*77p7R)Qh^$#SgQZtQZ;hD2Y=Z/QLRUiCNWoa5<mU>T7C22.XMj'ER`2SH[O'1!5K*@cZfjY,%9V3!CG%6YeB[PjEg6uWSA#Zc,=dVcA:S9NPKuiqoU=ngs)bi-s,>qmhTNM7meqY!bem^7cM.SiA2d+LD`N;B_U^#(Qjpo^"DU<3R%WHZQ3#L/FT>e']"ZfkdL4g/N7('mgSJnECl&PHK[/:u'l!17@1?gR0OBGNN4Eq!k5X\PG''?sRuTr4A:pgT^LcY4/rbU+8D'@#MX%*cnlKB%q!<ctpT>K=]>5br/).V$iH'(q)]7"V]!eV(1#.Op+7#P&(fR6E;f&F[`UA.DMb5L+*PSP%J^/,dRH?BsrX4QfFNHThe6b%X+P#Rj($gOR`0]Y*o!,q>N1am"jJs@R2GRKAm8Q).s@\@Pto[k$-pCTN*N(HI]gQiPg6inW"l3jL9RE'^="0Y>#?Ye@7@:X1Sq1O%[8XU)RTRs'h;aAp0i();klaV+CLS%JrKin;^OH.Xq8:DET>^H$*D7<?RaD4hOnrd+7\;ubp;b[2LURo?P<$B)A_r!G!`l_?Q=(;e%9#W?i-?5e>chShg1?(S6!IBcjE%EUZW4Q2lRI=k!$,.(W)?Z8aae).DJR]59'c;N@LlcQ`Q;qgm@BF\VenRR5ZJ35c'bq0aHJ;]V%^k($Tg%SP3oV4mI\(Jt"G2Ar;M"4?'CSNnP3M!Y#AQm``=94sPU`).[APXI+?E1LRGb5Fd;a`>sE*ng<l+dk;h8OI)SP5tu7TJ6&%@UkdKbe8fa#o1;\*N?/A%(QJ7Q!s+B]nT*d+GXT11;YnXRd6=a>)1ZI<<uGjaU;H!3@[:Sg-Jd(F[tO5XS%b2J/GClnc4=db'&9Z%@[(_'qBf<YM(C-RS#H)ih(*oMS1g!QdLsZO>AQRYa_5BXc@\AmCW[2lZ^-tZoP(kKV(UVG_0;DY[:cCA,FLLd58gNN`'dJ5!Zjds%SX:VDh.l@tj<1`jh/V/dPR%N)bo_XK!uRa'n0s"Z6sgeZ(?>>j@2efpC8L=!1ChQPj[F\[d6E%"d8Hd._518G<=rrh)0:@^prENo%Ad/^O"(/P>+*f.BrgqloZ#_UC%([Z1@gdp+'].*NJ0SVenht7TL;.g!SPG/;U&e2/*1+niqh"Gnd@6%ce7j+HYK'4oq;,ACU:?`>%a.[N+e3kOt]E4h#_r-E=8;5Q.'Hkc.C91a-mho*&X`u5jG\[+"OCM`bhs&?!-J1T.JD;`=-00m"8pu/[ENt73*Iqm-:nb@q0058V%Li.2\IG0Y=S>.7PF.Ra4Y@p9)e$b(uPIEM>^KJN12cVRr?I9(P0sc=tGhfsf&Z7<C!oGTG!?HYE)2jYM/q?G<Y;\@)^t<V=/;:q^%"RLB6&!Kd\S/Af#Bq!C=mqUcTh#n(mUKoN6q'A>K5ZorPOES^PXQPSLQn4%A;6g`7B$d\GE_oooAE<\@b`LbM:,=Y'@W)Pnf!&Pl%XQOCne28FB#0+Grgpt2bG9p<M=;AKnLImNUBhmqWQd$H3Kar:PAd*M[d/%@@0;\m1ZFCVdA^a0aG1mSiAW=54d"(,](l-;h(!bT1%!uN<a8^$6k1'j)!jfE#DmjU^7kR:W1\3MDD,C0aZ7[91V8G&D^O3;_?dK/!?[MB'::Z`C`E/\)b%0N^oD:2l'1hY4d&h9uIpEq]7%12i@b_R_--SNoZ)jruY=>3<++D%Re$)S$Z'@,hQ>XBQP&I3K/VR7o>e6E<q%k/7i?"F[O/OM[[$/?7[)VFL2!Za_D!bo8+abDO`t%/nT0(M](O*m:1<#1^Fph40W4D\STb$MTD8WN3;(feh(A/71^rfkS&tY!R0&rE?W_l8Vf'bj'3;LE1t9"<K5V7g)eA5$jEtVN<kK3%ZcnhR'N!j0/'40t#2c/\W%>.jTiF4M+:qZ,R0a"Eoiu@s%<IsWh>^XYaX5UlL^:fVYMEn`?$*5(^[T>H7aQU(Z@qV`6r=[&ZVKFu%;D&?JN*V`\/Yt#GO93J3Bn(bN1-\N#)(6Dmm!-auLO'9%_<Y\toN/HVMMd`.CB>G'"9)>I@Y"t?B*tAj&\45>0'MQ1,f(aGct=&#%)_5bPl[nnqBEssm.ni6n378k$ARq>Hdifj^\L_\m<Z3<6;=Qn)QPH<3+%k\_2fD_a`P@'h;`'hpQ90".@d:n7iN5B$''DP-Y2V#)%XBU5Aha]dSQ3eC<Q==%X@H,<BF+,j"9L(4E".j*AK:.>ZSDri/PGgiha<RAn+9B3DHoT6^3X*.n8[K1gOi0U6F]eC:d1S01/C^;H%QbdZb1"JFt0=(VFd,hD$PsiVKF`ns*!]JCr7aIB\?W7gU6:L)\RY_bn91m;a[O,Wl5d/B.26`m&[WDkJ5$)(>1>-?>gm>kBF?cO(%XWV#_SF)]$k%n[C&r4rk0?#TDiCoh1IMY\5,GQ7d#AnVR)1Zc[jA4hfD%W$i68,?]9ofHHN1]=.g'-s;r/Ff=aLb`B/gmR:IP+\?%(.4K?RK1C8@BRs\A02;7*ZpGXSA^]$/BL;WZDahV2JR8d"qm,RhdF*m'=JHlCUo8mV'i5Y?Xq9*mOtD]j,e$JZT:9hKNil;M*or8%\>7#@)`gEZR8$(uen&Jg,t&l(U'od2/Hdm@\K/VMarO/jg*t)Xo/*26GmU8QZ(bQ6M\B=K#cne(5_Bg\"E>,PTR]X@bc"Kn6m#7/%\SP\sO-k^inWkWHL)e<?<]!:/"lr<D?rUX-Z@$f^K4mKNeAa$l@S5BE4Gbm[/h-p\\j4*77->`YR0Y'U$&]3h4X?tFH<"<"0_2%g%78)6LqM&%.(@@qU7W74UV$?Kn_qC,U"IX@(!j$i5SP#pu='A\a3I64rZc&U\d*]\[b5<`,RRIt4NXGo&91pH?<-cH9Mo*NHm6dTA%T03bm;p6].n4c\ITg^(25A#K1)Dg36S1tgJo.k*]6hnTH&J>Hq\FjhRKTi6CQZHe1Qa'Yp[/\-9$02rH!n]3`K$+4XQ6:/QEYJg9%)+KXOa4.d\.c"%rW-dnL#"q@3`+3"cdFr_M=Ln;o!%OW)<7&?kp>+df#7Q`d-;Mp^ojS>3Oha0$b7rDH4,q&tj>F/q/@Vl<p))3)%7-ZTkXMSO'+-W%&Q9-&1Skd#nBf/^ifD*PqJOs38+=u4$,RQ?<Y!W;#XXPlJKm2eq&q"I2*':r5Se^+&$@!=`%rrj[E7)l6#"NXU%<i<utP9s_o-*,_^d28R=jC8!0c(!H!ao\L0CFi.AfE;)J,b?`*N3QamSgN)IaV@=>%&Ql`i%Zt-MJTR+$UBOW7h7-H.C^p&/":r*%5Pg=d!8TGb2@_t1ZCVTld%Vjic4u.Z)GLVK;p\YT/>>D*W\Y3:<FRM01f;"e49XNL^tii=NA;;pM:8&%l7S%W)eE*TmoRh:3N7`q%Q4>sR4VLq:QkQ*BM*51f^aN3s3g_V5C1[G/>R]_%,iWL"^$#,_To6N9&g'322X[SFmJP<e:e;B[Ffp,ikmMl-mdmp*Y1Oso#uc'N%\&d-2\`/6O'.b7rCgFNckhRhX]Sf(AHH9C`b#CFghDr\[_S,"pmP'?OHB.uEkFoqFs6i$U(-V2eVp'^?UnU`Gq'O,m@>_]g:]k?e%=M/!AK(2*N6MZ)BmebgYGF#/Hdq/Z=a`3B]iiO'N;7l**VVXgbh!]LF>?iM>B>#YnO-hV;n#W-b20UIRX$:X!g<05?kl/:rO&0-t%M,Tgg'H:ffpQmtQg%K%6ga,\Z6^c"l#16aFF[[:")Vj6CLeKaq$GrRI[-l/4O'A`hC?9=q7T7XO=EP6&rEpBVDSeB$$?UuXf*!sU%%^CCN(/"-h_m&Wlo)2^N+%%Z*#,&6)7ehraSamq^);T:]miOjEEo<FpEaLH[<8/D=_f@kaQ2t"O]C#I`f)<,5SuB8<@_1<iqGgs0%L+BJ\g<g'2][B`\UT_r4Z(AS6RC_-B_;3/Yni;R3-)!O?Xj$Z4k&bCA2QOeGS>.:B/3[P3o4Q5LM4Ga)p8AcFD,_SJ-"tcs",js]%SUk@,]YurISa!^QJXRu+/=<N3ZM'\tb%^E^[-T,G_A=0%0ji"Z#+;L-P,pWPQrH]kC741Z/V\aHbZACfPMX>&TZjuP\WQqM4IRnk%2f^ir3E9iUgQ_QG\41F:]k^R9VZao"T)D@.H'9m#j7n]\nKq43=4e4Y7hLDSL0Ba=+"2h0&TA'b`AE'11.Ypclp>*'AAOoDY,QK_%3B`2=fbpVj;N`NX#ZOW\,e-BT#k3(IQWV$?D3NSe6m.,U]'A#cF?otP[*<lfP^Q,5Nl/IM0%KK!AFuLMN-)M[N5iZ*Y;_dqiK;4W%4(5OV]E83IC;4!DdL@8nrg`XRJm!As9i^osW9cN,_LK$1'bY0=KFER*l'fVbM;]>l;$sO1R^^pkh?_([%C)MD.-$uDTIp4:f+KoR%7NB`FF1l6dgIQ\Nm*HA+c:\hO8Lp`QqDL&=],\hhEool$V`!TBK,E:]V%!NdhU"6XNY.B<3g]%KUgtku"H8A8.a'#sSM,tQWGLBH%<KeYhn9ncI:,>b);QD,TRg<UF]\m>>U:R44.hm_6d1<T0RiMuG:*ukd=A.L>LEC[Ua0gVP9A%t:m+)kUR'!KYh5#TpoWh%mRoHml%Z('7V\IQ'pHuVce-LZ>V:RbVLhUk(!(SRs-SB_#c`.$)?:1KFb$hEP)hU\;Cn,u('l/_JK`ScHIRg!$S.1U:G3;D5'm6Sq)"1u5g%<c'.srFT($"gD%5m[8X(U_-6MXDqud2:]N8U3Y')9Drf6NoHK"HmKg?<F<\P$k694(mLbP=tb/Iq5B!W(Vf:%:r2a#XCpUO!sr0Y%+:"n+D.0QJaqc\43QO>PWQleDnr>\20YhjLOF3,28YDR==WNZu>"L\S%WWt0#%uLkUpm0mX]`)j>hA=L$</!9@)u:_n^Y;m$djo2%$Qr/q<mY(W':=?U#9?/#q$]g)!42fJRM&_`F*TU[2:t\L4f08+nAT8SQK*H#F=Bfl&%\o=Rc6GF[IX=*otZo5<]4qo;_<1>_-;@P%"nF3dj^;"ifD/M_MhYiM0RuQi>(M9p77?0pV4a_$4>UF4!O!XMl4AVSc=P%"OPpPNEC-c2&d'LZ(uW"^Y\(.-?r5W>p"G&>i!i!Q%`h\BPd2rs7?OHZQ6"&0Y`GAQuSH8W[^-\<#_a5/!a1.:.WbS`C"H[j$;s;##+P6Hp(AI:j+GeQ/J9(s-W:`$JcXIqq[/=DA$j7#j%=^m;L'<^jdJCE"9NC$oG9sb=Qe*Nh)e,"q3P+In?dS/eod:M"4-QOO+S:EEG0#1*<GlJd3]:@I^]&f0QNHO8-O3P7PP2olsC6U9"%l]mr)>h$&/MdZ[hY5#gAS8arS87L^;a\M(o*%@:N[GY@IfJm0BA4%#+*'IEncP^Q32An`H\2"E%3Wlno,Tp".k-EMoV'-X%i%.6C%eR4q>hVa[J:%K[1A=A%T'Uum*io,&1lar?sKYG;9l>&D;1umjnjs"eagrC\2&R4Vt?:sdn(+-"F<picpB%SpHA*"$lD?WLJK2XZo%D?9#hd1nEK;6IbIlKih+<F[B><X7/.1hq(4N-\rR#.m/kUK3UK7@L.BOV4;1'nKY%70*(/;HDp/.Kc8kY-RY8bd.S=19&'r24*tU%7CTAK1Ws"s^hFM%e6/^F$0P.phuX!:fW[4_Sa\\IJ8#3M-YZ].eW=LoX:Cn"^hI$E]]XZ@J+MO0fnqN7eP"<g8];P/OlarE$"J'R%alPD"0Le/SFp)<"$qTrR%?+#s).O&Y@Vi&d@'!dI>:<.'@95H9BYkSr8u0VFfE@^!ehE&<:HBH7emMX>fToX8A(>%lOs]N8.i])M%E(6ja)rOkhTI7^DDkQak]rcPgT#/^ZXib+sUCrQ,XpI(/\HtAX+s*%iIDn9`kKA9TI!,Q%Sr?/ejLFsBhO%`Sa"pJO<dAFs<HcUG%O<4kg?up")<Bne=2^X[NP6>(iLU9G.8ms"`klfj0D-?R?QF@7+b%:uAi1j+9MDmO6\<?WC!tGa3bBaUGT(E<\GGK;NUIeMQAQd(D%W!c=3!?>:h"E*hq`?;2Sd&!07.51<G3X$-sHIoM>L,RX/O6mjBA*(rBi<$)A-(`uZW`?+nM'3`Ve[<b'&aW+pC:2O-*W#4+fVeHY%3j`W_qA360\*bUS21<;4B-']P"(CPECr%;TZ'T[aMa.W=RX6^j7q\/b)&EA)3&1mRd**oU(4qJ9AV!tek+YLUk$SLkq)V(N4YCPU%$?A\D+XNA'^rfup5r06CnmYqS(P3rFD_<R'rar1$JJ3_j_6OuX<ZqrW2q3I"l=u;Y\p/7,%jOoFh8d[?PWpb%=*`>;!R%dd^baiP%"POJSE-$Hl5G6"U8*]#=Q,6;0?ZEY'=L]R+WX1A=J'L3EGjQ+pI$nprda^=eR!'.<Y6dU-Y%^leX%RSkNu9p6RYn'S>?%YV`DTF=%0f9*d%%N",$oYq(.1KKb]"=oE4g&(#379/<n#*IR&*hJ-S.HuED%cX81,.ft?F6_$/7B4ka.f&&qAF+L%(2@8?RS)/"IaX)lS++.%:o&oM7"1QH[02qE2M9gZ6<^GTHjJ189p9lo?+%WAU.Wk,GSag;SJ0nN<Vd/JH9X0`5,4*(%52fCR*$?gkksVh`+B<mPD#A=4I4.$%O82cF^4I]Br9.fh:O9^+k"s)T<N<'^?L`sb]'r`VAtR1O.u7qI+;5Mb%6(%Vl9\^$pHcrj\:Yd#\hC1OA*5(BchIX5H'^(IEo?:W%/2)nChT%-=bkFU9Q@X''ZXP0jhqV%u->UZPBBgF*P.%);2CAg\4eE3o.FRkX>;cBf*S7[C(eIEAYu#/962+>JP*TKiH<h9-=L-Pc%JfT)]'QC3q0\d;^f3t)_b"s*OY(SdV-AbhZGS!@:]UCD@e6R&8.QWT%q6bOiRLZ3nrtf0fV(C%0Dnt?m(K"Nq,.Io@>=oZ)`2Y9J%]&JUAVtJc).bPRlG:Ocm_`dpj'7bqi705JED"N[HQ[$56"[e3Zh'M+#X-5PX10&j[!J?4T<np$n&GKm>6FI$g5cmSEoKJhZ<'=5Z%Mr=,ZTK9WZ)+7j`lK4`QBDas5%d8$^'XI4e%Ui>oAFZ#K2(FrU[;hS8k&A29gmiu7Anqb4(bIMBZEKLD]!DK26n/9@)OoP?E?#$i%dJFn?3[/1LLB^mJNQ!BgS9l7=5]0W>$?DJ)Uf4)8-ra<=ob;HZoX6#A%E)1"\5'sM%D1sXlI?De#<VCaarr!!,19U+*,*?:_JGK#%a<IKp#So!4GiGY,G]0a\iej$;,liR5WiB!&16[8K""8lLQip,Mle/tGUnofmH<))nfErM<_0Ds[<SshS6.(B):XT]H=u]%W2*%kC%@iuDP"?dsR?t$\bq^XUB3(k!//e),X`iNq!BG(udR)`qIMMbj4I#ZF=ZC9%O2[bM3N>RGDW46gB7-"mn#aC#/Z_47])r&tuTW"6c%7l%37TW"53>#tVJ-n=X3b@[FSMM`rfX;DTb'iQ33_)2OVML=.O\O97n8jK<p70Ed'9;l_D'F=E?W7f4CJh%+8().$!*FpTIYd6B)%`fb9R`%"SLJI%@D=0nPbA<C=V$OTA(Ws_3jn_cVRYF,OtJggtL().%=,;UYpO9Qu]C).L`O&=,QJgi3%"U-"T&);i'TW$E2)2Lj\%<(nuJRte/PTVsa3eN:+15]A[=-%_k#j?RTU5lh_+IBsV%TRfhkMHF7LCSpB2<]VS9l$b34*$)mf$UNaao'T(G3,d+B=\o+.=2!Ze%"@_]Pg"?oN5fk?N-:(LU;Q2JU"U61:h$bVY&4j9I/Hl;eJ2H4f:`rU+l'\1eTLi].'F:"GDF75C:mU&O'R7hG8g:K2:t0Atgr+>]%iqq2:6%M#:b`HI'JRCK-4:)A3XBri?K#.]:4h21>#aS<(+XgSpOr],UaWS``)1mGgL'?3@'MM]1"cAs<1)(3[$]7R%T@ap2U2'&6%/1>7S[LacO;(;%^6;1@9ourjP<O7p]8HZN\j\gn+fA*Pio\n.on.a/g+o#UQ9-nf:Fl1;01DaLnju4KVUL*[!NAH(8l8DVA=SKeM%++Y-c1Vp9,E?U]^$'A<X[VPec<1kVBq0(>EaMGXWAhSb8P'([O9W-!hKfdPA(A2(^"A\!CaJqbSX'D@:5YV805d`M-\QZ(NZ-DO4%ecD!VBE]pUr>A_`"](*]:-c>UQiO\R0o2gqN!69T$oK]H0m52To:;o/kcqq@Kb#\Q1qO.?(.fMc/[K+UIC$p"a;T+U8**^YRIbEu%FTA6C>/:PnIg4K).]:9UVVJ.\!p"[J+@b#f(:;Y6e@aGRQm@@(Zp0]jGG<5+=JcCU3VBhJcq7a=+g347_.-Dj.]`Q#WR_r#PJ7.4%?\+3@kJh<EbT31=b<1T[lko.ilPXGDCh$.8#pNH[:a`8JJn:BIib@>(9dg'5,_8ZR864KdRE?:.2)NoG")[Tf_"T@`&bb"I/V1HB%drLi]0pNcsSSC;Tc&6Fth1'mTIe\LNY'\8[=8[/b$cOeLdX#(b!`^k'p&2M/)BTJXSSLu:c=f7.d9[N7[fe?&`(VGHb3BU!n-'Qm%?>kHdP91OJ8hUZUCJ8nJCY2^Sg83QpBl&8OJZ+JR]jtd\f?gl+eLPVg7tis_2B3kAR(G\ZYpu[;'4=k5J0p@[!!C5lT;2RPV+e^O%OtZI4F(M8&S->-k`]/'o#'E"f_`MD=>&^7&"\"G7hM@SiisLT(=8)Ij#0Dd,]S<Z;?<#:P]Hr91!nBZ-3I0ViXB]t/[[^UHLqo[q%LGVu$)3%<-Ab#Q1`7YmK]<hPN$FL,A[i)O#=R<J7Plt.+E%G(VjF%'*a>aCpG'2r;8^#ZgW8/P'9)-B/X#iH6NeknYCOQ?!OG-]3%r@KH;e_rt:=)1p+DVRP08IaC'EQ2HgUZA7L9mJVt,:a1-_#O_ph8aRCG'&>A`(F,,fRa1LbF`Y/9$97Z[FTT[.bP5"[I04N?s3]T%_?6YMS,'/:)E:I.=E=PX>Ci!o\t8"aC[-Q-l8-a1LlZ*0d[W`o#7gYGdW0Z^7'Fj;!2G:P9MfAT1f`flKSRu,H1BA4.=B*.jJ+33%FVQG<U<g,<e`=;3j-rL4du/'d\qn<l'A)j?/^C#h(H+nr8[OU+0/-]hbpbmHc>;`&D2JP&Qg?=K3fh@r;S4kkZf"@!J4Mq4m:p/<%N_pp#&3*D1Z>?a<!2`rIa4@)dE<RE?QJbbb;A,O5]_.Oii"b2amAfXf2hDdV$?ADrcj\Y`?+6OCbY:N$T8lXfIMgl`)73VVTn_m.%BZ=W,jqd_)68nElp[8*.p4t,+'T?o6^7;l?VKL,B-E]"D.`=LQF[ms)]sg8MOsA>V>]<,+0o6shOKfYhI>PKH.)Y-D4GH,?["?+.%j.:q<Y$apM`PGAmc[;,CE&e*n`%JhkniP7m-'RjiGD?'/J"?_L!mdj7OgHBD.:+IGS&ooC]^F=q^o7S&[jbn=gT%h;AgL;'>kH<2%Cs)H,(1ge#c=T8BgZ#`+G6X3h:>[.$%D4/j_r!/KGI%*IAQ)HW[](\>hP[Y^ZcQ[YJq4e?Z<hQ+J^`7Q*ePKV?p\;alkMPd"'kJE%8N\oOno7j)<H"+8fht#m=<hmBbR1]e9?n;38RX"q88YbF!@X?^'khi#O5*tU'3PP(Q)/Fol;JG3q-oPW:/M(RB^F^s'jKUJdEl\_%KNrgXXhf'bIRt<)"sO$',TO5V$XdcM;&@m_#0P52eHB$^#1]gC2-=!L`;oX[)*DJaO)jIR%"e5R@rf?W0J7m`=2.t^8`[]f:TA`k%/-U?4:aNlu5QZ\1H@>u:H0f`f%:0$UMjN4kW#LQXNm:7%`XaThglDj*jTLlAm^DH\&/CjKlB^*'-'RU,''b-&32L4]^ES+4V%-BF%S_iCk'e/<GJ&+/Cn:arS,4b"8g@k3`[]aN%J+];G41oucrT_A6=)VD0J,>T22ZW[\qGBKc/77lGm^m[]?bQI;r[5bHiPg`L&)Y*H%pDf*?^&M:bptt'1s"O14h0'<FJ3VdOn-#Kk[J#70Kco=``6;<>"l7O(;o=OYXVq*S5bQ&(^^P/s+8PCY@!%N!c]`]!MOk>>EZG>m%],-@]k/c+HdbWNpVp#AWdhl^^3>Z]Rd$8O#Xtc:$-hAq:4a^,/(Y[gi5k?R,QWIbC@t8<hDs7[$[m@10$TM<aO_rqY\j"DT\!l*i%-bu!k@9HXD$P]4u1k89nol[LV]?olL/6[DeM("oN9eLsJ_mOQ:U!cogSNBanD6G"'h!0Z9@Vk!N8[_=L"Y]b(V:TtC4orpC+CIEu%&iW=GVP&06s+17&re7?<n0Rk'XVh\*OOXO]#D:a2,\s$/dm,SL93i)bJ/ARG`ncaa``1&8KP81`M8PgYYBIL2JA]4Mf4E@G:c&Ng%f_TD]rQ#[-[!",+2GG!GQ6KjK=TK>F0JC$nZ=jZNfD@)O_4\7Lb&tu#1lAr<*"7/c?<iTQ2;kN$j9DA*0Jh)c%tfJ!PbqV]eTX&Z%\\5[K(B!-"ki.jXOVNB:0N?k4mq'!GK(ot?8%mPeWV93,b10'\ZL5Gg`/2@<.6,kY24s8J!SNZ,.jPp*U`t$^OI*hO;q$7cng?E)%==AVi4:c<HW1'oRJ83;#RbFaB#/r-.V99'Bb8Q*LB&kU[7d-t-S:8C=&jb!FCUYRK0(JlDR$t])Ydh1Wbk:ff$oH(=j#-?XG0Il:%3Y.b;6=gpAf3Lkq9moS`TUuj#%4GMg+?8R[>u<;6lFnF-1k=lRTR/YaAWpigNfT;V:u%"OYYEs-P]iW'+CNSAUO"aRBQF77E?^Be%SA7_F&sKZ%ca1-OK#Q6b@+(!E";74;/VQ9H^st=Dc%e2j/k4+b'8$'%7T-DjRlZZ')!B[W]Q-,k>+]*O9OX?aOiU6/[=YrjhNW^c%?WcqE@>Lt.!A)WZZsj+WjQ%;lZc0urQ5U[d!KJj3i!Ze1j>bn![ckOdnl$f`#,M1%>(M8=k7_24G?P4RM<LnB!=U*Q`&kr>\6>a5%MG,K-0K1"QP^B:u'[DUW&0G6@&10\/e4OT"8poCo)IE37cWmo!cl2XN,%P\gV`(jbj2a0gii#YnZ_,mtOZq[M;77Jc)rSicnIubk%a88L*VQXP(If)_48m46m`!*C=l:LK?9#GUhfR]HOn[I"bJ'/$Unj`)6^L\&u3OSKX&]'6N2VDsED!JITAcjTLD"qf`r#\\\/)O$7%TA]FjgLF<&T=XF`.IF+So=:Hfn/pmTWoDUC#_(QMoSD77Wqk-!5-r:AlGkf-($G*8c+*FQjb&*0[Pb*mm!kJP3q&?6WK)6rVg[*o%lJ9)T>N6(SklMTJJ)8fE]'4IR",t_km1u2>kncG)Cm!YS`'d9=n[o!:maXlY:ua@XRD<GhSZl\`q49TiCh%r8=44Gl05=jaGO<pW%8Q3LD.1sM2E33rEXSp^1qIK`f7TRVu'2'60B32>!NQ;9\U9H&$TMZmH(]ttFVKeY!-\?*tF-oB%L')Rd9P+/HGf-[PRfbh'"b=F/%IKD9<%NU\$3Q!VpAF/*s!@_0.CPlARA_"EnQ+5*a@`EjPSb[Gp\^sTdcp!e=@)V,bZ?,Y5e.IKi:4[0.bY^Z'GP1.o+Z#AF80bO/%-ZCm%]LMQK:@V!0"855;@\%8dLl7];Jdb_2;m_f!@B;Nkhjo<kZO6i\,JFq]L1A_TS-Y\ga`MQFfiH\Kf"c0E1SAU'41I`'>Lm-*%!?EWB^fE!dp)]QHi2ga#:^6/Lagj/dJQF>d'.U/kAi<,#)'$\&+D523AE3#]VEV)sZW]6>);F)'<AEIs!dJ/?I(oE_V&4UZVHEb$%eRf6V%$t2YNHQ4T)n]!fcKkI[VDD4:CHC!Db:PQA!FD]];eNPTT:kG-QZTW=_CIXq2-)U=s!Z2l*\[UBG-QQIB0fqoButu]4UhY4%/GN5O'AsOBUKfcu`<@&Cig;*m5]^3:=>O""9j/2`DF<n%Y"a1j/E)J+puX0/h,G0Y)QYI"0`bo)ZN+31,2=%BZTs]q`)7tUp43'E%bHaM)%,'=R$/8V.[\3W4A_E7<8pW.@6V&B7C7T>pNEL0gI;!eBnNt],J5n+6irJf"?`"=WRa(u9>#?5rnBderALCgL>.=qRep:K.%lnFV-fB5g_6ecC"b]qPEX.=:!FN?M6Z^LI1!M4D^Agp)JWR(-<HGsKNa&J?;Wd.7@Qu*U!)JPmd:J5-[kL79gRf!4Hc,*S.=mqGT%JqlKT)<dSu5qS.3)J:RsNDpq9U-\@5"5Lff=TH]?R\4Pq,cu1@?C7jUpI?!B=u4'+ZK[f'OdV3DM<3#;XliB#kW1SiY@uL0#'cik%k\YNZaJ@!-lHZ)9MTiBi#'ci_/<9jMK84ns5-@EJRr`TGYQE..9_GiHZ41+g1@5-RmBbFVrmf\9nl`@<i5O[!PreF1W_N=FY>)85%Ol1ISCUck<JsX&V9^2[".u7_uJ%o:Z#T>O4Sq/h9\'$asQ#C#YKVi80";<$&gJ&L&,e:jdfTii]oV.+(o9>&Eb"[L#iD!)rlCI'^%_dJW:pn3rj1eT"p;C"?7LB4pe?Pm&b6*G=4U7B0;c!=%d5+O]iS19PpCm,;EUoWo`0?Ql\Z;m_dItMX0%PZj)#_Fe.,rE@@UN@,D%C`?f_!-u0XiXF3f*k>]mOAEh/7t"*EPk1WojIkq%V@cE.@!2IDL9&S$M:fVY'*0TQ`95sg:sG_3ou3QLa7d__R,p1[Cf8I\lIr&P%9q&a\hcjl)F4G*NqaD-#'@JnWSX0%Xdc&ldXDctj_E0_Dqcn<$nKh<k3IP!rMIcBbM7<q$j03Tab2C"iTsLUR]:KX!s0rG]O!f[\%`VlF<S"AF'f'7H](Z0K%,:G<PQh2ThV=AYIN*]rF4B$o`moEgVA94YP0^J6F^d+6.Tr?,g.LBds_2BX[&P8qP"n::m7b0XqD6a=O%1c]N!!K9b4`k*A_Cbc^P[(^Tf'8(o,oe35pcb;2i3n2$8?CSHH8/kj54=eL)8mD'-.QsQR7:S\Vdi7\O((ErsHmdAj[ts5J#)$r#%e%1;:I$+'o=O<u]\XPuD'dM[7Ad'?(/;"uo-^D:HmX.U<XeW./2SeN+ZpaMmf>0`]gL-i6ECJd#_)@[:\j$X$I^V2;789C1hdaS9%$4q;7V#aBEBtD,4n>o8eNK]MR2^";6K"!6$<@lC7VT]8G=1_;Q8b,4O-B:6/S5WdFNq.PT*FjETRB#@I2U3l3OS,,-!]+JB4R^(B%[?,)bW(I1q,QWt`"R2>G/IgCYiAnV3n?JS,I>QSt7L2/@7"`/FL#J#ScL.b9g9]!Bf]85'(h9=#UQ\1NVAQ^&!>iIG(,LMu;[J#&%NEL+>qR]b@UI!/ihcZMT8Wj5@SWBFZK:k%l3\q+L^Y>nZcbERG..ljpF];r[Ae_S8nm!t)F=iuoS4U[uO@:/Yka+JM=0(^scnP-r%H$5W=#Zrj#P=(u@,M?l3Es.B8J9%\Fo900hP>n2)K=?6u<,9med=A8=#bk6VikVq$/_RP[F<ZFS50/=KFBH"c@89LK^^qfd:En<6%CR+&O!ae^9g@/j'8K`]Eb0deBVNMrT!6c&t'0&&d"&mV*3M@8o2jq7M!GPD/F]"tR<dEO&ko&X[Zc`]s=o4k"ag@C[p[M"oZAjM7%>4Tf[0Pa!`99=*nn&^B[B&+ZM`VNt=blhq#bbu:k\ld+R/&8#Ig=B5l&3#iFRhoJ:]>51j]:K>ha\SCs&dhBU9qe4C"hgrS_*p9t%P*:9m#c(a,nqH[d8HLYo%%N+A,SeD6X#+b#Sl=)P_+hfBV1td'cttP-rDN!jq0F"8f.`+X;HRPCk;D;UD&Tch+mdJA,"m;dUKNo)%CUC[C(<=Fp?2RNO#*?$70Mf@)\sVl.AoCPqhVoNAA]9)./Ep(SF-e^C3U/;;cdHa]]$4"2mN(:,`fF(%HFk$THjD+[XI?l9Yjn``%2+5,C.!\!U5tod$=ZqKJ^uX8jbce*J\1m=`6l?qiL?u&LM/YZI_$='Q=I.gcEUG)nLHqP6DkXN<PhV-/Lq2PA>(Ope;9gC52V.,\%81nqS0^<fI4FIc[&C$um-,0G;Y)7TST;2I^WY5E(q^6etV?g&a[4E^8ElYAR^Gp.<qM"L#1[ieh*e*<dF@LkuQm=stY:S91"5%8B%!Q`rEFu.(:g64O*-le8]kbe>%3,!EJhG8\f&Pec0]UE=fi[(>U4:C1d94EE'C#l+WKZN?$T6SQN)2D[3^#UQnc6c$683B*d-;DBg%1sKnns-X#E1G"sK!sbX2JC0+<]"^f]@t*M*?ta'dbM+Jr!jn_or5VFjq@&7:YBE_h.^4bj#^\ImG3f+2R5\m2%Y9>64KZ/&T"(5c%';Q+@XJ:)f,]c$/NiX]>SXb=!J!\YW2g.h1b&hV(EH-+gC9F(hGal-\D,X#j-?Kr%N>\MYC7T`DI?+7UL<'S1Hl!qk_O5sb+0nM=%"\`k#FXr_0-9.u',M4jcP)?f1[%##M>TN'1E0iR"X+1o[`i49lX`:flS[TE.-&j8J[LREP3eS]6eiU3=Y#Mn5ALQ.!.'g(&7iTcJ%GmTN=iYegBcRK8d<k,AEd<e<<o4eFPl9Qml6_s7:a`7r.Zp4(,Y!C5B4O_aNb!XtKk=WGXm`IWe>h%O,*EC+:fgtM9;[Pe=$M<%B%ajJ,DOu/1+1h4.\.-lkJac$"J.pj^-@=ECUm;pK<E&N$Jh7i"sWI%'>?Rlu;R)Z>g1E,$,Qjfd,CEeJGhSp3gpm4TN_EP)'I'1Q#%/Qfj\oeK6:\M@!f3`)bE[.f+^Me,u/;J78_.%BP/3aF(#]:Q]>oYZPp)oEIoZhqJT!Ns#E'Q^8u7b#Jd;K[$`:-<=h]q"V+den'W%hMW)IZ"q$n0`s>gC]^?.>K3ZsDH?'D8('_G>-C=ii8M),FDFo_#RUMLo?-=XVrJT8Hd1G&>tr=Y$[;k&ff`>U"V)TiEDr,dlA6bD%YBGu=pYlIV3"I@oOks`,2RI51*kJ(OC^gl<Pa=@[dVUYpAN;qFVm<Z20B_RrZ<4lo?tk80dOa_S"/kZ#JKm@g"5.")1>4Q5!tA6n%SsAu/.6K6=j=")2MZBEUg(5jq-Qo0AMSRfeo;$[^"]XDbUOoStdcDRfQR_#FZ3rrX9.kC^YuY@OP4B9#(O;W5rM0c_kSfFlnhmUA%Kq[5fDTnZ@Gc6mAX&UAF$n@7$$DXT/kYL/!q?T`W-)kVL44Rn;;Lq58OQ,8PeLT6P@"4qX>ZZj?YH?uo[hKnf#LW/8.Q@QW%2[3.%q&lMo<h#V^FO1Ahb>lU;Zj.4*MJGY`(b)OKi7kr59$iKbJ5L@F;N-d=ctZ$HrcC$h.2T^!:kF#<lo\T_RuKGX3)1hJ*>,Y[V'N,*%e[SC-Rohou8PAnD$KeVRQWY."_NW_N2.3)s&9ZPL=TnomP7#D*W"h:[(sgE&,Pc(mJf6#'r1UuoCK7$c$C"O`[o<isDg5KtU+pA6%DB*Q&o8e9u3Ds9)YIgU5a!+Oe7cG8mF\,(k-c2(9m#'C<b&@jWi'KA\ht;!dO74OCQZ[!GP566!5f3C'j-:"m(auj:iX.Be6Uuco%#Z@qF*QU2,.*)[%DB)rBMdW'1&6TS>*Z[Dhd+F7AhRo`KUF3FiPs?0C`1c9@j1FSe\=:XMnk9:3l$@rSX.ojC"g.A/q!'T:TM<A(%JX48q#U4,BqLu?RU5i^3$M!2>2un]F)H2,V!\S+)]6'KH<u7E[f*^TQ#UGd:27&ZfFU!"(1/Me26=LlK\?;PiAO#/g,RTI^Njj+7%iis#k<$;bHgbkB#;er2=Md!<1pT]=EMN&:i3WcuU9ZVahrH/\Z\A"\\XQo`u3"/M82fbeSl1V3@*mH1u`[!:N=49huPY1!SVrj-g%+t(s6dCqbW`&d-Shp8AcE-H:Zh$M^o>u0b9^uSh,bJL*@nSF?C$`6TI9mS<DZ;g3jZAgU2*G>cgon.mI/ZLPRod&g#:rNbDM+,$u%N#r)+H%NuRrjugUZWgE,KbQ?Q))*I=D+0:0d51sGR\*V'1/7N.(bJ&"i8>I51=h&>X\)i5$XqDKH%9QEOmD]&r:#)n!X!eS>8T3s%/,H?:TSAD!XWRsfLn==!,"I%0I2e'iHq'TJi`s9UETWt^P6fVg$CGJHQHbX77#udeh9D&hRd'm;?(HP;>n0SH,*m-:j[A<XalWZl%lCt.lP>7;D9E'(.:('N0)Ht&EFj,W`Qa3T&Y@0:tQD5W<G`h0hG9E[?-6*jq3n4h5=*#GsN8"dC1pT1DX(NjMD)>-Z;f5<r<D1C-%Z:.Y[<0b6Ml)mK]A(n+-<OC%(hk[9nOQ2]g]rPrrlV%NF1r"Z8/A+YJ<"[.UTX4bl@u8.V3!Bi[9PCQn"3AG^1U*(?ln9/u@5i>8%1JIJZB]`g5CWVZMOSnm%]KJXb1,X2r;A6\H]2^C0@kht\:;X'%U2K'pC>,KZC2)M/.[1`!LKOe&(R/g&FV07N3DaL&2$\:^.4n#s%$?ESU(:k@`e?*PUEu,8'U,trbAb:E,l0u,Hn/eC.lq^P<i%8(t(GdA6cm_f'B'^&g*;CM<9dQ>t(DSp?^pEm3kUPPk3.rX>e<C/N%j_/t(RkC2PG0_cInml=FDST@<lDV<?["D:H"YEh7Me]04UIe.AfaKD`H<lG7)cQKP]UHD8>uY_pD@pZdEc3."P)0$pR5$OnXKp_'%9R@Ns[+=PZ^SlD;#.+/?(kYgc'IZj!@Cb];ENPkorF#^U1I1DdD,&+UfaAqe%f1W(asaSAi6K4T,j-To#_1Oa=RB.?D?9rQCfZ,T%In$I]p7Tu3c=;X6,ioV0Xsq\?k7:IWU_UYWd3Q>\aQC'N;/;a7a[XK>i,$!6?ts0E'0B#H%'T^%b0SReHG64>G1s"$)3Q;W5HW[<%OZ2hFgoRkD_c+$mXcZ]YCtnh4mfWEM;Q*i&6^ujhBh`uGfTp>Aj-G$.=9qo+/D>p2]h_b,7>\2"hIeeDTFCBp<4,+ONrUTE'?'n"%2gi?gWqFf#4g0=nTW+A/(%"3QKH")tf5oF$g3DS[f/)qcp)*k/-3o[F^i]0T;uq>1WTM\)+@RJmJ6B!J[],YQ*VdjI^@-G**7ufQ%1`rag$$FRjCe"b`?(mjI*`f/7_sA.h?pfio-P&<u#HYHoA%+"pkVD8&QEt+g9BcCSO[XZj,X%e;!+DTs)fror,)Rt;1gA$p!sD,:%Q-cZr",U-j<]!/]R"R$q:<]IJ\?S+KT"pT_ehe#YE]%C5_+&ULE!=?5O?GH*aq`0s2["j-XC=C2aWs$=^$p8T(U@bUP'n4kAp"B+%+aZhfY26%Sg'iRs7_$gZZ4*G*9rs23;UiJgFd?4G]'="dl.HQXd6!2'`g5KNS9eeAcfdu'4;fS5gIf@6XGYT0gCJNFB2F4Y1M[%G%2H?>^YF[7`Aq1+ZeX2kuKdSl'M[Yl,elC,H/URQ!ne!k#&reGc<#a@D00W7G4#H/s.tn(%%giHb[<Ic@jDMs!/`gX3'88B%(I2A0%@u+%TE<XV*0#k#l1ra<Qs*sInL!Qor=<E",5eb-*:F(H^qVH"EJB;c\!?sfD&TfcG@*Dm8bQR$TqZ!S=;r)5k]dFE^Gg?1bO]6X.%?WLO7SpF#djjVk-\QQ(88C-e"ol@oPLSNH9=TB)/D*1iIBNf8)n=(!s;D:H_G&]:l38LhO^mHZeo:T,)I!!:QBNbR>+D5L2q[]Yb%!Y3,cJPJAWMk)YV4Unp=Kf=A'_qQ:f:+5-V[Q_Je6q^%)[Mh#b1Q1$6`,;Q"#XoR3?A&ac#I#AjJ3fQ7\`q'CUm"o6?DiCABlj/4%^dQTcjX_U9=rWtA!dIbF[4QI*FghDg7T$KXli71^1'^r[6X))^?D=lgQ-Mr+L/(()`McQc?n3(G#+GkTN^\Me@MmrSdj(aXCp9U-%(.dQa'ZEHfLVngE[7OMKY\&$O*63fZ?rVY)8.?Q5.BOtgaq37:.3fGriK_NVq*WXR@>-<P@iU+AREi>"@ta$"8t%CX"u+S+9XjT[%7In+dfT"I!cG0X"[1dr$^f*]A/Ie1P$M@XHR=%BqKu5qn)kq#1pc/q<fn/EPF_5nlTh?1KRtV>s?1OVd4"&I'aWWCM512CoSC=Y^%m84oF+I/-mn$(2B^+YWuNff_]e>_4cQ1TD6L6=huEpArqZ7(*%%VNpmQOtP#bh/.*>&^('SCkWd9`D%F_GSYB0Ui$d\$Y'\LKJHK%&`qd]dLZ23?B\G$ipr6c'2qh[W]9h\$:"nR>0JUs)_\d9eVk/tY><2b`9IhCeO=4^cK?>+U@c2tV\*aQPeVPF?J3H:\/Pnm)\Umq%1a!8/@hgb&RPL`u)^l1r6%_r.+K"O&m"45U=WeDGn2b`48HT<rD8kXU:DV*tY"pT]#9[NcbZ:B%;JL$bpF^(1TX#e-)jUr<M"+!L%N05#V$SoF(6e.hp0j6DH91!4d+=>`3G50o'mMu_T6shKTIe2lL?cB,V_-ngo6'/;n2.:O6otae!YsXb93sJh/&Ir,Ua!-qGc)Y7+%Yrmo\0/Wullih^ATPeK/QcLVI'd(;[;!cSYb[<?%Xa=Eo8<-on2["-NBfk8L)C(2LjL?`Q6H//PM_j?K`X'pBLBPamN.`FCKq.Po%qRe'2NJGKC%Ksu.$^Ul91F6Lg8N9QIV6$4rH4kRMIa`b%o^Y.d`h75el9Q>*5D!Ts;UB$2@[^a.OU_!kM]!:pb(mDGb!8p-@o8$h%3?!SB+lhDt)FU%B>h^!9"Rraro8;t&E_Rka$5t5pR]3rUW<*FVQet6&d[a*=W&2-Y?9pn`b=1tig$QK4)[rQ.JY$SO?uutFe">ke%.MR,[YuLmUe,*R(&GpJ<G'Xl`rh)NYP`3a?4LKkGOPU*R)a/%k%[j11\HYbZJ:;[Y"-&WKi5Oc\f53Z>_f6FeeSTbAJUFPThF"q&%SUF1"&%$FpeH":EXN8mtJtV&T<c*j!`0)nRr&*6:LYh[6k\'W%MhK&W^&foGdD%`]ph@lj/fB26T/PV8$IlioFRm/'Z)s+F&b!gk%(^j3hJFMj3,lHY(JShU.L_5PG*H@6OF>^b@#V?lYm=-Aq]0.?qc,?E%P[_QRABkg3"pl7:H3Kd=Ym8^>9k,BcNN0+fR?.Hm:s]uY%k-Sc_[ge:!/!h.@nb[J:Yj#\*`M3kD+CWrIS3YjH&afpgBQHD*]sItH#Cs%ifrUU7);?H?XV6l)j$#f<AV\Y7Oa)n0TdcP1RhY(g%1>?l$XRQdmEBlog']/tY%//0u=%eA^gQgI$PDsDpW"$[kJ`@9?@3LM!7f4(5(_g_Qj=t)7#DWL;%U+NWEgq3Uj.%]14j+m^m\>H+%eR`f%\X'TWBCi(?Uo<<iBV;H;.Rf<I(O6Oq&GSifF<t=LRjEs18njLm(*Gqd]5e9K[)rV!*XM/rE62Yd`$.mD><7[b8h1OP/&@+C%Knd#3BdF9<Ws1bV6VTJ"2o>$!`7>`=X+4t!ktn^_0Q/RB:hSZ$fAn\*7DqK`h2K"laLJ/T%B3i>7nNb(_IPm_[fY$3],#u+>W\Ve%i6`Dn1+CD*7U\`Hn^'6g+Ama97)JSYOKq+#?lp!U\)P!`B`JkY#Qqu0OHNRKY-dj_UJC<%!+`p.!%SU;6p2KrY;CDU,2mD'91L3^%[3nHNE4SqiC//;J">Cq>#K`\T1h7^@m!,YJ+d5LEoqBaLgB+j?aPr`tDA.\iYiOZF5uDqA!ADt-"QbeAf5`rk$(R->1)qZO8T5O;%q.2.n-EARg!)@OF(s&g0"-Cdhftd>.GDBWbKPN$0V!!#VnF0=l/uO^eKED'A4)0p0;U44a1_Mi"/qKsk'GR1N@'l6/Jt"j14C*gT%Tmap'`Pe,]&Kjq-i.^DU[Cs[aC82%2/H[o,1,@a6BXO4>&f5(G!J63>H4s>YH<AcR.28sP)5hUcC:]c`(d/7VduJ2V![BPL=d::M%MXD=m4#VUF#q_UN46:\OD%S9`Zr,;V2e?AO(6(c(<X,d_3Tk._B[PJ8e-4Lp8/j0fAr2UkW^:VhePHUX!1Um5GsenGWr3:VA5s`f%;s"c69fR&.[Fj0bCNKjKGSp>+Eh%I-aCL`D^\LFO8i.0E^d\N$AP4PpjI>jP;->/FO-^Zt&&\jodf+FGqe\q?"$=l3O).?X9S5$k%@Rgt9mFG>GctCLm8lmpo'[B.`X_8S"B1bf1c5V:.6IS$CQ4*p#fl$SM4<R!?#G+T1kaMYB&Inqr2R2>=6#UUf%d[jpqs9'eV!Z2G%^6$=D(L,t[BZYsc"Fc2(SIW:=`eN*FG/b%"R:c/>E%+:7/WeOEjDHB>+PQn4O%>NRDf`=&D7FtY*d^8O:lJu91N1mE]bl>:nlkAt%_7(>9]Y[-*&PF7STR4=TZE&KlpU;YeiVY\8L^USK(;i=A#1WDZPe)ns5MfM1dg2kb2d9-HglU/)gH3nj4Ecci!;OY$n%<e]DOn,<%f4kZHhI/+.<>Tc<Lp'TmSlI2/:A&@p&5uW(P<L,)JGB[!KJ&_&A/O%^,Z\#Z!X2BPV+51n+H$P8XILd)<iiZQ(W^]c`PtDBMe4c^%[:e#!n.1b$IqC@a.:1N`OJX[o.bsceoS%Q:`)91D@RM!m+Z/r,3oC4#`(?fs*9#;2oDtpXi%.g3(r)ba*>J+MZrjbZ(V7=p/Ft"1%ePe=5i-%4@0Llk$_a2Ma)+&;3O+L%_,_[0%3:'(,N\Dj^JX!1Rpt+@N5^"QCik\p95S!R7CpC&[[C<hVh(_3Q##&qV,':C1*4^O0%j-kfm*Rd.>ontXfdm7C?\&E6ZJbQR!a7%T;mB,*d9[sR0V4!3AmD[\83)SonBELCtZ,6Flndl^_!-S]D6`n3*"7YO)p:&J^V[AU3%,#4p:]n=up%(d4ckXjEA\*<ip`r\/h.edX.0niSi&jgcZQ3B'OD$u-c.:@oaK?^r\hDTE''35@1*t&oG&C8m]5YAgmd=/1r%he06%Ea!'8@cEPb,Bun5W4d)7<3tG`)UP&(d/qhUXuKE9%-XHodc=<jNPB:o1uA,aQ0d7j2%OXA[`hN%Rq[,3a5jslPolsu*)LDsh#\g?%KB-cW]E&jR8F3StF5Wf#K2juYfYeNc`\84@rJpA(;bo7NRR%V>?"$B>\.@</%#R@1#V7H!\^@X&UnAQDA4I$s&0IAPIfp+A_s/_?%V0I3%QMKX_0!PDgmR2lHmK%b^W_%EHU%:FqmfO>p\N:"J+?Dl.',&2F1ZQiU>Z/GDKfjU5@^(38!oFj#0k+>:e;tYKqou$SBGPd"%km0,%bBt(u#7@RWO(P[@m+eCODN3dbA(N".NVOff!mkBJ*ta0$gKO)(QDqlE3UnnsWYhFm:)o!<<8<;9CF%[1!@?hj_-gV)B(R[L%XSRY(/#l[PA>dQuAfrM;nNWK4KISc:jk0'=4'J;>jN&:9=ps-L+CSH76+6s(I>iGP0Kp@U5RneF%4jG!B];Yqn;Y\bSIFSI44Ff\%IrmL[!'BQ1hq!P-GVEi?=H+M[Hu!-[f"gVjdLr7]jOM,e\Q30KLU\8:.HAna"k]jK38UO.4h/Q9O"XR)UmK9P6G:&%.-*)LA&'H8%(6tTKL+"W@LX7(BQ:RJ;OhoZM/]#3EE:aq/j;L?(0):5-bJ>mYhD,l/(4)dEQ`UDpduVc;,"/l7;;TVK*5*uAkosZQ7g>bd5]M=g%/%Ug&%lE,didJsO"#V7*L:4QCeW+*hD:tg:7T^4c9/I$!25u9<XAm!H0j67a_nhK6[`(1N]8RD?U9j&aA83/IA>V0(.-8pDbWe3]%4^ooBc>n+?%(9mNfP-LV,SdNd#"p_hC(u]oCm!9+!7Wp_Ze<\al:MqUVDWqkKc9;sY9iKVl9`eA2IuZm>IUTdAa#g6=jdOLScUqn%`)%u2DBG]TQ#]+VDcbBC7"C1,0Hljd;+#sLK!2EP0i6dUAs`@M;2U/_?E)JsJNu8!fbr;re1qCrkB$]s,&(!h[:^mj-u%D!L#92^%(toSLUuW^Lo\dK9o8^;0:iqlJCJTHK>HkMu$M)jW=<O4(9\"_T;^3n@]S?JI)aLP^>+-Kc0e^#$WWdH._$pFtS4FSPc&cm@!"L:k%7mf/cNpT:UN>t#aXK_eB#d/J%@$IJr3C!m-0&fE1[O#F+;>qC:5_nYq&4[arPG#,$@+epJ>^o'k?J=jec!Xo=WJY0eHqSBiFE-UX%PIf*Fl[k>pk+;Q96uZsb%YMT`WY^C@'j<7-UVF3Bd$lTU?(G'hcDW]e&Gef(f7Le'"pj/]=LH'eW0rhSEUE7OHfXK3?o(;,OYn7=%p'#5JUT:JRKVp?&P*mdkUU@mHZgjF@ZCh;-]V'Ga6G&_2A<7V%mNL4_ND57jp4P.;/N>N-0"u[;5a('e^fM\-,P_PTQ?fj.hR`")%^'he+*W%^:W!]8^!TVu/?#=*6.>/]Y>bH_ceT_[NS^&M^8;MfZ_&6!_PW=Lf!_0+cU(0Hnirao-S_Ac%,>VcBYpO6h[&Q4WX2D7*%k@i*lK;BQq$mKlQ2F)f"1T)U3M,+>N:5C.\Ea^B&!$#e'"V&i:W9e?GaDMpR/L@,a(jg^VM-aA.\GjBm5RJ,0Rpc.spMB9<_03tP%cs9BH)uh)!]+1i<-X$I;Lu_5S:J=m>&QJ-9G_R2L6)U3k^+JZ+0tedDF(SGuEI\4Rm?f(s=?Hm%D-5on+[VrbaOQYMl,AM:it->B%j\ZW-:?+tZS+o-_OJ>ON>g9Z>=tBnmp%Udgi3rnM,O.TPXL3S\$9;AKKB\R8N/Y_T_dP]1bgq(K@;eq$fB=mSUaW4[?o&,q1^d/?%&bmak?l*0!_=_ue1M#XI@!2n#HY+'s-%B?%Za\\g&YrEJ>a!a/[=%IOfGKj!D@e!5X\#IupcRhT2ZRM*2Dg\ua^2(f\!:D*piJ\D%m.UuMbEBl6O>%JdQ19=iBL's]RtHj,PehC+<J+r1KR@@=('H>VO_kZB+W,h]"1,c@1\A01/6(2QiO(3U63_8WGR')?3e@MG>W*AX%a,ibP4=h\=SR\*s1P:R_(5o4s[fDVU9X^<99^\cGpt@4*jYM;jm%gC??q[bI1^L\pS=^]&`nBLo#-lOb&VfTr>>?&pSSsUZCag,k%6C.C_>2cfp!EKXA.H#I$EU/TjY=bfG'c,_3X)!^FRje0_!]m3F4uT\ObNq#,WC+?*!XT]OQNAD6e;qPC'GR!e<UrTneJtq:+&V9c%c.URC)![lP$#3W=T"T@dQTQ+/0ODD2g*Ru`gfJJ$!$ucJHeu!W8'H2'rU%2j-$L2tLdc.3Er0WJ`+#%D@%bh\(g#j?dK=_UF'%Cu%5h%4nS]@3P\*Pg?l5LNu@YT2,nnaMQi^Q(5/.b%^IRhJfP@214&9-B:>TEkua-$Ji>?$Z,AW$O6g6iPp5-f0n7<=lY0PB:.<T/+I%%0`Mi\=fW$B3LOL2R8&c.H^?42f%<<L"i)L?PHl`p(k+Do28E7]tD%k"(/:p*bSo?((7IV/3#8qfWqro!2RYg@a6[(;F&U.MPJh1%fV0P\KE=gs/?FAhKV:3O<9$??ZJHE'6:'9o;q+=DbZf%"UR!K0SgeP3C2,.d0]?jXCVmKD6bfd<>*YILBn^kH-=P(/&WnSPeH,`F%HtR5+J'P$Ne_nME)"l<:\/k?]0l=OpCY9J.CD"%YZSBO:0=m2@@DKK+>/jHdJa(Z-Ti#DFA*LS(3kQ.fR*[GqW.t>3Y6-6i+%<E<%EbF#B&k3!<2F'2!hP/\2-Ae$nP_C?h/fLs,/XrV?`/%h`Uprre4&0-MiNSI.D+6pBBi&th=E,Wi6IUZumKho^T7eo,3$FR>d53H0%\."YfLK\JEQ.,MhS#otH;o[c;c5[T7DL#lQ+A/dg&S`:J)f0'N@\L[d@s<*RH-(m?DeT\1^a3A]N*T8eYmC.@f=bi7=r`J2b'1pn%'ZBpP1Jf+ZA7U3J$HEO@"DJ'ir&lIt7[%c$ERrY`ommq2rErJBV^c"@i#m7K_.:Ljs%#,"XVgMiFdUG1p?L"bfH!u"\acG76U``[%"#kbd.Q0O_'WM.6JK8F+(E\/.oQF=O5]__d%clk+;_,D01)RrULX\WqH;fc$,tP\<iI2DQK/g"NE/qqK_&VV7gQg]f'oi&@oG?WG%25JW5-1mL&2(V9j;cl?o(,A1FN(*gS@L/-6RhSQplNY-;R?;HVmA@rg`"67B6\>gte#@tKZ:"__#rDI7Z:[a"d^utZQ1r1:41The%iL!O<_8MW"&,Z'U=[p'tK,nDql#cOCGOJgB]mY9QFaSX]E:Nnh(R+%uYq*h6#d8(45.nHd55Sr5li-j0LPO2N5<6J>TVAW+IQeKo%IJVh/ALum9T$4=\Dt;AfZmb!Rfle#nr)$Y/4`)(5'^O1mN]+RN8ktrY@=ElffCt,Z:Zc,*fpo#2$tRiA`LKdV#8+G*mgqE(5K\6K%^hN_aZf4"gi-8/:+5+Su'$eDCYa44FqqF!rT%$/s1VLojO#EtAjgEE8=M:OPY\]"L0q*Eo]a)/6Xs^PmSmJ6He-4[K1oMl2=Q+A"%npbP%[]H:/q=UmOB4=X!2k:B#mdC]c4T"bm2fXhbe%L+4ri,np^m1"2N;V%69Yt[UZb;Q!b]pV;0E.o>poD_YGW.M@JurpTUQ7SJ%j`./I5+-13f=*d]ehpO'K@qQm8f]>>!V+2E3@JS-)D)U-Z(4oR!*$N;9!fXn?kL3q4aS]!Dok)=A<=+KA/REFVckN!;#L.S^T8.>%,Xh[$i2)X1am:G2+ecE35uZdoE<P?u,QXeo`7TNdhC[uAap^)s>)dY"!`a+O'AOG7%<@[#(0YqhbX.4PG<b)BbOWt6@BNETNd0)8%=_jtXr.%V:-?Bn\kj2OEbA$?pi5^`KK5@i.6eQ!<ZRH3MRuHV+fYkidOsF</#hN3JB$]jYqN4()B2YMR8kri>A_JWg&V5CdZ#"#n%R39aS"0O\i22IP&B7\\f,:Jg64Esf87@'@0;gr!@j/kWpFC+roX&'W%@\YV+4Dm"],UfBIKb0\J9G&-T1feZ#l@UeO5)IX:_t9%`%QR`S*"Y^>;0D2hgfa>Bmr0bDm8,RY;E#!NI8LU65AKF-p9h&Q311.?JgS6)DpmJ7<ZHqSWlQR"^cR!EZ,tt:!lB8WM*uM;_Q=7+B%Zjt'd9:P6(TXLW\I[Y-3A%/)!<3]Sk8]GpEVCK4VFL;!'gO>S2p/?!R@R#j\TDF"$/[h8ugJ99(?h`$DT*bC/dEb^,5LmHQ8^QNA%m$>TFp=$i<gD"/,.5in'CVK/$b^LJ:D,\"&:JFO=`n'Bk5M[YS9lsCmp?1j6I(1g/gs05$BK+.rkH:L*o9QnmakU;$WU'<-_=l?&%B0F=1Ajb6^3ST!t15_dRrA<egRVb8`[\!cY:M\]\aZ(UD.5;iP594Q)%;e>;\]c3d[\'#@)FR4#qrnl!Z@a8&;n5=dTM,3mg4$V-%8;;fJcaO7(!M`)$+`7*jlo*.,5AfDRmAJ)"e'ds=D#7r7pX<UKBkmP0@/DDA=]jtekJb;<1LVZQFqdeMRI6t"bG4I&=nbifYt1?3%p/B4&a#"^CT-i;gKC,Qp!gFN<qrqk&F?f_T=7%cTC(G@@IIS78?!(i4RWIb90$1i&b3$+GQJa)Me$D`*/VaH"h*g)k`SUuC*2#:%%HPfZF12'.XR5o/YU`'&k`2!PYKs",o5uNr$cLt2)g0H?"6pNU)[TWCW@%1^5PY@*7=a#c-$"[,h'nZZj;o@^_h]Nf/7*ZPYS1H6,%&YF=*YqTaY_.llDV@(+^0%?C09*KqNB4_>>X"^kqCu284!$%HX>//&+2eUf=P6YACM+?#7#3HoHaiI%E-rbr>W8CP/2SBlPk$aCr%aWdZt'S;UOmIqMq6u!;]k5deU3dMb7GmE9D+0hr7Z1B%lU_Y::&0iuK/nnI5;&PM^<QGb@##e6n^a%3XSLX`k$0I;u8sBbeE\.7N%U0[7,-fD!1Q&pt9?mbS<:.a2?i,QM$SAEa`f"H!sUu\YBeAo3L*'qN\:L]u$2/nk8"*/8'KX;d##$.HI&o/tSC7.Q6?kA9bYRuB9%;)#Z2Jl0qS,;6rDS<rR(ldmLF-CI(e@rY9\@Z"=5+BOATh4d"nJ?MBE5*c9&J$t/*HE3&XKn-$c/#@7>7f\38j$?m.X!P/RHn8ET%#GB4"&Xrd@)D6(X"RRF"GVl@+Kn,mALM<NYA-e7k+.H2lKELB0=CT0#qd>_+i+B#4?pt@nk,Je@6*Q(j&K?6hoohAY&m)?Pn>DO)%S(_Nm0k-`?0'CX1o5YoJW[0GTac+1e.YVMB;W\E<;ud]3L?.A$_F$.F/gtcEb1K=/l*`_4cPFV5M<uGu;&!0Ni3nXN^^_Tn=(J$Q%kOg:BJs7F`7e@62V?E`[fMDVRX=)s,Nls-9*_-.+"T19Fp2!Q6hc*Pa;0$kSZDd)4-4Js.Kj#jA11iEWUc=LM8rrd?WX5X0iG4Q'%OQ"fJ6FQGdV2f7*b?<LnQmMTB'(Rmi$5D`'U4IGKXY!gk(i72AJ\6+kQ:FfdHP%aP%B#a01dDmDcV=fOJ6?T""N(b`>'>#AJroJ9%oWT\]-A.b2h_oV-d911M$<4BX0ZM,%/A>;bC]Y21PngGN''iCV'2C25I.>1O_m8sniSju9\EgC]?+*!B?adV<6InO[SY7$C+s0;W%*r#=$MH2C5`PgD'#39(!,t4b/hN4ramY>k7=9DaB:-bDFU7jE<=4("ne9J]Ma3\=OR!gN#G]Atn-'(MZ0GoYEDE]N`aN86clD;H*%@d1QVYs#X/)B(050knuO)T!SPb8g1b+@E2(OhZj:LXq.&`2e>-g'q1<pAFciBVY`g!C@g64W6OqR8\h1"gSJ<ht;]Se^^0E:=sEO%lF4_mGhl(u(6<TPLc(9d`!#`lZ,GI[3*T#=:,>etY4T/A4q3W"R!f2*P+qIL9u6%?9f>3LlD8bQoTk'>>,&#ZF<+dF0/8@oT_b^T%I;3*?U0YQk>5SnLM24B,j>AKlaSSOWD.spq#=E!*609+Bgp@4WP[pb<MD9?/K]<oX."LWqYH-rZ3OU2WWt'6MAj($rE;W\S)BD^(%2RXOV=):_^HX$$c*h,GeNBJm#^kVQH`W=U(FF`U,Q:qPp<<4mJ/B]LK(mSt*6L1,RCO1"?Z?jSe8`I`KV3e%hmb`uCRK-:?eVcF1%8sD@s*@[@$$lH./4->M\g@KD]/;8C_BZ!0B!f?u,Q],#V%32P.TPsk)pME_@N_-j<+eF\-9r0>GlWmAl+pmA$+CR`Yr_-QaCOnl_%OAL#Bc"\.Jq+B6B(!e3=.biMTF=[O$9ntMB,XIQIV&,,1[q%c&k/'*<=?%)C6tQ%ulP=b8atHqZ!O?U*>=NCK</\/\1oAcs`\OPC%=S7UGA%*`GV23P;5[m'o$^E^7k-Xp(JcgsSk9aL`ff)ThhX'L072Jkg`<qpnS!cGt'-[h:M&EQ7%h[X[e+F8uoq"G`#SqF-L92R,%13^>QLR17,dmQ#I:g'oB*_5EoW&+eoe@'e4A`0Z0qEdW5X>nt+R>b:5M,Jad14-'F+WCN+9S+MO_Ssm13%%fYPb\_-:.f^t)]<5p%\YlZog-1l8Mnt`>E,:V\`1C[?6b0huotp'B"k_U<Z>"D2,Ri=uOXbD-L"<_@YGDA'QXlr;nCMbbBuMXD:FLqsc%JR00[ks,4W[\;%FUCm>"ElX8LA(M/a1SEF#s\5o(9LU.*ZSA8>YYWh@h'1q^\#gn'TNc1Z,!OSSmd:a-iC<8T[lFaq<XE4+!bl1#>C*q5tkn^;:K8u%)]KeQD]*4[X-d-`#\Mpn(E1gE4F^5ThWPp-T#^mT/Tq8f!'O2EQ`*=IL+m@h:uJVIfEequMoI1$NC*"&??Ro\p(j/)RGq[k(U/Gp%U%?hS;,X`#%C#Um/4/\KF.p=di]NPf*aR/QIVZ0Y]df3bM*+P&dK6-F6C7P@;f&jo=i)?12VDF'mE?l]Rd#u<`CXaPc`#6EeUmjk%<e9R'Fkc:<iF;/mp,([e)]2;?r9+0iMe'/h#,Ds0ZLWaN!>/c3"pA2Jqmq@s>E_H$Lep)nd4P4sHM'peR\d2>d:4"F&SdOAYJHoD%ZX:obS;JADhGQBBIPjGI%X\Z2*W;o`:#pNa)QZ8)W"7[X=VURJbkmn^?!%PJ.aN]YgtK!Gjf=SoQPh27D`d'%7#T^fLoN='B\B,_%F>4DYQ0u%a-qW(P^ntaR:c.7EOC"$:3k#6TaoXqRHTcU&dA%8#E#c$WNsq&$mtt_?iY.6?A.fhTn",he_r<g>2RPk)+.sg2hGnXk%C^N#"110B%"Z2E(9n<ES_HH,V1d#OoQsU?,I<s>#0T(ro>eXb*7e6CQ/o2_2a>mCUeKS+_OTr)3)A5]oFTh)lo&:<k$bf+5C)=fo%SQXgLjTm&6!Qc3H$Ao\VX#%@*"buke$=H0-#RV=4RG&QK.O$2QX&,M../+_qAcmuX*)I?Hei#54Z@E\OJi!YJ.D`:!"$.4!/.=o3%:U=A9:/XBbL?%Sg+X/&6",eF%.d0g@`Q6?Iee'cT-;j]t^557aZ?ns0"jW^f`=0?DG3pk_B,TZi09#ou]PEH,Sf20=VmU.`4h0JV%:uB^I6c.r"&=^Ci7l+;Hl*)(M+;NDX8aRp%MP\rW)R:n'd$K'X'*"n)e_T&kH;uL)*.;Cnfse""72p4]Q*e2<AJB`:&VI:%f:)>Z%=cVETG-D3l28JKsfC@O$(>L7k@b@GO0d>uhJ"BSp!tpKAVh'L)))g9C+0^XuLkX[u:f2?Mq*;%Ye^=OGBtjp2^:3e_G=G#4A`&8+%X]4?Le@`15*9ABYCk2f:Ob.=R89.S'#R>d3Y/fJIm]b@J`FCT',OVf$A0;M#p$C)n8q$Gu?dmtCX!,2*M(<8(Zji8G7X\@Wn>90Q%VMh0MOds_MG9MX0G+kkE!Ccch)mg&D),3&-YshMpBL$>L4i=\`K@#9pH+K)fOBtL\8?B0;`?WdK6C?],k?#Nl.KD,P1YO8jq?".(%65<Z3B_Og`Ugb_\Q0q#>W@hGF:u5fPPFQA;[/-3!$>RDjlf;%L]pb@Lh5LMK.Zsp%ZZWq3b;YPZ@pBIW6C%cfP<BH6;#*CSH@NPi%eP^!X?.C+XMk2ZFP_>Vi*2(NDK!>Q2L/_j#*R7.]3ZKLO&fr8c\XV=$Qo9dY:sZmRB"eOZLDnnJ9M!MYGC\B86`CV@p:eC[80*Mj%RqCdGOO("%S]"^,S.^gcW)^fl*,mpf0(HD+7o;QTYU\p@/j_FJOObR6L7:IkdnGTTZt']?F`H6s,dHojOHZ^f=U&r)[#_Qd6ajt5%Ba+*e?,DEl8aP1OmL!m!Jj_s)6CG"_G@r)s2!Mup`lX`?9R9Dg3=1fTNJ'Vo6,I0`8rqRCV-S+/\&.4_:Se:aR''Y5@a0Oo/1d=B%4F(aRc!Va4+@cYCXiUqJJ`8iImTeroXkT#ODUC?ol-KD?"[9;Q;7>9.%SAC7Ft'KVCoISi8A[Vo$X-]H$^4C\JdZ"&JPU`!(OYPO%YRcoD(#-OR_5J[I$V?HOHjla^g2j^'1^PJi&dAOIOrdN3j,BO1QYQE9M_Bo)k]#O&H8A3S@-N(F?p>c&kINLg\l:I)5FYW7H-)Yq%V)aKkPXRrf=)*<`)UJmJMGi=t+P)MIQ6^?%CD*2Z7_XSGC6D\=Ca&jWA0]g$SON"n)>"6Bi@6*JA;=>QDWk5dhe8eWZ.dVmbrX4a%&aOlh%nAPGB\t!)#hl6!:;!hJ&;jAlOF##JWC#^To)]Lb<!>8='iQYM0_BV5-:q3O_P'0L2WqKk&8Mn$:.cm<['r_6]I-7#UfIX&%8GMSg4J0lt_?M[`2j7'`PC.$5ce33%?BFG%PaLpME&!*,oe"2ce-.ubEE5#JAl.[r*HX<15BFVVB^gn>H_t72T`>qKN9(C7BQ8H,%3I";h,RqenWYtOReu<Fm&gkiP3N@6cGK4NU\Uln]hH8!A-[2Mk6dU('E)6aY'k?5Hg3"$DUA3DP)O6mBF07_5$!i+=LO;#:S7Enp%"1T5V8Z7up+J(8aOR1+("R`T,]uk4-jLj*dn+f=%KUP#$'js46T`fu[;(%+0f")]e2P5N4$Q[W#Y"6l.@ZM&gSAeDNf4BM3Lp2pM%#3fB#XXBX7ZK+hbH!=4s<j_+eH(.@gi;]JTaSe.iZb>K.3d"E1[0M[TC(RD.>^5-.Hdj/rd`cksUg$f"*%-@Y_&oL#/.t_$Z$"=@%Z9([3RPTfC.^`(tTRp2m:c94)`rT+7V[2/mWpMBIY,C0ELRL++0mI^+ab2<PA[,2%8;p9_75L:MUmmA1NMMjqT'B-+@hI"%L_X,f%nK'k;l)*T>,\9"2`<7XL$UJq#^a3u_CcT%VOcl_]WANdFXF3[R;c$GL9C5Y-T-u($[!\TVo]j;FrI?C>+Z+H%>YKrdoN7I<2<*DL%TgFs^Z"R,"QqcF?AM'rt!L4;ZD,QE49aimB&uD$K+2"$Y$JOE[/SLj$0U^0Hd.4/4=Z%uJ+to;Ye786Ca0DS=M]A9t'>""5"0hr2%$<MY9L;l!@%7@4fKn;%*Pf;sji:TXgf<,Ua0'!:BDmiW,&?AX/:8Lh<O\jn:ctWn]bRN<6c*5]<Pnmn"/WBb-/aIj"BQ@Ss_Up:#%?s_B'KNc'tOOtBA\=;R4daKfa"BGl?2OtIPZ9oP?GeFE*)6^$@'"&KdqoTM;;A)iAeO0:\aiO#W_I\Ug8mjG1AioT76NIbj/R+BT%(C%g\`U9b,p91PAoVhlr^UmhGX.pW3k,"(VdP)?_2`\OUP%G(B=OhS(H]jhjfRk5;CPK`#Zu![8l67OrmYIV^Nr,f<brRW7AGR$M%4%_t3k^FGqKW3-WX9P-TT%858\'.g%Klu5/^%JW(;n:Y4lA/_JY=p4Kl+L!,0MfZHk9,I:g@Hq/ptI:gXVIZ3S;GcM'%r?I(!)rp%daCU\r0"?>/#utgH9$#FX:0T;Q@-?C66i`RN?Zj?Mep`s`5L,9ZA==]`h>KCb)H&k.V>88(;jf#,Q'RO<3]R<q4(c-UY#mH<oZ<8%<eRu57\eV-Q)(i0lL0jn/"2#@-G(p$j1V":fN)IJDN8BLU06"m=LA)21SHR<Ob+!/E&>'>Q-HI[D]%mVI&:JocGY)u3\hS6>N0#s%QKfk;T<4!E\#Cbc$RW;EV8d&C9#N1_YuW:8NG^)E-?IqP't?gFmf4"Ah.\*OoDDu4TfTaJM@VW4!/r^Zr!i?d@YpLa5`&C.#/lgk%^L)C7<0`it:_J,a67W<sTSZZ?-sk8,6%ia<@4JO9:EfIQOOTI"b(B41(quQ9WiBFuCc+%$UeX)8\`_?eF,qO..sP#,E$r=)cC!I<%QRrdW1ILA+,/IV^64@<)8s>mXU"X!0b:^i"j*K9N9bOWF>Ik!KQCEr4G,]H&I\c,0g'0Zj@$t1+CX9$\ldIVWM78@2#t(MlD2@r<%@d<mjFsUoGK)%B>`F\)pood-c`#;sJbsY)Q%Z`u`mT"fWmHO)%fj5np7&YkKQ6lni18:d99b]QA<pRJr'?XP/>SJYE&c.C0FDPdc%*W_?Jp4/d:qn'T]H4L,\2B`K#X,"Yj#k$hD4ii$m4#49jot?Mh,nIjrXJM7cRDB;,)AmXt@^WUCM]k`Z/qm%@L!DH-!05lC)8Qus%JC%G\'N/C9Gn<kZC*HEt<>*8I-jogVeJ\F'8<dKb&ZPq`qWM<r:7ClVIUA4AGZG`K/K+_P6f*&B/`)&3hNGrW)K/=$XN?lB$7ooR%C1KW33P[%<*;K/6^l[UO)_=*'=kX_RTM_DZ1fTk$]ZVcoQSIrnq-Ad-+ertB$PhInSE7Q#6nWUe[&`2O7u[JUk/F7J$oWlSJ@HaN%JVlY>\o1.EEOYk36O1D3%i?kC!O!!AmaS]@^kkf3+!WZcrGXH>kTZ@;:Y#cr+kDVU7ZnUt@rJUT708oX-q@Xq^gee>1QLj*[XB<8%TLq7PD1Q^5e2rug.@Zef[ql/r"1dC8J$3"M:_F+==bHiT\iH1@UgV]MOp=[J/TP,44G;J7,-&>qShq]oVa@/N[sjg4%(mnuI<JCd%Dl=MIZQ@g9f#0.7/bMnWPq0+%=P4.O>O$/JUm5gXS4`r\OKbB/0$NW>\)b-c-_bP`_j\oi*)!T@@cZ`QO,aKSpnd"/@95k"l\krN%,'HPds(o/29)e0#N5:1_XjCq7[=$)!*)0D`a1POK>#n_7"PG@A@,Y%g8qI->2mO_P8I_P\jj8S\+EFba4D7m:mS*ROece1mZ7IA%%TXtWennj`B&:pif0oYl=;4A4X;cbf`4Q<CPfqp:Z:Nc)5\i+AO_JRU<DVlC:MhI5pObCgtr#U,NT`B.3:#4!LXd;[14kOn3.6'_o%kd%X@/Z[@FL\.SO5+CG6gu<>(?LG&bM,p%Y3N6"J"cCbX)k.(cli+?ABst>Bic"c1LC-/ubMhRDNa'7oT3ArOC9"2'JQFZ7n486>%Li6@kG9g.\F5ja:G@N(5$O8!s6<"S=9:N;BBBnlT1hbf>Z8oI1Cs/]VgC\du)O.eT2e(B>7G;Q?(gXF0[L.[B<bN)G\XblPLhl!L%\-'Z<?M.8u%%4L@M+K*:"7h"C]VnCQ=S@$@TV1C->kP+n%So+o;&4kJSEi+lh--5'Gp5Q`.!r>ZIhHLh5g.3QY-,0"D]JBcK58Td%ohs'9,*mJ%;-&CnrYmq?1F^\'Lfd2u8kTc[%B(t#228Y$k3&#\.lWYHaGrZ""`;,m01sJ&-":#1QC9AX1S/k:n9_j5;UK5O&RV7!%_XB@?g%$Z0rt-PsQo;e2e2;f1!?43P'>4GBlC_44Jr&b`]bb^H&i:#4ZTTXJh\*2jZS'H9/3`UGo$KB8;pKN,])#I6%h:D[@cf;-%XPRa?dPt.W6isBA&rMb>F^o%'!<e<#r?>(5BIP%F=>P-"bG2;6ENG7f9Ob]4+;Hc.'2tLuY(qi1k$5"E2eLU@>!LI=LeskR8D*KW%(qU%'O'Ebo[nUrr(c&JD>0tFC!f!L1FF,$i#Xf+=?o#(27K_$i)V3%\f7B5_Y`?+E33*PD%!=Qr(e/n-`HMH+QP8E,?st_0e=lLp%9U_k\/5"Gp'acdXOD/l%%_oFW\O2+&/oHJoT+P+TF?;nLWT_MLgbr!%oQUr96_)Q,Cb``TM`Rf"=M(p_)8R`K!+*d"n:sB;mB,63%2B.682KKcAfDnr^[^(ZcYD-29PRXZ*BR.i;8P)Y+#<Jmf_(H_=KL%n7[5nr(q,CWg*agI4QK5h*Z*Kiq=cJXuD9)!)&E1a&e]$ED%a%.O#'nr3Ts*i)!%[8.5FjY&9]GSGL_e.anK3WHRQ`TI]ZnY1ZRBR[+=VjeIED=OfVXB]BdgiRu\[6dsfrSD"6B)H%nhX@D766.T%%!=k0q'7LFPsnF@7m_XbW;14)'b"\T@fr)(JK0P!UQ%("YR3*M0\"-lC$X$-KF0Ag,HeS`(<jo*o7SBa\a+*W%Q4Gf&ZdaI';Uf2%'JXA?jq5#;_b\7Lh:AhoZp@1f4_(j8beYlt`F6JFrtIk]?jKO@CHuZQ0!l3s'8Ae"[&o-=P7a"g[E\?hWm_JKeRcO18?B:qR:\Q8%Em"J@,0M^pCD0$cG)L5pEA/@#X;,!rrd;0&^_&7,h\<8j?9E!E^Bg,T>T9BipAi08ZqREpF3]Ps:drNaWB=L/.0ig;.ABtDVYq^j%fY&6IZ?T5C>nUF-=3qlDN4>u?9>:1@d=<d1/g;hI<eV,o1F,tQNC`fk.fHd/01*%5-K;n&:oQ'f,'R^Gi1c0L'C.nDQts"I;9VWN%?nqjEIn0oq\*5@fNiLA/'S6?;e62tYa:ja`s51PJQ,JFE.TnVWN.m.(VEi=h2)EF/@"+%[4G+pO7VULs)GM"Tb4!$?JB^RN6QGZS%gs(SR#\LGtW<Wbe_N!7f[B.8]SZGq^Ec`X=G"GP=FB\;KA$iOVP&:rSg#btp#/!k9)'t1"C,eZZ5/b$l2N2&u685JW/ZJUnJRIEQ%Vm<nG(8EdahC<i](nG+Y,L<#5K3bNSd)76`B2AXJ_Y+CT]JZ4WLg:2l1lRR8RS]T/'e9b#D<F6QZ\*88WHA-QMa^=eI#.hCBlK;3%3FO,3`A"bX2`8Qh2#mVNiW6o>q[ESMI?`f86uj`Re4*?n`^WE*7"URMX00LfJAd<HY82LT.YR:!.WjW\I'KpV$IL:N(/%1K=5b:@%\3"A`8)UXU9\d:^7=`WT"8*4oVnO)kU8;gS283q*U/9]'/@M>Y/>`;E3:#]_/:qjZ@bW;blkSNVMUZ2.ireI/;+uN[TY6*D\SEAB%\2MZd?pU.fD*j=j$aI_MP;7(k"CiZl@B<a"HaG1I'&+Fpp$Sl*[%M*F-g#aJ50rJ,&89s-'X:N>.V_S/C@4Gl&HX2l:]QqX\a4'@%'oc=S8nljU]5>ju->E&7BGjN;JN&t_#XTiN**C![MhEbJn$DI)5?g?(no/4$)_0j-"muc6dM@AZi#mqof;O-i]V&-RNELcF*],c_%%ksAs.7fhp;#D1V*+D8DWUkdpQ+`IdI8;_<(rH<O%DPE#`5W(Vg"T*NfHXSPGV&OgeGsM"WfrhqW0&#R=pAO&XJ'H>km4'/+B'gF%UmUn'4l#lSI'@M8,')sSo`5%AM"abMfo61I!Kp,V=0qj#680`dM5o4Whh/\DRM1g:8gd'nbs@/SC.D"S2-1MDgI3_9\Jb3NNfSHs%eh@<aXW,9W/*PNJ)MKD$PH"Vr'#BQ<$hE/A-Yc.Wj-tt%JiUht"-?TZ,k^"09'rk/,ZaVGo&%P)7L@[gX/Y7X-D@Sao!9K<G:+HC%G6[:H3uEg4(e2+qOM>/j7_XR3%pcOVQ.;FB0[Q'9g`_<4S;7aR)C=]78<J,)Z]3FWUSHb+6Y*QZB@j5iZW29D;bXjm@U/WHi*RC6%ZY*p>rgo*rp1]bgGO0?I;JD%Seucf9>eEWdRT]k:OjIR>\g]FY`%Bf@R<g3:8m$f<YE/CUT*a2P!56I0ULM\6U1lNEj;d`9.F^T:%NGmBI[U?;.$4%2lNPM&en"!n'8ZW;>[$,@(ctQ8+Y)PIo9S$ZHLDHN;Bcu/G5qh2'k[n&be'Oq(me3$AK>`%.5#%6QeFp.VKP#[&%/la#JI't21nDDPM<PBI+0'0nb`./DT&RdC"*6lFu$6R4LWJsa"U-W,A>PE(VZ;.,qL_dn-:HLW4Lkuq#/Cs\J"u)FC4_-7a#WaKU%@TDHYG!Mt1EK/R+O_Ka8K#F><<ou,'D(2kVZ$)VQC%S+HM8O)Ydr%5L"bX:B8\=)5SV3YS:TF`#aQUEq?G"#/Di*4=(n=0bm(GM"%_Cu9FpV)LiTk7`g#0mAj`!">1]$Hf^DO8@L:1`fA*5,oin%[)hP24qH7L?I^?&Q&X@+(M6@CN`j$hdcug&Vr5E]]*QicHc4ifB#;%q+nl/OSWW;kFm6NcP:,""[]soUmoHJPoHLgI+.lmS/RYm1;-!C/5*)K;$!^MZjcGmmfn+F1;IPaY8egEk<?h-&Rr!NQ)UT%LOOAe%e+Qa,gQ2sr'tr"dN\.TMQcAbO(9o2mU%XLe.S"EDor_H;m7gcHJrRah]b5I[N9q8+\AkKtU&6Oc8e)$7gW\fB#C)'C)CnBG$(pCU%E_mXP>K?.p)>bYS]dI<bPOFqZN8^jRDErk+8n,^r\eJV$al&BJoh*1j+&.;-UIE(B;dgTb@]uZ;+cg)\KO1M,TbC'$?V*\j992R2%XCkiqXF`?L'H!,Q<YHZ:ps.f*fYkXo$,IcHp-q;:e`KW.$H,cZj+%q1hBF0gLfLP;"J[)Om)AG_4ahl%'[VcS]WE>\h"^r_Q&$#%%7*/h+(diE<N5buq[Zo3X'>@V,i#*AkNJ3$'ZRP/p+WHD)&iK]@fkAn!4Z;>>Yc$Yt^iaCXbn$DJL[uPuq2O2L68ZUW.$#,U.`Y*#%840fsDo>.(`Blu^DO9-)(k@<r?V5h[BOiIpA@&*?"(oRn1D;gG;4%_Q]<q]RdGNV6TV?`QC@dP?"M5OQERu9!/i/uh]GHsf3Fn[X%dc$UU+Jrp_ZKA#J+gZs9KZ%UHd9I[7VBHtsHKD8h@N(D]j?+Z#/qYI*WD7=`kRde%Y$GC9.TQeW++Qp+HU"q5F<sZb^YMsG:uj4S%(o>=`.#TK?.]FR,l8%!j"UMCVM@FuS=7BX]D-`8.^'AMPd@LgW8P*_8E(KdGc"ZY.!R/naMI"R_]tBQNh:_J9KbS&X8@0&q31MF2%4l`qnLnQQe.eB*;`"5J:m8]id=gP5TD_*?U^hkM3r*V$2bC)bnBNPY3SMj]ejD%0[!Osj2":)Qq9O(&n\I96u[8YkXr`]&BY#Q<T%LEIgcWa^rKJQRRD)G-ore2QOs=O(dj9$Kc,dR,FElfJc'rTT<sD_BNBEJ'!#*mQ.`clrtSXIP`5S'JSQ0P;8oFU]AZg`)qEJTLJ#%k)DK_=_RI[Q13!%CiW;d3&P^]UHnE&a>6qU&g)*r!l._1(.%7OPprkc-B(rD9/?aN4cCTcEZAa?8&MD3i1K[3H]=3>"cEB10NF`a%-R'EZ5055&!c[X5LK6,C5$GIZQUob-Lp_*lVGA$LKReEm)WH`:d=@r@Xl/4o]4*V65B"J4,S]6?1gk6K]?oJfUq#JMEf.$kV/u4C%83qu7&!rHCcsfcN(C(b=77);n(dVW-/,)L55uf@B^Gk!LE]lu,;AB_JF0p0'C-dP<$;c+blB"pl6jo7.QGcD<9u7Kk/l4jY'QCDP%[LUM2m#@H49Nq[M]=/1ekg;S?UaWrhr@C:Sc8+>2B>R+ji[s7!%;EZIS!U>C>dWd8[HTR;f5s0W`TF,q2sSVc(?&%5Z.q!(JRSXM%bDkY:YpbV6j+[H0'<<d0/qb)o_MhYgag5F``+n%n%>`oC1YWg5ihPRFJHD[aY"E15S!%B1WIo.4h%l3D3f3)uSmeGG(BJ[1LrDre%*pHO\5;8NU?Z-t(:^"&[g*gs<nr0g+c>2*1d;1uhmYWcDP1^T+BOYA/aTa(72p0N.i2'1L0Yp>D$3^En:bj(j=XE(&;39is,YUT&%C-%SU!548W-aBtZOAI?V8E`dOL,#B1VH<5>UXAeC&&e9:]hK+7lq7NL_iG.WVQqGDaC%(opj'mip.OD(=Uql0''d3(?ZN[uWpq_=%7QW:SX5pI,1ob>[c]YVcK[K]]1U.$2]T3>.iC'E6M%M+!)W#JBrXb=.>1LluKoIJQfBE8n.C.9.ct:.*_Ib*R"kdL"H9#ZO)0UXq%'dMLjh+o6[XLC6]U")j6#pr6^C\_@GDos_@CW@l'-@m()f9or?PJM"4m!q&PQYT_T^=WU3FB\`.Ls2]lq=dF\g=j+IJ0%jaT;i(8%<qCAUPdp%1[nu'0>9A<tFHmE$d(u&PA%Mau@6tkb'l,3PL#sWp'jj9l!mZC,.5]*ai%3rk)a`/=:a:%8GD9R"@VC8n[ArrLaPG70%C:567-,r'12/cYO0&E;tah!/<Vqr;q,)N]B$F4Yg%(JkiA+3$>2::k%.qap4<dcl,3Ua`o8Aa)6MY5/598%n1cb\Q,o-(VmVA7"U%:_6eQU.8)=9mTsNLMN[1VP4[4ZJt7=.6euucG-\`_]IZ:M?cKNH.R`nFt,uIJt6Z5Hke-<H!Ts3*Ll4G.6<cO\?O[pO3)tj[=pIr%E91bgZ_?<Y]58!m(U.I26e@=3*GS1I=H*`U%e5LW!<ALr=CA//FKRtaG\n)&$OSeY7_@FB@m.d`M$GQ3&<^04P/=$+9iEKBbf?S^%F/FChmDNke"M:jM9;U6Wn6%:HjsSZ7N@]Y/H='4I<?S*K>p?L8f$1Kl+3\#Tc1Keo0p9GUoa?">?-1[&JB_JjLl70"G*B%@T,rlm%4]"!)rY4@JJ:>H03[5srTgE(U--mfE6$S#t[sY"t&0]J$P>>'V#0tZkE>!"GB:VpJ2mJTi;#n7/_N(F&(&ksOKng?LeD!B#]qRO3%I7MTl?)1HF!=Hn/nT,.o+gG>dB0ripc%VGkfeoL.,t\oG$O/<7BIu/[g*7YF9U?t2&mW6%!=bbI@E#"!A"Z3qo2Lu3^efR[^Ifj3%I>C$mRY^$sKSk\eK5nPf?=sBR(=;@[4Q46:&AV-%/B\p94nr1r9cKI\;B)9`nijrRFj38^dT)VZrK*8oVf"G$@i*td/2%tld$l!]%PoXZt/!%"NF<hiGflr`4!G2#q-.Q*^Fp)(red])K;Fncgf@;=B2[Sl+jt%`#`$0l\HF,bC2oWf)H8-5:%?uNlArL>,F,^HNd:!L2%TdSscCdEmGG-2QtEub?2BO\DX@;%LYBI1sN4<%X=3hjs"Fu3Cf)HYQ#AD9@KLs<qTR,'0fan]6tRb*0al:+BSI!Qd\(6gLE).L>k%E</uElq4G6C$%b:)&m#X9Q*X]S=Ao*^i-b-L(B^9A=*uQC`S-.&598o$3n>IWIg#MZK;L"Dsu?Q#Kp[7arEBp3$JA*#d`>pq7&me%=77]/Ph\*-YF=\reWSqs@gers'fhGI`JB[X1[d<0WR"e1,Q)f*R;gQ-G,BiH,DkR`B,UcBac:@BE1^sg<(Ws_Vl<&Ze&P:2K4NP:%;QB`aA>C@o*5UMRiF$cIMT_FL`GRXgMUbl=n!(C_/gPU2,R9t!,TO,A??O_E0`m64VVTT](4<5F<ABk(oq&.pX:jEu/$2IfX!b>^%GQTDJX.<6bLm0F&Ta/M#csIkI)Q$u6.Ca()<-T6]HBGOSVI7uZ:'%3)1qa!#+HSA"2;7QQ-nIi(c\<&O[25>3kt::V\3`Nq_tlI;%n&C,u:^?:L@%cY7=DeDin4>68Hq5WD8Akk/-tn`9cE-8*".*3YdEZ,$IGi62U-8>k#7bGfN1F>EJu5bt,?tW<o&b1aKN7tm?9)Xi%T/mF/#KJ'/"BRc>Y$ED4A#'AB8[qUD`;G#8LH*mlX?sTN:l%`_KZ1?,VDfYXT6ph]L-n:=$#<,&k[rnu\n;>[CAL[NMrU3SBYro/%RH_,A9m1sSEm\+:Ztt]IZWYCrmE2;Id!(jF^7_/\G*23rPV?de8f*TNo2Jn[k4PF>()N)BJ35nM#u>Ij-OR_!BM.M(2OJcZK^'*1%S="0e20s_2Me^_j^7-meMU7Hl1\#;L^tdp$eB,,F68)FT($_W_32c7hFO:LD?C^.]<\5QQp`<]DMA%eo'PMZs=]nJ1Mg6X9pbR=7%_DR0UT$>CUPo,@s8Ec/?_j3n[DVKH_K%roZP<'g<,*IY;&?3,qo>71N8B.i`e0A8P`piDJGcjF?COp75?_P0[Jf1VAjX-dd7V1nE%PJsr>7hs>h&1)utKd1uNCi"k.\C"mqMUCr<Y(VH/!Sf8Jh+Rj-k@6JM:bs<'fq8BMNDeE#jO#Bo@QQF$P_m9!Dptb,+/?,tfG5s+%nGC4_l&?s`>;rf3GB+;kJ^I_Y0a>I_PoD#jC'Tcj"H0iJS@eeX8dIH`s+m8Ur>%1+cOD<oTJYrV.\;T2$uRNA&2'Zc.?Jfo6qQ&@%_kOQTGQ?<a*3KaR,DTgMcDc]-7Ec:2rS0E/L*m)73f6LBI)InpUYPODPoBZg6=W&/@4f[U2Sd$ZVJoM.*_4A1,=9YQ;3b_7'H$EB%I(7ZXj&F;rY=1c8MaiPNZ6#sT5D&6!`/V\q(qn*dM78]b,Z`qp2trlj84JO;,%8D;DT5hZc5B!.O[Dt0MJ4t3GtiuXIRuMRQ!21,%6>aondM4X1[XgFp%[59NmNC](`%T5BDunVV-D!"%'j4k$e6g8D4=%c<8k;5MYXkQ<QW-VdD]u25<kjKfcXEMb$FYYP:gYKp$3^tS%oJ^R5#&@'oE"]VFjp4.t''GREB<\s(N2LfVKGs@/f&!^67Z!9^,S4bWH,Ds17$PJe`5k4^KG%)(k&K2Y?j3oECBaRN\?+Y;;Q)@T%K8'/WAlBuFi,Rgt$hdTU(m&9KYfo/Jo14N\?ui'J;i?9I.QaR2T>^,Ik"X4@*ph`%!5_&[ERRM@<Mo"lY`oXjpFqn@.Bq%KP;L4A%Ko.5-ZQ-*$9d:d4KS7/im$*-lKas$\NboE<e4@7CpD7:%N($u'g;A(J0&+J?-$YVG.N&icJ0>B&l?'pDXZ?`r?'A+4W;Y;mAbF.R%5O,m64W<J"!SN*-Cm<`?17d%9kE$$<>'bdI^$:EmaL%l`Tei2T<SdrJJ=6S(@'ctB(,3YcrKUJ`JG"P^"SB:,9YD>oNog@6kZM]%%!e'rsko?m+(G(@(A"E?[_`R"t_:o*n&s4_SGt%I+VR;<7QLjD9K@r&em,j\.YX`kCTRK`cft-@)/8N<q^EmEI6pPV1A""8gTc;5^%V@[=1i(^31p\ZS\Y(g3-.b:^sDp2?N+`sn%N+gbk%T%[-e9l8Kh2cN'#%=Lho0P+8>1FdV(@sA@JV&ePZ9kRlA367(d629\BMRf&%a'_u67%DJNh]11l+`%b)^jW.uDJ`*jfU]SLD<E9lF267eDdZn@"oV/IbKbTT55jp$P1(.,>ODosX'+:sP!u70#"u![BF:$m.b2er%r[*jTZqIT#b-mJ1X.<W5]'EU^<TrkcafsEn<B]^Y!AQ*=MnZsWWYdn:Fh=>o\k?LbA^'di/eWqY)2Ot&[r;[K/Eg:m^e4(u0(H&P%%6R=nBXQ\FAnHNmSQ!N3;NWNL]&pD(59tc#)N4Zh2Wh(F94thg&L`$t910qb25\o+gIi8fWBF5]MFo/Dn4#*-_=VVu&-i%^^.S;c%2%Bb8K`RXFUI-3mAsf;Va@!#39V3?DQN/j8s79jBoL$Zd&69p&&d%O8*%VM-m>)mj7rjoM0rK1@:bf%En!b4AEhZ#^kddDH8W=m'%HYI;&rn?lZoS&dAEKI:QD"qU"f.]'ON<[h])^U=UO&R[9]c-Jq#r>&^iN\;'<X36qW!PoC<j<3.3[58,6V%e2N`1N@%c[O[=H=pE%,8S6pbJXL7YA3Q;,-`h7$]0jfUbo63QA;RZiOLnF?n]_eCLRCb;=[e-O_@:jcQ-r$73c@7UoB7X^Xqu<^1/$@;b.1q?T-VT9s&[H%"WDjA%BauT95Qs-)2*F*+_Ulp<ZA\9)bF^[TTQr6gIP#SJE^K^pMC=RMn>n92!K[2Ce.NK!)(LCk%1/HmM"4_I5VSVkuK.O3"%No%K71WZ[9S>VoFAQ\JZ$pg)<B&+9L?:^0JHii!78_f)MC9lMZuM@$s$.YpOLSu3BhPD6/Bs.m%$m*G2p_1;UKB:lc>FpeQW3eXhom4%Nr3.g<SgVnH#c%XWh:j'(ZYIR7RW6W1Bh'SLh.mJ2ofr*7_<uEF[6h8DJ*04T=2ug)4[9UVi+iSG.`b!db*@O$,J&p:*I&ro9S9U%->q&8CF,eTG;mOdX]IE1q#0i'2t)/Kr:unia7h6Y?%2\/i9KUki_5%"O1mV<Ru)(^md0;uo]YhB^2h,.mS3`Y_r#Ap]0W\,&qf\/%n#&DJHMWuC:85LAdcSHl(LObu@k.9\[:`#QY9&MPYc+``=>V#9qf?bM$TGm":!!lb;fXeHr:(5R7@`cHP\3#'s%PHO]HPM_[!t3+%8pk(k'Yh3;VtU"erCe"gD#R1u1HfeiV?E<p82&1#=!#1m]-U3h2ejHQgTeMgZ6d<91a!Za)PgK_&f,%B"CYEH/c"&<O?3Tu't>fm%X*'5I<BipTnrt4A$_inl2?)[VUM37]JM`cV0Pq*oRHRG,#"\;KNP]0a0WFg)aeO!.qUluY3%a_e^F#/UPP=Y^rFC5Lb!A":n:=4t%-KQL+F/H($"#6^>GgCq-.dIP7NsH)-QYhZohIoZ0b1nAGH^m2^K,2VmWlJNk7"Ha/eh4%WBpsRA3/i[[LGpdgbCW6+ctG_&L(`uF%.,VWCeTs,j56SAjX!.d*bO;J8GEUD_\W8^D6-VlfT#Gh!-:Z8LmjSF3AXXR#00*/dG;a2fgo_0F^Gsa-RMBS2_7R&"9J]8R22+4M%7NgDDi4LgFh>!Y8UhQlL3KC%I2_s'=H-BM]!`gN)=3-ba]pHMW_.82.".7aW*of/1]M0Wm4Z^bW*RFp3[$o4)3@Hj7==,:sVNUk6%GmVDPc-ORbSPp\\9N_[f.L$lK!]"qN@N9nF%\g3:#+DQ"+>+!63C+)DcNc4q9"O498Y&8*Ph4$ec1ktu?3%3W=q)NHcBLjrn^3#*%Pk]/gj2WC]`X/f<Q='\VRT%5I&e#!BLFn936fJ.9jfji;>,$P1oL]lG-Pm41rW*%C3>d=Kd$mk<dO5W*q0iEj5>nfT1SB@Z6K1/[%a"5+XGbAO1dZmf;>$G1T3rc&q,/8Ya7p59+HsPd98,Vn1&<lr(m^];WhM\u$q"LH2Vej`_D\fV!;Qp<IDg0@lRC0@2"uj[W=s`U@%3&jurr54p(L[7RUM^-i^9Tt@#@&PZjmg,4X3ob0XcN=_"JJPTS]V>->$],4f3m1A@AH\o,4QMgZES?sRknm<`nq?"6&VC)KDthAO%3#*pGl<2G%<e07'e&!X5@%oab\d^%1*K[oN6=grQ"LU=JZQY.&l(EQYW6pIZl&M_Z2#:4tg%:;,*qW3kZD0N;GU9<Q=&P(JE+`bO%Qa.+5DApb%81>Lj,Uo3`6;ac(N3A=Q8*NJJQN5f](:<qhPOC:fB;ZJ>8*"dKdXdg`97WN")=lb%aeGq@,[[-<Os%rD.eR^$`=kBD%;3`g(SY"9iaOc;G%Il\p/)R)=oSo_N4-b4b/W%s<Rn\$Iq\eX]fNL%Qe*Dl=W#N#M<Jd/>70:!\GZ2KDjCN=np/uTQ/$M^0KUEN0%R,ffi]37\5W78J[,[(hX9U+B[)JP>>4B#]KA_<`,F]Gb#&(Hd2FdY$kQDCQ[cR;0J7bqVnEq5dhWqaBO\0M:(;B2JWJS3WQ+*pj,%IcsLo4d&gJ`%hNk;J9q,k"j#n'^hCV@KcSR1s4AD'=uQPBb>@g;<!m9=(#KCN,nSs=*gn#?&`u"V(*g65-<J$\WS:gGiRqYn(t[d%HMdL,lM1;Di8XXY0.,'u-G^[WnB0n]_lJ^UZYqb2mbbd'GkgXtPOkgW.f.<Mk>T4KVuPS7&*nVk)c3AeXAb_WHD-mAC=I-Tc*)?i%?mb"MSTS0pICm"&UoB2.j,WCgq;G7br5"Gq!8,5OQiQ*0/bd3H^or*Mma%`r;?]b,WRr@P*G=09O(UcBm-$tG+(;M:WJYiiYPJC9%/[g/JG#lee5SeKfgfI31C$pU.CY=g:kD1N`[#cC4/>f:iKgp$)eVZj"]B7/,6FE%pkl<m7\'J/;lDNlF??F1JDf4A\:u>1d!t](O%$r2"KPsps\6PBl'l&@f^CuL6SpK]^/LqrbT#U"kuhoh9t?<#0Y,h0odFo-[,Z(VsEAr*].0IdPa:(;aZAuWd-m-'2kF;2<JNmKXD%!9k+IHXsO3J#`eOW8E$7-"6Kb"0nWQ+MMjDW-K"f`.-aYUCT;8,m*Ph\PTP^b]'3*Z>Es^-BAn@BV"Bo,oOO720u'("7%OVZrtD=%AO3+5_*>?mrVsgW+uMhYX>\>eJf-_Y=`3$l,Hf2%p+Qo"/Fk9kg>Ap3m/PY>&_opu*dl.uk`g(BV%t1>TrLOa);krK5\ac/j5?AU%S)KS6>@.VU\M[X'kM9V:p,F0?[.>UqE9&?;@E.:\"9_]g5Ve6d6(D#]Au0/hc[lZ^3",S+"/;q'$HH/K's%E],VP('T.I$s`H=#=%H:=kCgG^_KR^<=K*BMs)/NG:8`E:?h$,V\WY[\$1)I/2j@5NOsfJ#%7@?GY)+X)pkA0C'Yp#'$7$UYo8IW_(e_uRVh@m^\6;5;,f%pTU6CU6^$JZ5jcW^QrXfkN*][dAA9s+/W,MXp9-@b<\pbl9Y1,;8EX))DNF4QDWI#>a2n9#j>e;Bb=,7q"Z\G,?_O>/i*kT-ZS]J%aK9,_&l.md7.<6S!G,Oc)Ig^2RltUSQ02%F>%/63kYc12_3Tco8QlZ66^Q$"2'=UVFZ5#S64NCXiSnr=;A,c:,Y!"dZ+;A:,FB@r%Hm)_6qa^UN5ZnQuotnBS@/U,J]1CQuqpJl3gX/*92H[t@((MJN0`W*Me>l&PB@+M7ANiF3FrP="[V!W^dGJObID!QNME'q2cod'2%h$=0NB=_X_I`/@Ynp!-IO5"`J6N/eOAjABaVPHIB-8J+*5Cc*PZF:67*!U??OBkn<&o;fP'*V3m5ofi"T\DY1<\<"@BF;u"(a[%)%KT0A'g+@FY.M`V^R^F\V5t!]pUj[AGFJNsq,Yi1&'HtPFL.4bc,0:[J2O]535YX?Xk?CDD.73<%38,u!5Y77iGmhV7"gfE'!5a8k%[@l6lD>=PfH4dbcJaYIQH^BGTZ'9tCFB''Q<@SgtCMVf#"R?eXRC>q.Y<KLUX\I&ISj>a%2Ll1,2E$6<L6b"H_;`RJFW0C[NQ#]t%r"d&j&Q8l8#aekG8/SH%]fY25(1\AcTE2j`YH]^WiU0:qC`7&7CAoj50;`1Ck&DU^,4(W@([Ym_I#VmmpCr1<QNTfh_&:MRCF=`?%A&oAl*.TFd)DqYg@Y^skFPnK%>+TI`/"K&A=urP7Kh)h]Vk=4$.):Q)\@BF#;N&%Xa6[dt:<aeC<_t1e*n+oB70o@1C)P(aAo%f^%j3_6F@Q=mB`ZV:?KGb#!Ms2G8P)V#E_Yi&+9,RES#[1iSD]?;&q0t*RBPV;4Ku!hr!kGM=]f)r\E9:T06<Y_Q3a-)/]D\.`7Hcuo%@L(%m(;MV5XMtrr3i5nghXHMN<8H-$D((<u$u2(M&;ZB_$]3DX8`X;fk8Co+(gn@@>Z`U@AIi_G.(WFAmeXE"F_e1(NW;P7,P8N[%&77dT.`-An@4[9550.Fq#iT:4BMUPm]Yu^<BQjQeI'0RnFu9T/SM5uDp%aSQ'63?&h(cT7D[%?lhDTpFo5T-&XplR'@A8%N!g2jp%Dk5uC+Q=*YihgfZanYNhW>XKh.8:U]LU_Ee8P=\IZQg<TloWmQ`dfikJf?TYGb&rD:Q"9n5,\abX<UfFg)lgaMujXs$a3MX"eQ4]%]]IeJgMD^!H60*f;nT%o[ji9G&E#$PF-)J!Fuj.:]!-%`J2Wd!/9UPO69,^U4\9TTK%[AYBsuTtQ!ht/7(:-44b.GSpb58fTJ].L%4r<39nS5eQc+ZRnc>6r@<pGI1EEOYGN6A!,rA:k-OR.:W""*]&X@)XAjN&4%Qk?n!.15,8,gOET8tIGVjUoug=k]%sZYDA'Vbgfu%-)jrIoSiB]BZYuhG:J?8/aHO*dFaSf?4gnR8fEIN8J>\2N:L.[@Din=JnYS1aI#A_/9ulKAQpfIb2c7&_oO,A9<)I2q$AW(O0kU7%k0g8qa60+KQA7FT6<#T#d4<_1(f!*BFJ+G8+IL'6e;=iB9!F1(jCImKMQ@/P,rJa!FpQc%Wg71f\mbS3_2-#nH2;X\:*$uEa:leG%@BOcmC#UO-_jiL*q]q\+Z7_m-Ya!RmW^>>L574K#MLhJa`u*;gOoYJ,";;VA3He#D:M/!ON@pO]bejucX_KL;4l'eUC.BAEB,Phc%dpN`dT3u%2DeU!"',-`=UJ\QuhVt7:!.o/7G#fY#[CV=L=inB7)F5"0%(qHLp3hUhQ)o*(L3'-GkXPC=:ln-k?\OJT"<f8JQkW$V%aD5+(F5i\ciJjC>GA,g[Juu02g97Vg0Wc75\I>Xoo*MN&He,,eOI0V%N*M1NA8qg9'!dJ.D"#'b(+9Kk$QSsIlQbWf7t^4a(JTVc%9pt>$]m:6GQmc?`[l+Z%[]\??IMBY#&]1:s$5"<ni4;Vh=Yf2jS=05t!]u2e;=AE=[p9FF3#Ejb(#`;[o;k?!s#BJT.bCCfLh.[k%*+7MpWWd/@-T:`nb;P)'>SER:Qe87$ibHMY2p9k[)]R8Q[,J$E#cARqRGj-2md=hBEe^bL.\H`Sef(_`Zh3YHO?=X_KF6r'S3=6C%\f1nGSWWS1mm&[M9u<%A5P25n_[gToV%h1!-hE<0&+*t28K`q.FDga,D%g5tiUFl*SpqVBbgMK.IlNa=e%cQKm?/;2^`Aks,8ei7%Pjh_166c?ihG]+:Q_[?$1=o"B5i\*qWbkEV84nT*)UmkMD&[GIAK2U,GXulb88m=gCBKBY1b!LpJA05WJl$?Fet0$\f:f'ah94V1%k'f6h*e&J*o]Z:rdFmRERst7NgG2iJrFT]):VVC*e4h>]_`hoKRsPt#aO==4"A@"qp_VuOaRY-MSVtU",G?WPI7Q*AaV%)UatjL#%'AA5g96i$L`/[JrPr9NFQd=*uhMbK0.7L![4KLC?6>:s-[O^*T[V9$.!-A05\-jP8`br;"bAeYlV>&I'6;2(rjU#$@G</)g`V;m,%Un%X@V9'+VJpbPFSR#6=6EM=(=,=QOWGYm")FbmK;EZ:']sY0sf_)2B>k_Q[.PTAOPhAlm(5\XD>(4$o&!j-->%TV*K$,0gO@)%Z%:5I;,\&>B7ctjIlCF@UI@'h'M#.JJR#u)ok`i]IV!jLDlCSGXsYGQG*"u9S+=r&'O46[!/^puXBP\3=SW(os@)/Yc&AYZHq';0SX%[o&iY=$R6!PiY%?KX]=^$)IYX>YXLCWOXH0NB":&!(%M==qWhGgUbpL?&jGof(ASWUh?,[GW/gRDJrArkYE#S@LlodquX>VLg`:g%#Y_HSAr^b!)-"6s4*Y89DH],q[K,=kZ*tEJ9l"H'.p<<'PSRA:qm*>2S^u=.d"'5@9E%]?mN^EBg8H=.j:+F;0l"X$-dMQ7O\h\f%I3lLao?[du?pTG.>?T\<Pqd+NB<Cpt``u3)I)XAiKhf:Go?(&]Q+)KkAQs(6XfJ&^5(`8%fLKnmoha`('/_j[(EtfqT\(.qleO<7%n<ek0.;N@`RgD/1^56QC`G&)FTpik'V$rZpM\;'Y+bg\SLTW2i"-Vh-ZR4V":ah8.UG6DD'i^^)6ah4VnBC@8]+sH!2*9UE/)Z_O%e6JN_jrhO?J21m_S'cQ7pGd,1f6'0=nBW2IT08RUp!r]FDr2<bhno9*\FItqmXG/njOs1OO!">nkj[lWXa?,T+!'V5r54/nK5Zc&%2BQ9g5.Z"#qS1e+?g\r)S/d$"EU`VTj$PEol1t.sh+cQb^"U,GEcAFs];=^AS(j-a^:\[^K9*c/38%>]?8PJU<^GiV<\XD:fV+d7%Cb)-Wr$U[Rc5o2G3NK[%aU[,qq1jb'V.P$<RGL4?p_e1$f#k7TFlE'I%PBCnpJ28?+'kf9rI_Gs:Sf;ba1f3hkbRb5d:WFBi9Mtk%=G7LgkksH*gWdX:K8]%05(*(fi9L5^)NY1/(K\YYipc$M)DUVd+.ps#1](1"HhrYYo=o2o`@>'=]l+E6%aWmBgTL&%B5NImM2JFS%N\@9E^\meOAIf;)c<8-.al^Feg%C&56U_;eR9GJJb\FmP55O^gKkGJfI%"]sf)>IJ<q4uRr8c[tULtCP+!9<&3PN0'b3"`O(pfM,%,OZJ]f#*JOD'dXQVR+7&)kZr@dII6g]_AUFl49pUT]Q\b>rU4B5@'J9]INqeeV8@)Va&=Rl#iKNArsV&^SBq/UQWIU)Q@3BhnQMH%D9([oVco!XQkKALrL9g(a,3j.)5tm1In0M,$hX/5>Qif)KrJA1iTLYD#7+"2hVI#G5FL*AeC;+"l2Ts&S2Y$bqgjC.UG:Cg(QF9R%/Q=I66^mXcBa$EP74ZO\E%@fL@aTetJ$oN&]ZA3hmJ,o/n(?>QU%T-fQI+-S858pS9b;agbQfH?g;/pO5#]s\oF-cocDDN7o]=!U%"e59sY/">@,(8hG=Br#IZ2K%=h7pSihdcEL!Va59#Bu@bNT/e-qkkFGPKG;KiI7#0F^;cW-F)c3(qQR"pS-tfCB$>[`YZ6C4iE$%%+k-J?<$S20M<N7"^)!m99Y9_?\*T:(>rT@'qpJN$D4s_M=*dmE&'r&a`H^Z<]4t!:N($14O>!cBR>q6=f$Esm-<&N%Sj%090KDXh%mj*Csbqi#lePFd(rnkK[?$8(GmuCQ*[H5W-5mE="ddKc/oCO]an<@JPUioO`-#Mgg$h4N$jm>\7Z6-^/r!_R$d!WVl[WNM;,laVO%0)?+WcgBufEnf'6D<#1CrMZi6cRER6^Zg+&DtZ)65pcT#I%)G25BPS)C\j+Gd/Ja1V5Z3T#2/[Z]tE+1+EIS`65+^%dSuVH49JLD%0#Z/Lik$67mt^[Jp1!PEV'kMT<m7(rd]$3:6q(%q4I[]SHWoNp%'m?99qN>Q-g6-JALRhoh<TQ<9^^Wkr6q.]."=#nh[cp)TDETg%mVgCrs*ht;f_jaKXY8NpqYK.'ajl`]9V6+chra)\mQN`sI<ope+t[!MXk8\@eGW!Hljo.qgjO,q2/`$^NQp:Yg?JXJJQ%V5o:F^W%#6uVHe'N.\*^%$mou_FCMbg4b]tCpakO[2mWSYf;9BhE@LL"8)rVkR3X.rE\iQ/L*h<XQ%?h2K-ikaI+XT+.`Tl--tImjRh>A<D1%"o>:(pa_c_:LkJop]eFJ5,WniQZngOJc7rhC;.6@Js59ekoWqWlQ+sk]sCN`PHrtc"l1N8=>4$3F9U3;B@'$:$#T$!7q\=)2hkJ1%mdMP_CD.$jf<n40cE:.qQMPd\#og?e(<Qg4)MSX%PHXXqHLgT>IFo8(:rR1GW+B.Q&q9UFXEW#J)[L5K(<hdD"AR>I$jB#I(e>mJ%SErFj%bo#?#A;p6@Jp"`)-:1ob#79^T/8+5W>4O`eU:K5qQ<k`)VBOE^5\jGT,jP"WsYC=0oXQ%1*9":bO,5sNRGh0CJV:Q[*h'/%e)+k:D<ZF5XY;\WlCJIMSY<1>HiO'2ieZc,57:Ztnb:#qZ`c4mJ"L?%Y-e=\+)G3P3Bo_h3MDd"QLaD>Xo>X'@&q'.5>h0ApE/2s%)qgO+Y+#Mg#2O"TTD-*go\@32@pW+l@"Z)k/Lf_pqY>jRDE^(*Hp#+)YLg>P(ThZfYE"W<2YR_72BR>9*(@3.9uA@-+n011nF]"8%WND_;kOduti8jFjSaVW2US]]tFlM*-jjDWMRP0BY=1fo1HLU.Zkj[[2lJ#BP5El+pdHUFHo5sX=<qG8HMhBL=a-SHT^^B[/AQF78%*JZ<Alb:#SJR!OtO']?l>+C)V2pKaVc+U/.S!;5r0`-F"3&j'Np@ZPD2_Wa6Y.3ob]O0J4pq9fg[iX?%kgPSWH=mo57JGL(8Ei?V%XJGLC#P[UpJc!>LF)0L%Xq:P3Bm"@Q!^Galk+2G#_s^ACSY)"4s%gUtU4mQAEc(-skD.AYO3Xob5.EWrs"FAqY2?i!=7Ge,di7Y+%WT^J%o90Q%nkSYC]:U&`S8<(+4a?m,ACI+JrcC`ggc@U.Hm0aFdH/jKX$ruiZCS4u#1`bKl1#d:,&_ATqd=L6g"#o*`EZ/>l/Ve-%>,[sG_/CB"**jUkI!;sno]RAuRs,nq?QD6i4up@RhC<$S>h6LanEB/je'7l6ni`IScfW(>dq;IQI'E2%B"A_K>s:E]3''/!Ie1h'%n`.l*hZt_k4Tcar+'^qb9VZ[3_imFp_p1$dSc7#Y2gE05hp<D,"j:3ll*i(/E#1T/qQ9kF/S[mrIIZ:Dj5XdMdr"UFr8a:&U^[m>%D32l0IW]`j]qY9p?#Ad;Z'Ygp]>s^&PI'ku-g/gYVLG/tZg9)d4LO0V3eSOd#[qJ"I[fSbU2uO0oAS*h*5`cUH[aRoS]l!FMiXK9%4e:lQr\n,H`m)tbVc+*ZO&)C=FPta5%W(lNn,D:`rK#5G+)P;4dpi*ml,hWNf=.[*]JtB4m-7-.cJ<g`(C.Nbs33$B"T;W*_f(T3%*abT;=EjOEqT"jE8oFUom./K[*F)j`hT`LCk][7iRot3NUYM835&JF'lqdXO8*A8Sc[PlqK/3trZn>o!5(A7^dQc/*rLnX%4$VKM%jM$*ke)!C&earZmP!@CXrtg%NYO28rIFhu?9>8KcJ*r[$%kmRmB9u]_VuNorrdSVuqo*b4gc6k\i`#[12\1CXGsKA8\n+W@a,<^5%J,?g%8?]T(2,3oH_^`@tqX=HB:ZMKE1:TG,55`10(C).>,"ar1)=QkVpFl)[^].)J^-fTo#'-JGhjJu,crBs>G:(9[9L-qgc/4R(%P;2@u4jnr^fj7+EY4U[u^&%HdpmZ2/A378`s4Mjh_.$K$*h?Y4(S:T#YHL.(3<&(8lp\LorltIpe"=+_LZcu9%Zg#kDX]l>r(i*t%J%>ra7ooqVVq]S5g5b]1Cr]=[20k>;eJ2DZ?ejdZ1[1Do]/hr945*qG?(=-q7!i8!X.t0C>&qcRH*/fH_3UGBh]3_DSR61S*Ln+>%*H&.]ofkH!3I\P"4K#gS5;j<Jhb8t*o(l]UL#qh%];#afGA.#S%I!<ZipkE+=ZQFmZ+9bZq:4i8I;]BP4)aCBa(O2%o1SWub?&oh%"55gI*aWJ:HVS@NNp,<-rpN%a]Q8,ch9h(-T2g_t4M>h8o^Mc="YPk-;rI2Pq3kG#TPq3-Y'lFj`tt(djRkIh=8P=>Vg##C4Z^U<%]_/lu&+==`J+RE\GCFKgNP_<*4oG9!&,u4DjuXc8s4uAuiAA0U<B"W<H?&rWn]<ZEi\E8b%Ssihnj3N+YJ*02\:,RGc_a9S--KnE%am$E#3i3G$]@s7*g!M_`=3'3(dtt%8c,6N+QbE38Hb$I5[^9:<k/<IlK.EJGAij:_]DVB\n^0e7/Sn?D9l=-tB2dQ$+LZ$SQ`>?.%aNjL:k]Y2"Mi39DQVGKS8q+)t\YG[DdC-N$/'%7.g1[BSi8a!bqYJmuiAKX=ATX-OR-`I1Y#td(_qVVLlh[nljh]Ufgc.*#culDU%r8cppGHA6.D4BmY=!r25MalPdZ%S^t/Gbd#J)RR"Dk9-VSc8KHm"HDOo^N;>QT`QAZ$#=r]pNYZ>M&mS7Ve>WV-T+JjglBnOaQRF%eR+-#'5:Oaj3rX!Ni#b8CD?Jd`oe&M3nMV>;dP,tIGp+8N_943cd=>Rh%puZqU&I7@p81]>R]9Q6N).7U[%dCY8Jt^*+b%;lSF2d%Z.Eu>RD5=XRc_QMnMb(cf5F8\O;Gn]]nnt_i,aoF.sGt.kkOH8i9Bo'V9EuWI*Td-+3m(,HAkTOma/ha^'"quVrq.5oUJP-D=*IY%Bm,fUG^S]Picr$I5A/cNi7HFHkM,Tds46kIUD.&DHX0k<%G1I$SSKUQQMI\q<,XF4H$F:K"C9>*pYGLj]KCRfEqoV$btH2!Sm>Y]%iMSG4a!^#[h;,j1/"IYBIJu3>\SKpuoUF;WcTd)ne0RC>?>S)aij,,a7J%e=R3qj^nWb[f_L6:U#c[$0'%$Mi^2Ik,psce9G4+kZ%r0eAE7@m7Yn+#)_f/sGNfL6%=I9rc2pjR=(EI#fQCd"0ZbO,X^J\kJoQ_%:Pi]0*t]QAW'D*QaQq!#W6PKS6P?_FX2q?>#bXaYiL%IB0iZdBCm!mQ<\DIQNfM:G9FG5J(edV.,e;*auHph%<DoSbmQIn'F`'*_L;5Fo.nOjfl;i_0&Q8roMI;pW,n0Vac86Fr:Urkf7G?%Gdtr(0e;prh>:siHq4i8Okfn/C`2t[[Yu9+,,O2/3-\,Pbi[jMYp*8P_lCe=p8JAm0'#N]K3J8q0,jNR_W:5,UVc`f3aW/K[t,+/%]0A@l]6nYsF?3gUXuTmhfYu7fY03S]VLc7c,eYZ;Y-uWP?_9RZ@+r!!R5@EmOaZ?1-A%J1mS&uagHH@JbR;`#.K7Xg#5Qe62&ipi%CCAd8$FEoo3KT>E#f)P%_Va1Z9CcCUe*>f-]am:Do%QZV,a-a1hTTn&8T0%TQT*a\T0<)es7+A(rVu_0qho]KLdUuJ3W7tkDu\qT%oD8@J*d9hqs3F2^(Dh!2S@s.;fj>iWs3$24]m&r.BE$*+ht!BKDu]J"ZZg<BI!b>\5CMd']iWPN97*l?2I4?&qX&':IJ2m-]DL<;%+oUu@^N_oUp$($*\%a!AHh./35C);ImB>@/Dqa*'fA?:uI/D@8:I"g490`IMYOB6ug>STl0E(gpO2#r(kMb6P0AUsSEp=#=5/.d*%a-U+Zo8TY,[?ba7igW_^4oY)]qra:fM)+n]o^bkW2>="lrTW1INcWf)?i'?T\&6C-ro@qqM]4TZTf[HOL\JYi5CNR4l&Y;(9EY(c%gZ[2eji,4)Q_.R]l"'RK]:0kuieDPiL\G]c+o^c9[r+o)o/nQG\";HdH1C"QX1t,"1-BpNc1bQ@=h5$.+1=ejq'Q^!G#eCh`Ku)R%p>M$(htTkDgT+*j=*iohU=tO/ar__lWq?7^SijU]a6f/kntdulJ,7j]&%5Jaj6#ImgG`Gfo+ua\r-DRS?[M`*rGkE)q:f!Nl`Kg<%p.EfsIrOkf=$Pb<VjY3]lVHAc>lLdQo#aJW.Wt3/qYRaG<*F`so>/=kpU4'_I@$qe^UX#eqT%K1*T3R&GPbGpJ+2[I+1>0qnYa,C%'Wq#Db:bN_BmfmEj=s_^j5r0E+2'K1Wh3XG)1MMr<Vjl7X5<Xr^%((<CK%(oHs,^#?iBQOD3`tfajoO;O+22heS_AYi8Uf0h>D(Z%V=,IkZ^4>?>3Y.^0-aOj43X_.n#,b15!Rq2kq@O,lgj06Z\r[c?9J+C^\Q$S\%_WX;<_$f:ShF4rlNa*nlPeShk'eODQbmFre5^n%2nsaE[AQ67pN4'95'm+82f<O!X*aU=pt%SXrRlrJ+2,.adNeMCDh%W(7AWp71;G"1hVER"pToWRV=j)Id`\!7qfC7Z5JMV^;/-$a%PD>c$V=4?Hah+lOs7iJGs'Uda/Q9'\Y58"oPJ>Xis/iZ1;R_/Pp!M&WLC`;<lHu>(W^Wueb'e[.n\aaZroW<,roVMuK&0\q_[g85%=m>p4kr4GpZ#+pf,.UK6GkfFA8tTBPgjedN]!]u4gstqh;EZP@g/!bn])1lt8j@9eIJ*0#gFM)%?iKEC9-:jT[F3sirp4:HWnc.V%hqu'=qG2<8HL1Y+o/FD;?Kjs%*<#Q,_cLca8oNMOWr;M9:HmQ:l'#JE]_q(9Q2^#"pXN@>de69tIdJLADE`Jkg>9=4oe5hG[rtgK%PL%!ip$VNGJ,.Mc(DlO(GX@\0`g';Il#rna_lmDDamdKkWR>/OD7M/[o4O\0V,,*4(R>!ech6p^/"KH4>OTmaqT=HTli5uBl5cnu%kGt`SUJL@8r:p'):Spa6Fh-l'4!-V.>3XRAY:VZLS*n&j/;kj&H1d)&dj`jd&ANAV]^raZWR<loXmkIG0-B#MT21`dqeUPT^2`o@%n"nIAr,6I+._Tin-_LD7;qW;Q>JJqMmjeiKB.ntPX$`o:Xa9hHr6o$QnFeMBSLXU29?Z;-\9R0oS>d#o=1=*S_YCt!mI-Bk)\50C%^%60?/)0mA[_Kf,s5nt6=5.q;7Bo7-5Jau73=\F>J-ng_7R7Rg-&@)..,is.s7r8bgS%O>FIX6#=i\MZ]"?t)>ru)H4m%31XhMMc%b,9S,Z9WbVj/[QRd)"Sn]:[BuWm#d<q<]C+l2/;dT*8$(Od:IM0k/`-bOqM*YP/Od\DZVTeYT@F@`5?D]D('j?U$_5*P&/O+*Fm0%rU@"<HCS;Rf"o\o(Hl5ucTdKWN"eA`N[G1*DZ!\c:HM)5MuRo\s6Gm7M=(5=V\@oqel+S<Va!t\Ekd@rI==B[WHU%;T)\FWlc4Ij%LtPG+kN+r,0^ml]5Mc<#pSqW>k/JJ1cZ6cA*1L:.jjUQVo[Arso@NQtpSX#`)g&0HgZ7r2@OXVO":YdmbcXhIa+V#^q>(-%e,)5C%HHp`$`*_C[(R/e;I-f+UQ"t_lBm0+>b4*sDhTE_-hPY%!E9mc->2NJQI3)a%4$6i]eG:*u0g)W(dn8inm-cmj-XdXC<e6krm&&jK%a!#*nc-?a@?E!**,;DFLN^MKh\&;NKcT0D^GP6H,2f?mS3IJY["NfuMl`<]EZZu:(B."P!=Xe&G3L'fdW99]3<-iYf.j]HldFY)"%#<0Cqe8oX\76Th3XE=D1=,L20lbQ0!YMS,l3P[_j@oRb72E#@[01u8E;E%IPrsP\')_I,=e`$S$jB"CLG2CBDPbe>\8kDYWN=b1N%DcqM-!Br$4FF>FUY8!g_6QU;IUkCMBH![>Z"iL4GlQE6+ai@5T8C$K+5&[I9Aq[ZNok(Y\Hg\2)=SmA^>2Q4>hGu%e6nQY8T[-+L%J"[X\QB^6ee*(JOb^@'P\Eo/-=RU3:>TR%]iocf3:#hl-RAjboX:*2c@(W;[&&[[.)YPENCBa)0X&O.t2*pp447I;"q8UUBXFNat%Pj.KYat4-#Mg.f1i&'2p2Z;$#r=9jQ=CRT9/c@F]F7CouP-D&cK9mLOZbNYDkau9@3`@@eQL"^"n9)]6*uWs4"6c+HSmNKQs"rWj%Vj`jW_f2C%SoPc=Xg+AmFqaoOC>)o\]=*\B?^OsO&f-X^6)T4X%p-,ES^frKjOI;C\:4t8c*A3,+0%#E\3<-H3fWKueAVPfmG&He%<os.`Y5VZHB_oYQXDG+u$@BA`>_1NHjb#F6Dm,`pXk0JPjGqHKor?Qca=#"+lnLBc`k9e@q&de^Y>mRbfp!,%V3he"T%2lsW?ge4%9sYnYE1b$o=R,4BNMGWG@K9DlPH<q^V_uI\=m+G>U+ZBsYq"5i3I;VKhYt6g`blu5lqUWQPF&,JCpon@.bPl0dC#C9?Fg?K;!/VV%5/&Zhl>Mkr["e.kpd)$dFK]4^pn.5]0erPC]RBHtAZ!W\)3hd+lC:H1C)JA^Hjp&.c(-3ILHTaD)A]SZef'pM?$^3O&C$^=Za/V4%J+G,b_--UIDq6BhGL\Q?mIR%El/]E[X2").g\T`Od;(sn/n]YEcSar/_$.qPO[0cG6YAd*dqS1G];?a_@jS=$E'^h77I05aJ$u+X%hqcDEIK+]Y]ou*nZbPq+hfMJ!"]Ia.,-OU%-0o,?=Cp')\Sb1pr?5+//([EGRF-9T3dNF8Q=p7;UD;o-)LqV3MtCP]rH6Aao*0!Q%gj&F[F>];t="^NH<"S<F[7Jp&V!VHqApOC.B9>E2AKkEfq*R>h*LDTC<S&TTra7(R-m?LX0!%J!8JQr-.4B#@5FlVL@UW=;7a1;`%LcPDR0t3KEMJZML@@EaEld$%+Er:<m([7=A\o`2mdMT*d8n@OukCp_ZicRTof\*=rk=0KQmq#K_09"C[PfY#:3BGKSA&J1:e^588%XF);67S??-h,icPq\>BM9Yh;:EgF7rc1R7S'XJt5<4l0tPU8#OP.>]#2'aJP@RDn]bH`iO=fH,[n9jGF?-"_A/S]o3f6)3+l'.%Z%-uWO'jUn?'nZU,*CJUON51cbVc`$BsSQ;jKA=+qAOgdSNT)PV]poGeck:^[OcO>?7j[YOMl<;>NqtE3-<_qW!n"742nEG@$Nih;L%1'dbZac;mgg)N]`*UR;@p\c6blc8eX_^s)`Z#H+g:QA0[eGie&X9_2D(sO!NY<RY.$bZ=BfeHU.-#RWbV&$R&&jO%Mfe:dbbH4FH%Rn;pKY(`[mQJdeI9oKc9NE&ZX]N9!J-2;9a8Hk=Em:K7FG8"c,U6u.qk"X>aD]k#cRZcNnle?i<%UQM78KBR6(,\,es)iD5kUa>A%jt=)6cJ9Q/4tnNPjsIeVgA97!+JI118#O./@oBUE#1D(a&uP2gfhPE@@4Nd!B3%::2bNutm_\tqE0"N'Y\!0d3UNeZ?W`]m31`bT%NR:oK+`qS(p\"*]Q.uI_L:WJl(\UAd<3K!KZD'4&X(1$;m?"V%-9@CJoX\E1EutY[DC7T[>n'J(JH=+e-R0d3R`u_@Ub#`Y%qWnh%;Goho<AK$`,@_J??1Fos8d6V)h5c$7)5bO!kBq(dXm1MV_WE<V@+s>'acj!62pXYXQ,>cPU+#*E`O:#][>J0pA$i>-Ua"JtCS6ub%=!4mt_c*7%BoH(G8+(ctpV#Y%:PC)XKXE_cUfe\n]FuQ/-Fb@pXl>UEeV&ZG)5]R5@Cjt#Yct+4D6VL0QQnn+/8(fQ1r[f*j=Z`4%hJr/NjCj):^sS>:noW]i(JjX^NfXT8hldtuJVCL=WcBr,^Z;=k=P1o,Y8hC$f1XG-=.HZbN`L;i@l`@d1o7rp3ITh!=@sZ_Y>e8[%UEs.u+12nTb6#[9QCbBK,?_m+R'=*"nfEtA*T&3A3sGJuK75ggf8i0iWh;m!94g/S<q0X:<+iO6=MDDSR)sOH?Ep_\8n7!m?9LJ1%e/n=teR-T,*C3CgV<$+X6%.-EV\G["I[!d.:cBkidh-n*>pN3j'<&.LfrD<,H8!cq%+)`0pW1BeHe8%YJWUofDd_hCOQ%m5G/Nlq%MMfdqb7m>7]iVh^iTK46Yj*hFZdsb#.l$pLORJm-N4lIp/r&I%anJr7.!p!7S@Z=@re)$@PO%Ujf_Ckn^$q-W_Lsc&oko$J=KiT"%QR9egD['YbpAY[5FW3@.15Aa\aF*I210"+`=JDlJksA7^L9#:m.]XKq]?[mZB?"*kN*$g7[o4BmU?&Z$9'a.2H\tIiQ&^U!),?N5%;SaOl'EQuEIsIkLVXI<O9%s$;$JSIRg;^MT8t.#?7BWKZrU3NRVcW:_<`iTsI>kUg_TI9cNKj:0kIn^Km&bG\/0s,F.bU#,49N]n%SCPHbKf3$_/4[XoG_1<75=#m92kd0I'e(=k<n4E[i'ariCs=/d0,OW_qBK8@Z?EI]3;^A<?@=qaF&nesf,3mN%UF&Y*G5fRSjQSL%5mNY0QQ3Tr%(_I8_(KfmMDOJc9U1(fcui<VaIm%&YP0$JiX@k3;l04.]$<pm%(`NV_/=;WMDOITgp`kqk__1[&imTfjNsm@1,J,$%rKT6\kb\_Dk`YZ#idg+f['qt)`Cb&]%"*LNd*^'`QVB6C=(p*(Z!'A^@.=!f;GX8?QOY%HEiq[]d[P(nW+>-u8alB/9c]dHZr\5]%<csr#P?Bfc>Z%oL=%`bP];mtf\u8=$AYhL!X)e528P<1E3W]Sep?st*9iT+)<GPQJE*knp;ONRlQE,UW.SQ7oR9V&Hj,1K]p%Vg)%MG-'O\0QX*b>=9/NULOmYY2<BB@i/uW^NhOFKK:+#j7*--G/s;pg4bKWq7IfXjh4:W06LJ+S/ZU32"UWGbq\i;QPU\;41UjL`<No%=>C"pW`+^5?d%!Alga&DFQuamV)Kp5kBsBuP%ga,e*kRh,;6#th&Zd$^mDb5;-6Ap9P6A?6gnrKRH-DT9SjEgH`WlAL\WR;i[h<e%"O!cYAR\a64MFe=<OWhn89-$P01`SdL7FdkW+;u>(TE,2!e24$k;Gq.?+'K$=thaAi2bR4f@(MZ_YG_*j"&<0WC@:1SW8CMc9^ZJ%ZEdA=P!4dbL#kbRG;WhI3A]KP=FhuuFsfA46Du\L.DtWGr82VabgPHa-5//qZ"a@6oDD78`Lb3W9A1sjoB!988/@;4P"7A"ETb]G%InEc9dc'*Ul7Q+He>]bpX*^VQZBm/#D03cGeh<ciBG<VU]/_krH)YgAAn_1C0Mae[dUY!=9Q;Reqo3%)Au1bAEI'SojN&WB!m_^D%,0:!M<.*b`lqk--4=Nd4GWYr</'EfE8<N_4r2uoBV^O^2,\&7EF`K:4<qCP,](4Lqo4Wh'VG-/b=rr#le%Cm:AiDlEN$.D/S5u5&%br[?e.'[$jX)!j>DA'*E9P5k9b:'@G'Jq7c1$@t6"liS.,*Nt:riWCm-IJWb7E-@)Y@l<sGAQun,3+^-%1OUtXK0jJ=r&!5+Nd@'%Z+%aLA!(Ja6Kd_**XrsqS&H/27MXASVP09n3`\7:BsSm9I$fYSA!'>pUmC3,F_?gk/at_RIb"(\%#mE<U1Z*gHqLQ-C-K,uSBaK-%fH3i.dWB/M<J4qFk([X`6RITAlI)W[8J)J;ACAT+_pgF+5h@@*@X>)NU%K>>c8"g@<o1r,Fje>$6\,p(Jn94M?(W(52*T6bWuJ7/%Puj<kX>;Vc99#T(3ao/@92V8UTm@@iT%(IM)dToOddMRnHolgBoAM0k5LrasS.Pq<f8o9\m!Q>>&ZX[J_e$g[@FA8-oAP#>(9El6%f-jGSl9db*R?+F*ilm\:O*ip$LIl*roci@+jhp2N'%#N`\41(">efjgd^iP@>A(M,`8Y\+`VLlP*:E"07&FM<.P[(_Q!tq1fD`U7%cft,DKVg7h6C*q$3nC#E%kj9uEs<DGJie"6N`@R,paf;f#/34Z)3aCW%:TM*"Nk)>?A:r\S]_SKMT[]]#h.@rjkQehRMetZ7As!@%m:$qS<'=9Z;.1=`e6ds$dQ!82n&l:9n7Jgs?i;fh.];Pe/C7_6S:2_M2H,O<S$R"2S-ms.aj[V;_lU,II(*mjQB4;4EBN8P@*BF&%(N3^3]MEW*9-5Lt*m2f6W1B&c%ol4GXd5)a%s^==/hl!\,<afX-pt$W)6'8*P*,UO:Dp.(qim6>\b\&-3@6>qVR5-(%!3\$Tl,t>%3/9QT+uF'9FME&&X1/R";W3ddXCen9j]"4"mE(7Ll";JNC;bR$aA)%G's>"$ZE$s7$@68*;W7*ZRRAo9@>n9sWGpRk:nDCTI4ALM%5#s-!DOHLsY/C[ko90OpT6`R24t2P@J*PL6C/e/%9ONTDYsMD4B!5bcAD!F]ZeVQnT$1aeTYE#uSs@qn8l+Whr54+<D\:=^.bu-Y%jE4Lc,0\<*0q-r?o_QO2j"e_ZbQ2!hq=J`Ik3h9_@.W;uF`?KFHTF-m)6XO%!jdi8*T8%!TC>&7?[ij]Wq"?Mk0!*Ire$PP`Zo4b%a&5VIIjG`C*hVdroA[DnL(a,iaI.smo?LYQN>3bO[:W*Y8Q7bLgA1P!iI+@2@h%lkgjI@>G5G1%m.R>:_sYR#]pue@_diE&fgT5D%QUSGe97$sq>UnEDpt(dCMWkhZq7e/`Wi,)l\"eN`3uHm7q&+A,>&8W.WAGG5ftDN'o58Frafp-_nge!aIQPWQ'Q8X&Q%'l_X6=<2%p3:JOO&,ZEK=R6W/tU:71+hulm8Y\V5_"WIQsBW2H(13"SG,ccDXVW'UKU(AIns,V[nBBdIgN\">:8Q!*PY;TU=)Xi_$:l*V7s@(%r*,=6K\Rn#=MmM%p\h9G[/uj*;L<T,f2?4Y/>#A-9>>5\[SUj.?DEZME7\6ACLsD#GB&gO<g30D.Xej!Y+cYKV*'LDi]+W?dc=RX%Y-7CBEnQc\,cu%A?QrS*5NCV0bWAh9k[3R["4[XiEb$UV.G(RrIXbVq-J;rh94ipj(1u$,jjI^DH@*f3X(@(N3h%`PQS(.)IE8;/%lC-ZFmo),MQ3o.o9E2<^qN1O*V&MM,,PNFP/h<:6[#Of-S$)So+h_F8e_?4uc)0fscLWp?/,Pi2Qff7ND`1m%ITg`-:H-sK=b:'W%DF+leFNN4t>e6)>'tVJ`b7\\2IF"e6C/X?(q*&?<A`_?_84l$Xdq&i`VPUadflUBgVe)6EA^b5PdUh2_gg`6J<`,.Q.r/_FQ&\sR%ZK\Z8l$=>S;SfS^`4F9lbAsA"hHXluXKJkn&d=(r3`EJg>sufJgcCcsmDs_!VT\OrYb]dpCq;ar[D1C:fq+=TB@Gu107D*Bb8Lf[%-M00b/o*-ZIF"e6Os8BLnbG<uJBl9cpJt/mjSQng0&E^t89["[478*U:=!d+,$jGB2[=gf=1[V5I<DP]ULeV9?LFl;U<c;CHGd\d%GaIHTaqOgHY$A308-6OUh"P"+W;4<2l>iAYJ%JtM<NfDl";3tj;pG`iWFR`]3D<;Fg>6gdQMHX'0]1_LV_oYlW[\C_Y%!g2h<[Kc%</#,UN&+Ik7Im%Q\a-b2Y*+:EmPT3VpK*Y,da^Mp]JD`3j.a/'3g@/:Y3;1>+tH[,C[Q3pMWR?OjcLc6fA*'q<-lqtce$qek.Xi9%*c7`pj1@>7$7+(5")@Kk$[6#DXH<?`+[g#p.fd(s/e<&@ZG%&2mH*$$'ml<8T.oG"jZ13[?h&`Z3_VGYYJ_El.N,Ieq1U$VYjrg6%GlffL)3uVc1^_fP;Z9*+3SoloFFI7W%-b*lo!USQ%kM"1'r'0$DYk1Y"\&);)J\HDeo$hHq,e9^>V5PeE[#'pkdI"\$E\#A.&Zfe%:?K[C^5Phdh.1,pE.u@c/?F0%R4?A3O].+EPFXemiMSl2$4)@YlQThT(GN2,2bi?CjlMkn^*b:T?;*en.#'eC0P8PIS')=RcdKaQ%A#Kq+]+j)M2s'/q]&jHV:Y0bIfs45ik0nI<Hb.ANI`K">?"Z@p/l'ddD$>b)<P?p^:*34;TQ5@mXdVlH\6@)&P,b<5,UVlCQ)fCY%iSbg'LoeBc]]J,RXD3<AM<N7pG@_?ueanWTDRc`mDfqC*ggt%\*qt%N=8IZ`?>dodSki=5;dS)!0Mr0hV=gURZ5`3M<V&S(]&>:-%^=VC?YC;0EmOFfCNnI4?'s<HI9uuT6F1OJX'X*_$+m(I)k6a8BHVUXW1tIH#>'jp02mKgf3EK0T0@h[g[AJ!@Oj?%O($LmUMj9T,%i7>t@@T%5ekEL+Whk&qc-5kt4Z#^caf#'7:jJREScKA]*BhS[Z3HGl0ROIa3)JMmpanfb!m^tenI1!t<rM<O5;rNN9rR*3)/e=se%TUkWjV_%=ZHX]8Z;nXG'BTcY/<TkXIFm8C/-7'Mod#<QTS#Y^chk,e0HW2^F<H"]!lFP#PGmq90?*"fA^[=t<Cm8$9/*48n*Bof\%6Bu,LUFr`sb_Unj<6sF)Hc5gFP$;7AeoQ+s.l=7'\jm>?=1CD,]c"_'gJ8^[$.0:4PQn%o?J1R;LM;0`K?^aG:P2T<h?K@fGBUMA%ZMV)UHu&HF3Y_/BS,7!-H.'9g]SC>J59DN3RC/3dMr[<Nj!4:/VS&>,LMc&JaR43-20YHIcI'bRPd#;!TDN9'/HslhPm5,NGODN<%]Hk-gWmmF77./t/TV#TUqYK67W\g9"2uGUZ3DQEJTaW.MpnT&,n)L-fO'j_#D>Mf-IU3YYs(cB>o@/ETr96&Nr7jLRhOdhdV:OAB%7QTAPbXrhfSiuk?=6Y"X20[VVDP`Ci5<"?,DV:/,G<?l3kM7B8/F)K3Z.,;L:OIm85_$m$ba6N&S([7I%pr=]Y;,l1[/FU@_OHT>%B@iou2MlkM&3ApiKl<FoHL'XJ]B(4unb-ii<-_?njNcCpar<aL12/o=qNe=?>SC&-Kd8n_B<c2BS'e$jo>c$o8u(1BAQrk?\(@*P%G/d.k9?iZ(9+lBEhX9H[TN.@?V2O`"f*Xeo8sJWMXQh\oD7[SDku#<$$4:SBVgirk7]eYPJgRnJek>[8^p70?17Qd5dS[9?\7Uq8%PZHA;);G&AZ*>a$Fk"&sZ)_+KF6u%fNgfd#d?SRQX*r/\3aL;$DrD"X'boT$R@ssn/+N23p>I:NUZR2k?/&#X>D_3Aj]q-%Sh8,"%4,R0k]cI98"&h3eXAiuO_XaJ/Wn>?i=gOZ3`N=9.ha&WF3?L<+4d;k1NkD6K_8W;Q=7CNG_HhW7S5B)Di[sc'.Vg&JrYd,qL++at%Bq4T"+LkZ04a!G`*_GY<f2;C9?GchD1Qh%iF4-E)of39Cj[UuRaK_afYt.oZG^il:bacp?gMs2LSnq<Ah!$*GZ'qYB,ILE03<LID%#4MD0:;qO6J%le/aLTpTh"PRu<d'Br7s8`H@7S9qGh3n>Z<Wt>S]pe4Fua#CpZ^0GZ)d'#_E-,!o;0@fq7g$)pK<#HEraD/+iu1-%k)F[)g1u[!^oBDF#3YG!$a=@U?pctV]#k)URKH[f(:2f'[jjCg@XlLpPEIK4W]>SEZY]2fUJ_S0_5ZQ3Z2grf!2>M/I264r8bm'f%.V#DuP5BJQ?ho[trOA(&:SN+14&giPF`T"(Z7>e$9DNUGAF&i`I///kT9o++9Y^![]9H)`IK0"=^>dnQqK45oiVf$)>frCL;YoI?%A4-^4V^+-eme'4f\`m>s\iq&_Fg#0(R9Y0_MSNHpqK4\qnZ@7?UM\3BorAe)eFUA&EmFQ$2H7N+IPoE*lJZ&6F+u_ooh.]NpMd<C%EFKSOh"?-"?a7D<'1#Up?GDHe)RoS)fp(dYlW634NCjE2npC=m]>g)jqn7Ht\,'+>!MoKs^Z#_@]3%l'qWV]D51R<THi8gHcLQ#h%HT=&IIB0!%@!fW>0/'eO\j'>3?HH1mPu"'QEj&iTWbY'ipN!I01"mL<YIj],HI$m*mU!ZP;Uh#al[=02*%Jgl<)?=S'&SE!ZKHT5%MJr/Tmor$Eob5M&k>jh=*0OXrodb2Sdb=0-]ma^3aV5oZWpKCb^ZiUcCXQSdE3EWRA!f'^Hb\19f[5tP/)%tUIT^BJ>(5r-5/+&R%iR7VuH9K57hT+67Hi8hUphJJ%<uq&3<QTU/NOJ6N?GC=:]=cZI<D1s<qPBKdl?),/ZI3L+B5fH9hs4A1Dl+q752>H_?$NDWc27:I%%+=@PO0@_XQuT06fD"gcd\V"[Ds4jcYMN9,WM7fgl?%BV+!k.PhWe1*q,mH!^LD(_3@h5mpkrT9-V7h(hs6WV0&p!IDGP+Ahs8m2%hJ9fOrJF3-\F7alHtB=#ebf,f987(sfm0c._Im+,)*[(]^RAf5kMGO&CWX0<YLin`rEd6$0qaqIL$S#1^Z%L+&Y7eM]mbeMlaYIu%o3AdXme*Vt\*WBd^C#9u+7AeP^=BE1oO,tXI`6nIP)ja8Y@"PBR-@3/ia0CZ>Q"mk,BXZ/$Z>W9HY&94qA%$Qk@W>s][s@^<kh8@%Ul&7;j]au2ZYOX5B?@i9`LB4q(2#T#qW2W*GQ]aB965G>H2<qE<a=^>Rs0[f1@86o__1DC?].Ui-%Yg4[)KG;8Sa`1=?<%'oHpj0%;.rl_`6=Uf+A<[U1[jeflg[Y_U6thd&^:`E]ei2[5;.F+"Ea)u]QA>)r:p',=dn543LUd)]aMNinMtB%E9_o@j.J3;pO;thc.pb>%r0taGl2@_kj4<LN#M3.;<u8!HPEQGk^%nsL[DSiE<r;3L$g[c@'?lBBpM/Kmp<FG>XSkB@0<Kls]3j,Tg\tt/4D^$[T,55F==;kT%>Lpo;ld.\>2fiV[S(\mj^:c_$I!kiG1]I1Ap*=m1\fZ:npbMUAokF20ksrp67kZ'moB6&^bY'WRpjR^,e-RMJa00Z@&&*F[+1Z`g%>oRjtZOc*Rp?&*C:R`.Ve">37`ofS#^'^`;.cC*Aea_oufH0nl;_l%@Bl>e[O2"J&8%3u_h^*8,e'`$oQVROoM$Kqs]T7n"+RqWe%Dt7T<p$8$Vbe^$iJF8G#hqh.VUn0J6F8J#slGA1WXbD%9mF15UCOPu,kOC"tHqBa%.QR.MoUFMO\r1TbEtVPUs3*Yj*T+UuCq/M9%@pUI-q96U!0J_WjS.PDFG&7"c1<*bfAF0P=`]U'_1GQN8rTD)7M4*rY9X3ElIpV*1RQH-XZX]mmD"Do+jtU2<).W9F-9B/pbgl;o%7!&%pp:gLtG3eb_e*3.[kf_\u`k-GfJ)25*7b>p4^M^lV54VS5(dSW6$MV$g):k>?rSo:'3@gK$^G2njR_Tm?DU9/PQg/B\ERlf0%f1l1r'L.pg/^dua>3a#Yl.(F(%;a@q]5[8D[/BfKf!]2R]a<69'C0[J@ST+SS'hi6e^M(\o"ed65G2,gp:Pd[f$]UeZT;BV&)*=u%?rk$+2i0\g1i$E)SCV1?2)e"dUU;!<La6`Ng9\FFbcYkgGT,AE3tgF7_p<`9bFSdLnf3PhG*]&rPpZDBhSIN^1Qn*;aBQjgD7A^T%]#Fr'mTR]<D><9,Ii`X8m_Ym6(=1n!88FBQ6>Q;Y*R,kZZ>@8gPoaeOW"sS+EhgY<X/j^k+3VEN[I'f[BK.b<;PdlD@7fiDV0,,0%]<f*$<2#.>qjPLl>IrHps39?ig\nBYhj/bG>7YX:]tO;:lcNB,3cuo$H1KtapYr7Ii$/fe-W^o62fkk2[l)j/_]isR!k-k#_.mFG%cQrO55'/JGJ&1(3:!m<Y+`TG[fcL5l]mc=)"-]2qHip]+)8KKW#(UJ2DpTd70_s\N"K_B<?iVj$P\n/ifUQ4APed@JpZDleHuh,1%ZiOHZ4$iM5/0qHNM3lNf@OU4JVuSp9KJiWh!R'"XHX9p!hFD&.j1Qd@J$(Ka@q1[7o#LN4q?d0Ah9u@U_RVXN6?@]nT?k.%C!pD6%r]Y^IYtFu,3B'[V'1BUcbq.l\9\>+PV@rP451kWo6<J$piM=$X`@@=+1Ms@Ro:^BDgZOo;)CJqXp(ntjGW0F6hm[Q;hZ?Y$4P3d8%G5_+i`=J(*hW*+>5UDQ;<eV-4I=EGmH2G.CP#@I3`L&)o&NP'&e`<Gi2QC#$jF8=m@eL=,,7,FBeW<"r[hchM]alV8Xio,('mTOo%g(_?$JCb0U7KMt<Rk<*45o]Usrn.u85.f-cIIhpIC]qK#H.WZF`kFF%L02DVjQgYg^rKCTGXJY*OsjdLCdUj:3$t/4:TPAn^CLeq%hZpO@gmH*r=pga!(ee%Qmk5=<j6FVVh\\i,RV7+@;*U[Q0`$+bS%RAK%1KZEr_B!rE=<!0Xht7QPn79dZ<HUV2i.buJ98Z;0MfGi%H.oT:f?OT^*QK98FIngA\K&g$#Xk#ce(N=hb:=^cd1Y_>@INDqnrS_XUI/B1h=%X:F*=;6FH]lu]2Md3X5!h'S!S&OY*S3hYjTsV%Pc,djOE@5Y,7poahcmGA=$n";5#8q3$+jb]];\[_&X*k9?Vb\h@dtbV6]#LW9$X%7p;_1ca(>peDKf(mLIDB.05:0Kk,"^c77A3r%XkEsrZ0W[u*3W\[6$<bnPWWE_]C@Ca2P:Kcg-<k'YnSALSE1;u]#6,LGe-7J]P"?`^"u?EaR_LfK=N:/>I]_]WiB9Em9:OuO"SX8%O,ard*?CW/&uV*Z#SHlX@2a?OTRq+mZ_%rXs+t^?d^UHlrtF?2V7qV-r_J4=`b7t,s!PZDp*ClRrtF?2CIs?F"i@ea(p]t$@_!KN%Qek?9,a+pm$psbS(<PfoG5+-l,ffjPgO_uA@,YtfD)<ku%ArokHU/F&f@+c.S\k;1&%-#!&+,>7H$r42+C[Hq\7*YY/Nugfm$dFm%S"ugoTqRD>F)K\9%:GcoR9E>S`IZ!D%IIgG$JcmZ]"NRHigYlbAokTk)\uT=PWNVR51l<srS29oGMhHuDt.;GS'.Sa'uoR1@h`q%%Dm^![e,9#RG%L:<]gXGJ$-'FDb50QDJ7[S_s21'6pT`c!D[e`%rr:5%_C4s[,!QD>Ap7U"Xrb%oJ,fFp2pcBRC<XD?BA<<-QhP9V%=')#srqC^"ro3&5lL&q*DIE2*hX\:&OhYpZEIW6kcqL5nAfN.0d,C>Lp<2ciDeo++B@j^O5%?m'rqp[4k2=S[V/Pfe^4"bKZVOmZ%fE]gHnE%i.@ru:-j7n9CHA7!>f#K:C_p:t+5N;A%NT&\Pk:8cuU\V:n2ZE410</q0W/o?ZBO;"6cJ%.5`5Y`>%nf"DI=eRh`ASuM%oNZFVkD**D3\J"P&<>(rh)jKYkG>ouNR>_ukGaa2f_[kE[-DHY!r@@en]1X,%rXCYD]bids38Da4L0=EI'PcF1&lIY[d>Ud9s70+%FVm#up!9EZ:)K15E7XD,@#&2/*+$rNB,d13dN3\uS36bE"kk/@Eu4P*==]Uj,OcM\'kkk=:VC@np@r59KE?XCL)2e;W3;"UNk6O>%?[i`Hjltc#7G29?;p2t$OB`1Y!AB7%odI3tI]*L;nR,tih(ST^_^$nDp%HbC_PYS3F5"3UH'+/"bXW1ba:LP6rVM49We7tsZr'j!%^^',WhbQaBfcR-fQ1#5A.dS6i'W$h_W]`RtmaI4KId&%Y`c=7HR$dMZ?YjQ-:JpJtQ`mjQNRjt>hsXjG=T4.;KejUjWF>VPi``G*%&N&Z12g_=#c$8f$nWe5N@Zi";:7q`rI+$s[&l(eBEE8En<Lu,0="_lU9!i5dT3b=^^Np=NpUq)U_ir7M?;6Vjp'(]n*dr/>n_ora%05'k;nlg58ZU$.fb/PC]SY)=]SWtksCaT%EMesW3Xk`8)iie]PV]l8o=e.Z>lc9/[>kVo4<`o(&k^csX^@rQFI_E9Oqt.*XCObI-%HtPN^fdjc\Q9A.h.,qlW_FX0FGs8T,.s5#7N=PsIEH!M"OpOJ]<BHbUd.m;;Di7P4hge>WLJtkFc\M3V.N?(?J*!!-3((aLiRpo3%))`!HV;WeLboWGuqf?+#h2B&ZNWk!4J+/$F*<1`XpXZ.NXQ*s#=`$k\`9h/`)V<HhN7^3f_^i.gB+4sj8:5ilF>J$JQKA6>I-d@)%<mYkfB"h"J&QMqqjM[B&$CRDG![6%Y+^q0L,aD-X=T&'(PaQ-&B_h%W1=I4RfQegg!h-l*;[#iJO"@@N$N5]8&KeP4K@J8pr5-$%%8DR(<$rTkgCMQB?=Ve-W_k":&dQ$dlk4_9\3<r_$D+lcRX2hDUgp'pfD4mel-F-d7.3K%1XVPCo:M29lWAJ1X4k$nKl%5nLHR$RU%Z&(i8fnt_.ds&@FD*m-uo>YfE9'.kP*-Z%op=\W#:005#Ko^LkK;:,\qhm9[5nSs[6I3b4#S1)p,]9Xp\OgGH-Hp;#h5BC'J@;%.%&[Sl]9o[QGM3p-ECu*_Q-e!\tNg6_TnX=:FDaX(</%f\ua)88iL6>$-E]:(ifmkuJmks],/4GB>B#PB_j'ceX]9=>B:7`cbZ>&Kg%=K.KY7p!ZO0$]sB>##9WI[cl`)Kk5Wg6%B+FgN\"Hg9T(mi\E)<><R&C]Hft58MAG(>,A]Yt3^g'p&?n8.IJ26MWh]ak?&AnrH4[%FFE5+d!ZVMPD9SF/!6>1?sfIS/<Ynk0iK?Ag0lSZl#aJn'I^LncY3QtC%frn[61?%r2/QIm`fgAm5KIjs5k9(5R2XKgLmR2Q_ldA%0ffZ_hUV5@"2<]c/RA>QIFg[_^T5D04i%)#n/qWK`WNX_%62'45C>lRh]!7$mXRG\citZ[D"d8Vo?-N[kMQ#XkE#X%0Se$6qtC$$%Q%?IHIeO9-I5N\ZXg-10D0Rmo2Q/EFiE=&:GRONnr_MRN1%itN/GT/L^imV161n&e.gk5W58]d?H2HRLp4q0!f+/+P&,%C0l2NXm%d9\6]s5:pEr:(#bru(;1h@FusYm)hcpt^Z@a"9Mtg]8dG>#>]6\g>S*@L[U&e-[B]!5r_WY2^)Qq6iYH(W>:J"aoIA4;V=Jn9`d\%#24_jYnn)97D9"6HEB1!!^Zt/YmC`R0[pAojgIK;Lc![@0b;uN3CuoO!td&D")<7#7kl,]b7.ob,?V\9$J[$dhm-IP*<p+I$5)t$%GD*M-f^aHhVJTd>b6`cN^'sq\+XHW[Lt`J&JOXmsr"pbT@9?R_Eh^q3Qu?-S*9\Oi0N!CXG]N-[b\hu8Nh[M6Y?cAe37t16'h'gY%#gai+';-+&nt:ofF>)_$6JK<_$X+S]$l0k0Q:&P$\8ERl$aH+Uq4>cJ75Td+bDk:*!PmX7Y8D:a5W^.&j*G1;"Jqs:nY5OU(>oNu%=(pQ+"YJqP9S<bZ&$qo`K-FRDBa'g_V_K]^!hq\k!=i1]emfmj/+b[8'4g\k$4MiER\4*OQQaRG`/'ds5QW,8QlsFXJcdQa,&4,j%j(AAmT$d8W*b+$)p5oAX0EQFU6*[Y7gq\YQK8OOUb`,di4;b:c+A<="li9IBYR#*dDoI_QC#l!s;o8Y=Mo(bp"Yl8Upo^XuW6@Q5%]4`T@np!l<0m7BLU5!Xs@i+rMd'A`S'EXOcMo*PUNOMlf<Cn3ZPOf9;l%YKu&,["&q,Tj(/9MK6Z#)4:E?/F[0$K$sBn9YRT]dM;%N442$Hgc9r"^jn@Lo_*#;cmSH:k\>/.LE%#JlQF4-P?+`>*XJ.2*=4:pVMKAc6[,YZ#N_e*%)je+Aq@8A(r\n+jNF0MLiqZ3&m<Y%Nh'no&p*EMM:P'Y':""sN-J[5,T@Q.JVa0\4,&@hdu5=+^&oYIL+k=&CTqUcLCZEj\XO&X!c:@-MI@gKk$\pq`'kJ-\%N%Z+>t1n%)*m6K#[%f6g%(7UqTqI*`;pUZD.!Z&bX:FrSq-kB6t)&1e!LMmi3IQgK0%'ReOkW$rL#/Z$@lc!UXWM1!sNqr4U3=Q[rGN#?hl=g%j7C9F_ZFC02Ih2PiEHetPaIPo!;PEIV8rXc,q)<t"+t+\0tmaKe?OP4?uSAU7EU<&gt9Tl'F'4,H7nW5fI3>6f3s\X_kbu4:4p8h%`'Xc?"Ci0+a9$AA;Aa6C/Jn\*Pj>be$eE$]TY;hY4Shf]84YZ.Ib4](%ji&o3/e\L$rCDL@;gO,MA(g2S/>Bcbb"4t^+nk9&>B=[%Yp8HRZ:c8t+eP&?F:LerJ:U46D$R:hq(Sd=9O[.1"qon?B+p+P%/@Mg"HIR5Unek=d(T`X`oKnAS2dm8QQ5)HNm7KZp3l9V0cCk:%Vq?(OGXO8]-17Hl$3Rdn@0CC5i(Y%!)o`eaZ9jYe>p+SD1>e6/&#BBW@"d+EL\iWGG<(9lgaHJ063jSh'[*06[#G0[O@6.RFos\[%QoLKA]/2.1Fp#\jQNtcF3b"%]g4_+-Mujbb:b'<;cPD*Ar>(=hU7i,Aqk8NSa!aeM*un`l()5oa7P!FJ=EU>!gL_sA4(JXpNOEU-%5ZbnMTOB`L=KW,2()A:*g'^9BCj6d`cY28M4+\M(/nA@oRf'ridSUX/"!m51<Q9Bi("sdh,VWnMA>>M7lNPK:8mjid-imDWlV\6;%`s2sW"-s(K^,rRS,*9MO1Z[7P6TAhf%jU)\]W8=p!p_.k>UiBTYl+gR5X]u-[s48r)j_utTdRj=AfAC9`D!W!\irYS,_L8<PGU0I%2F(6_<'a?e,*YB4Q$RTnCCK>:Q_I2J<+*4V@3TMsd'U^NAqAAc&gK7Fa?`/.q^feZL`0[0*8GB>b`NMs@'h4&_Eo+/;%c,&"Q_G6%&<4ZM_gG=GJ7@B"O<c('=S3B,-CBGo6kfjIjeXZd:u0L'`BXP\&g[ml6ocs6DA7fCV*aHai!@.p+rA6a9<;u<:deji8<C>SL+i]9%%*F4Yhp[r#ig&o*m#TE-XWD[k?uun'!m+3i-].Z';LL9^SkpY^3I=Wi;JRK^aW7C)O\asY%eX$MB)<n*c6+0&=Iq$3FC<f4Z9/]e%iAE.VBK0]14U75k.Dc(;7Tmh(C^!);aK[;p$Kr\8ceq"G7jalT9oXEb5G0;8)rdUt_H^n=[^hY)bt9aUDZT5*`Al@7;S#\6L_,*N%>F%dZJAQ]pmM;c:)?VuB`6AMmR@'D4$XL1_0I)+B4Ab-U)L6m";(cT3YgMHs\?-r_`@*l7feH*<"sR5idEi_PL:/gQ<QIf6f3+'f%%b<WG0XRj5\E$dP3F6)#<M3FrQ!&j7"fh\!+6\/+<'rcG,6@(r]VlMKH3(3b&.SQY:bZi0>h_Yk*[4Q.NONBJCN4L:-lp*`$VQY,%&<^[f\B*rc*7OLe"aS1V84T#Y)BqEUY.;l(30CogRW$#oLe.4MH+@WuQFl*r#(^RLpL/;`+,*dufkF,pG!8N"Y&0-)#B]8eQW7N+%ZB4.[ngtB].\S("6dl;jG;`ZD'IIrX/BJ.%dhpXAAPP<@#N(;B*Mce)j3oTH-$AoWC%XmM\BqU/V_P1.H+9>sL1"e=>d$WPrlH!"%0ct'T,2OWr4,mp-94OdS\\WeK8b*a!S`2HXUuXV;eP`sDls!B"MZ_OqaOGca&^Y?B(@Mt@bWcFY2RBrm!MI!G7hGiqY^HWs<;=S^%Jc^+S&i]d]:d*;mA#+-kT)dLF;7aRVXjA5D&#aYN-YOcf#2g/fh%0a;iuKo0^eYc9.<]Y5B_T3UY/!p@\/tLb(WlpZiK?)=Yd0pP%$e4ObStOtl*<64K?*FN"hQGf^!MNeWoJPi0&E3m%!&m[S*cXRd"+c!4'RS>^fHK8lLab';'68dls.m+!IV:u[R1+dX/k4O>7Y(Rt%,=FXp'5V&AX>Zbl&D742Icrjm2mL4&iqTlP(g+Qh2Cq#bfmj2mA<U+ICgRrZ"e.dl.0QJ[S65V*nR.L\&HNM?WDc2"A<d3V!\G%F%0?dCkH/L[7Y-!6_,[?GG4l[QTD4q5s/>N<>!iC>S3BV]A6_[sV4Hr,HJs.^E0,jFq8&\=q-!)a^oJ4jqbf1*\A74*(>JPd%,MUdO%>@V4.7@cMk_&p1.gRug1aG.cJ9VqkVBYG14<Zd\g#ON&u/XSMURLCLY/oMpT>9DL$6l:rPYUg_1F9GSZZ?4'gUK`cb>?)r#K,3]C%PC3Sf$;!<Z?NL9^77;<bAL@KmO"VCU"T'QM;iGa!CH!`$`9K+tSY7r-6&Z/:r!]qpLFdnSA<!PQ9o,7:Mc'FKc`o5)T^f7c!p9WE%,r#A'Vir1(0LS2)U$9C.nMa=DU'>9:8.2++fZ_XfHI4'50hSlA!Wj<:.#d>&L.'T(B`Lfsfg%/5/BF"YC%?>l;A%Qm<=Z7g3&[37%!*!VS=?$kfm3^\qR<j!9+>`o3Ma@J.[tti:Qj]DNk\/)GV8E@Z"o]iQ)tH3KC&lY$:DAC,KtI\N[j#6,;?`b,,7&F'n<o2`-*`;h%CZ'q$-h86e?6!R6`lt:B=3;91%b?);27[C2\g7c.EfVr^]Fa(cl/$%jOSV?\=c%*i*)[!b[qOSF8eP_H;;VP:+>H+9LIb3Zdn#[?%NIEJ-2!?OJd=f1G&L(b>0`>.uN?XYog)5=O8brf[\+e:r@radFWGL"^%*ftMPPd6a\KAmh^?l(.?UJ<KpI0-f^u4V$Hj_p"lN@Fd%dtm.8&i7(j`[(:GFU*o%HM+nS#!I%p_hJ\t&G_/(!X9Tci]H'CA9X;t`<6>8d?*Ec\fAQ)FCg@(kttNpcO3jt<hF[$q_8IZJ?%Bi%W-u5cfnGIN2&IG!<+LNp6$Ls[jJ2IpNYKtia$rH48-'l!]>$^n[4$S3EK^8D6:M76)V?r&fd0c\Fdgm;Ck4o*\=mGUOVj;di\F_4%eX(dhBOI^c8S$6TCe(ofru)aG@pP6;1p#"0m0(E'^(RLm_'fSghbG:()pE-F\-8d\Kn84u,-9Kj"O"e*JbYqSg=0bn76C;k+Ft?7%-q)(#!s+C<ja7/_/I[m>!M^o59VADG!OI!9RW_/6",b/oY9BP2I+:;HFROb9BLL&c$YR3ASLljer"A23(QuPsSO,GQ(H4$Lp.gku%a>6Q@#/Pql8M&4bVU/+-p1B#P6bm8UMNp(%5[O^+Zc#Bu8"H\t@M/')Lla;])]`rVXN_5""e]eUAqJJ"_"7gSdkRt1!stf$7q&Dp%D%dS?&0cZGYkgbXJ]9q`ZV]r7]4J6XTjC'*3T=a`Q`!=F(eDjj"-(DWLdL51\ppZnd4jf>Lq"B%%WZB+#G=EFLF-JhJ\Xek^jYdn%`6]5C)A$,]B?Y<"*G?@2d&kUI-#@H28V=78YjGb*D8JD99Eg0"Xb^OHQXhuW8G=>d4J\&RLX]+niV4H/KYk=F$_;BV6;UZM,\5L>%dWB.F>S?oZc*qMMR&S!;MZi&8l8ul4`nE=*=*QMU_u^rHZpjj(3TS%Zmb,hDd7VF>-Jo-?(+g&1"=gasB*'l5#*$`q!=L:DP2bpU%kb'6TfGRN5o6fHN)5o@TYYgcT_(@B?'.F-A7"432Kc:9:P?*m7<DB&rOsM(TPX2T?"SHCocr?&3H%6TL6/O\rj!W`)"4-)WdBA]u%a;`%S&Oo`[l_nZ0@P&_>*]gY`OE?OU2N%,6_6VEul+,q\&W91:%at;-OAM.>^sm7N@q&on=/?l.T3aOtWWIUcPu0\b<S>6gDQYH.%'IV'2N)FNJ%YR5:HanWO9Igp=";[ctCR!lf6!;h&b?`p)eIa]4j/oc0:s+`5f2#kmG_$.2@EJ.nKSnm//4LPgd!\l\d7<4id<_;d%)th2R'!ed_^k@)FPU%\`f;I2U)LHObTUX/`NR``=0I=ih258i5@baje;SY>s;4g*Ai.W-iTc#?hG:TtA-SV/5@>L"$=3mXOa`XWH%;:Cl'7reb;T)#52%4.:,Lnl>V8W&^[e5Y*ecN^M`4tCZlp2O<L--Q^%Z!2bFm\"LSNa8cOP+rg&Aqlb3(`OLF9+K\mFZBrUQDa&c%p;?kJ7D,LOkiOk'Jd;IRMr"\o1iD<C63h_];F(mV>#TWM9>p1q[fD712:75Ra-^,7-CpeO_f8ga+NIo[0j6VK/OUA38F1"G/WBdN%=`(Z;9MDqc()o8mEYQ;q8dEm%7u@[*RiiJ9O_p1>WbRj]R,*[&(.o!%/<*0b/W>2O,@`\6!Mr$3K>*jA#Y$M&n+-1LFY@,QU45f0%E]aq*+X-EpUZeiUYXXlFV(cD72)%%/Se7j94@$?jj;urM.?-sfiFCtECjbL-nk!d2N@<U5JW]A3PU+Kk=<G*9[I3.$OYid_jibH8%p16KUrPF'o%Ru[T'I"O(U=Co1&P"/cl5*p2=j%>L?"+Tcg6[@=mE<:up8&.+c,utY.UPZW/N*'\'HNJ8ARKQ$AbVE)7GVI9bh(Zl%3U"`7^M)D*RZh+<gk:9[MZ,%ml!FYWb5SB'"Gs!)gYe#Vb[RY^Bgp7OXjH!G6,]gkilKNjNJQU&6/#uO\:\2qDTL7i_u=YoCu4bn%Ng"N<@MIi8.70PX[(p2KSjKY4='FVfei#6omkQTE%L7V7/E(7bh&$,RFCIU2G!JFf4NfP;!>at1N`h<-PVH<Lb59[H1!+XDE995u%251;nJSQ*lE*1mTeFk7@-o@`8r!['F6]9hF[E1ZrNl-C11hMXT'E`MF&MK/6.4dK8a;Ajcls3F='tJQ<J/ffQn2"K#$n0[:9-slZ%H#Q*-L*hjJD3(DH&0NVLnN,0]&r=mf$qr'*LtL,r,\S`'M:*_EF;6iQ"XFo(/^HM*o`QUU_.%1RJH!G#7Qs7/@^]%c@REQ[@n2>?%E-sd.5>W3;=*_&hRpQ4;\/+ZT19qQ+P"+NSn4"=G.:'6N!@91J>2S#R<((^/4*hGWmPBe9N&^r;@Bd-?%0\l>jE>^`O<))jhq8;<%kt)JYB1--.!ki(i&E/*s0]@V\dTtfjiG-5k2+#1e9s%l+L3cM66cp"#Lp1)4:Ghd+8Q33pS]G9DQLZil\8VK&)=9hP&46"n0"[lX%km!m$)Monu2"k%]@P-8.Km63Oe!OMNfQ*H5I_t9,m0qX<X;o^Ac4D!B``oV<)[b3(K)mi,bko.o9fj3"D&]'\"G!8%>%LAM*1CY.%_D.%+E,h*!)=&JQW]\adOK*-05lp/k2,,[r*Oa,uh_\f\E4#h"1VuU?iH_<j@.08!:ZLg<;U440?lXlF.!7Y3-kE_:3H?+e#:=7<%,]sC.E):>+rR9D6@4RMAWFO0jq^/UCa%gBqPee%Z[:f9!U:mt+&d,1B?_c+^1nliK'4\JR99QlMY"rh=Z*L-=X\3-#p8fu/Z5=Ls%[L&o8dp<k;[:`X?WBJFj)./9PCRrsCUdh(5.A?$i,44>#okF5'NkHnAU*Y\FRd*NWs)$Li/MpqD_8&H3<Cp)8f(EbE3C`a<Pgl9N%AnoX1PM.fJ*8g;2Gml]84#)eR^5R>rUai7U'Wj<m`'>"g.83TDV!Xn..b"$kC#-1*A[n&bHas:gKH//k!`7Sh1ZU=o'7uL-@9^0O%`*"3lKgEQtM(I'IK$\b#dcc@U7K,g[;>s+?)?*//$ad057D]='5B'BLE&;$$0T3*+E4JlG:6>6I`+2Mr?NOW-TE,?fcR;;Z;!?&t%N+`X3PS%1?^$MnF87FQl'a^WtQ`Ld!]a7OLFYU0<*E-cJ56b%aa?K#<U_dNS[Y9:_86WqL0d%EY6-_"rW?-^p&L/Q^,nOP0(C^Jq%<220>21RYA'pQc?ds(^48.^d@EJ1[gQ7"Fs--[i'PDk*&:=*`SG(UI^XKC4oW5+c@fh<k0-V0%FFD"I^JV:1>PenX'Fhui>?W]99%!XSB3![lP)LV1ZYZuGM=^`:$acohjQ,!kE22@o]q2Kau2Zs7K7]></r!Fn<]KeSf=A:R&D*Agt5rOXPh)R.:A0goJGFArG&MR%V8%*I`c%EFJ>^:=ggDN.dM8M(&o?GFl25E*cHoK#/gS6*s/Hb5*\HD8jBQ9&;*$$)PHiJWWJmM!+:PE&"JsK<>ZHpI.b-B,TI&EF?'d%F[9H#4r"3(KouF.M_PIGC.O;E.L(7\GTq0u"*c,46.l:3<-m\2YtUR.Kf5h@?(Jp<9t\6aP'"#l3[YXoUF",4T\$o[#Dm[1!j7L]%_miMFZ"0<3_FX&AXk(NPHM2ZZ44._q03jMS$QmEGG6"jW?CE)29H]2'']oD/+]FX0kshR3Q;k"@+#:,'TqKAhL4s=p*qq.GXsX;b%$'Y`iK\BA]UaQ+t[,$BPW$XkA&E/^rNaA#RS(]#dNquYN43N;a;!1'T]M0fmim$:-`T"#TW6:?n]?tLh$EFLi=g>sl$cSo2cdlu(%"FuH<`T;]WB3\f4am#@Hdp7oA'VZ!e$8W)A"t$f=/DP?=W!4)*,0_QJ]4`?"LIuKWoOV_(T:FbGm[p"FT"m=X0JmuMb/<M;+\cG`%@8FPV:_kJXaKZB#!bDfFY(9F[SfBZ25,U1:KV;$%T9qZ,$r-T%&VrQAabCLPb,u&!eqhC'9o/*P#T"3-,/?X\`BI[$O9Qi?f+Kj/%f,>:a*_OW7%:.<_RN?i05r5c:8(6o,fil63a\mXYP\j!#L1T2V,gB`UPZjo\T$B8#':OWt*\qC5ASl%0l9f[dMP*V&Bgm=)(<1Qd%DM%BZ<Y,ZVY%tn-I?ZkG#Z.Rd:Dsi&MPC3iF%uIH:7-E#*O7tY."MZE[DE?m[=JY)2:<YE.nPdY&Shpqa@1_[7&%bM$R^iI20)o:%5^BIXA2p\K,^^o<A:rslMoAdhG/SYWg-t&T%d3(j(CauC`I=m"r9`2^-B`/pM"8n@bb-0_'6GMC<n*f-2opfD8NCFPN\If];MU"r%Qa!FmZ,(bq6oeon(amktP(]osol4T<QJObu::>jg+g`$fP7AK5&e5gJBT/4K"VJ0($P.uIhKRj8]J49g[dAC'q.7K9IF:EV!Tfs$%ODrM_`E6UK<*dp:@l2q<ZgPq6?^-&[^jMOTk=H$ONS`?K&bdV!&/W%=T>=sF4X]cr3c`3+h,B.#cPW$"4/bc7"I^NMKAt^k,m,o9%%Gqdd8&imW_::rAK=99id!gS&*B8lUCY6TdA_VG;UZk0g#Z<bd5odJI3mO3nZVT/[2Ij1OR,jHP>XP#)Rk#\7B/n<p9:2@Wohl?s%$W;d7P[Z\Go^#4?k,Q=9AD9Cu:e;_X4!tfV7LoNSp%sRhE0T]5#8@(,nq88K#,kW.[ZF.0Ea9oec3ba:K"7O2%E^+/P727P0V$f4%PacBBB(S51J_Z)Q@7#VLcnun1I4=ga`1L/5B>g0_7\$6-M!L2V0]Ku:oI*,u6kP"pa%O/-40b8+LkJ<!*DV5=ZKYo+g4Y<j.6/Yb%X..q_8S?^D%g%J'81dBF-,nMm3<K>QS88T8k.5lE_dX/i(q!X]`9R?\Eem8BeY<*]A`]C7V+/qQl#YY@+G>,o;IU1kSC-nd$$;:S%>HujG<90e7+N._BOmdO\e79grH'V!?Q@ua&aV'PCC_VOCG<fAI4A6m<@uh$k%:P9t%5eCs".V'p,S2-D)OSq_$quIj*Zcfh)js]4%i,G9m@Aq!N<T&nGq3KiWjUkFi*b[eVC,D^p2*gG)XAail`*Cm.6CH1<MBm%QW(A,KDIHpnoDsdhf<E)9IO#Q%[A=(R/,(Re<\3?G%@AuO\8E@okK*0$"5\6o\86AlGJHZXXbne/%6fZ:s.:oNq5pq#LnJ8>b2[[fm>`f&i9f:9jQl@PaW^/2%/"0-h*r8%%a=tIR,5Ao.%eR2jgk'm4D`X'M;WQ%2fW@!1Yc:<[)>ffs/VJB[k$mW[Na-IVS2.G0q2!1K(b]84feL8?iSf!h3+]X[\_l3D?@h!#fqiP<fn^("M%B9ER*NIg<Y,c5B8Z65pul/&E;CY]J7WprDLn$IHG+X#(+';cZMZ07.DMhZhJV2!-$h4;eE7Ot:6#37;-1Z=.dG5rbDWA<!P`2H<r%_G[/Od;;YO.qu!QD8hV@j1#7$6c"2glALJ&/\0(?&9/\@LkL-!*uDd(n2Q=m9F)<3<X5G1Sq[BS6GTmc88KA>+cK.gf!iS+,l/PB%/s>B@D`86HoG"0m<c&K`B7!J6;JEK4ciMMqA&G!P]&p.g4gBZ1KQs)>-mtF6H(7+N2DLO]rk<5bm=MuqL^;s)+BTE&S6-pTB%Wse%e4(;96AY-a1",BILcBNQq8&114K4-p[t&/iJ6>+b>QS:tGQOUQ(d_JiRnGq+/6TQb"5DhXON#3Zl9Ujp2V\n!(ST(r&;K0jZ;2;C%*_G=3;$KM$EWRC)!>2SF=R7I!Q4&n.-e1i-]N?6GLe`.^BOXNAQ(t&b8QHaN3OG)A6(Pd4b:('V`+"+.\9tG."i=XmM'&t.l*fQt%l#q%PO=)6"'S=_l(h`Rb\O@rNaN(&"OQkYa^F_kF#jcc2SXL+\57raF*OEcc3ZEY@&92$8'_-1D_J$#Tnt(t#mKXq!!)KZtH@rAH%+WnVo+.Zk0a08rma\%2`=OA1KD\5">'N^<MA]cX1]8k*%7U+>Ypb/CJfNO4j+I1CLKFo)s#qu`%(pa`^+sf_6(`<+NHod&g(b/&3%i@uQc)REq6GIZVq-"L^:ekp?D#30D&/Au%6/3`NT3?m&6>0Imj//f$+6=M/"5B;2cYP1o=+hMS]=oW&tca?5iOJ`Wc!nh,&/E1@s%=Ir.d/ZMi3.Ti:]r5-KA7F4oY=k8'?j\+=$3$=iFguu[S,Vg<7B(Vj[F*hg6/3q<3@a*rd8Rm5$E4Kq$3PJ(aEOY"op[PI$4?J>D%B0mgLm3[Wska3J/'Hd\Q7'%o0YbU(O58mul%EK&s),i-m*@o'q*\9r$FclShp,/b;oj:0eGt8p4D>2H#NGePrmO@]mKot"%;U[aR%Sq]T$gb*cs.k"e[AJ>j$-m;`_!%qrd*WAaGA2,/a$;u\_9gPdNWZ]jY<8T;h]?A.6Ap,iuq>:ouK0+HmO/Gn7:aJU:*6C5YF9"[c%3T.ti81PC]6]*pr+c!%@jJ5?`s'KDufF2bq1se8O<Hpj8O*Tru'T5R1',[C.lUET\HSc\)!(r]97e"J".jCF)3&1p+MrbfYo._qM%>3pNV`#G!o(+B#7q4JlnE#/sF]I9.2D/gmt!fQh)di7ihdK7AiG!0FnkTcn>o49NkInSsZplt:\;P3Hk7HCf[e1hr]=4&&2k=URE%ZoE)j!\D``9=b,p7QPbD6QH=.[5SOirqDQXjTum6j2uGi2!0Z\8aM5Ojp![/M$@F=dE[bBToiQ9Gm,;cN&_F('&)b._ToqXHbiA'%itm*hi\8)Nk-ZIj\0>qRL3O[UW-pcA<"(8=^7]k-,8`Bh8Aqn+VeDa=S\Ralr[+C@Cs.8P*gi<73;dUjeR%8,fN7Mol.#?nRE"IS%cM>ee:QO\RDlt-#5G-7$],EZD]=WPVJ%g5Z-NcRTYF_?S+0Pm?Ibk#7,4LG:I<9RRH`ci<!Lm46qZ~>%AI9_PrivateDataEnd